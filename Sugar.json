[{
  "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/AuthenticationError.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 2060,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public enum AuthenticationError : <Type usr=\"s:SS\">String<\/Type>, <Type usr=\"s:s5ErrorP\">Error<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 66
          }
        ],
        "key.bodylength" : 227,
        "key.bodyoffset" : 114,
        "key.doc.column" : 13,
        "key.doc.comment" : "Errors that can be thrown during authentication",
        "key.doc.declaration" : "public enum AuthenticationError : String, Error",
        "key.doc.file" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/AuthenticationError.swift",
        "key.doc.full_as_xml" : "<Other file=\"\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/AuthenticationError.swift\" line=\"4\" column=\"13\"><Name>AuthenticationError<\/Name><USR>s:5Sugar19AuthenticationErrorO<\/USR><Declaration>public enum AuthenticationError : String, Error<\/Declaration><CommentParts><Abstract><Para>Errors that can be thrown during authentication<\/Para><\/Abstract><\/CommentParts><\/Other>",
        "key.doc.line" : 4,
        "key.doc.name" : "AuthenticationError",
        "key.doc.type" : "Other",
        "key.doclength" : 52,
        "key.docoffset" : 14,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 6,
            "key.offset" : 99
          },
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 5,
            "key.offset" : 107
          }
        ],
        "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/AuthenticationError.swift",
        "key.fully_annotated_decl" : "<decl.enum><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>enum<\/syntaxtype.keyword> <decl.name>AuthenticationError<\/decl.name> : <ref.struct usr=\"s:SS\">String<\/ref.struct>, <ref.protocol usr=\"s:s5ErrorP\">Error<\/ref.protocol><\/decl.enum>",
        "key.inheritedtypes" : [
          {
            "key.name" : "String"
          },
          {
            "key.name" : "Error"
          }
        ],
        "key.kind" : "source.lang.swift.decl.enum",
        "key.length" : 269,
        "key.name" : "AuthenticationError",
        "key.namelength" : 19,
        "key.nameoffset" : 78,
        "key.offset" : 73,
        "key.parsed_declaration" : "public enum AuthenticationError: String, Error",
        "key.parsed_scope.end" : 13,
        "key.parsed_scope.start" : 4,
        "key.substructure" : [
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.length" : 17,
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 119,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>case signingError<\/Declaration>",
                "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/AuthenticationError.swift",
                "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>signingError<\/decl.name><\/decl.enumelement>",
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.length" : 12,
                "key.name" : "signingError",
                "key.namelength" : 12,
                "key.nameoffset" : 124,
                "key.offset" : 124,
                "key.parsed_declaration" : "case signingError",
                "key.parsed_scope.end" : 5,
                "key.parsed_scope.start" : 5,
                "key.typename" : "(AuthenticationError.Type) -> AuthenticationError",
                "key.typeusr" : "$sy5Sugar19AuthenticationErrorOACmcD",
                "key.usr" : "s:5Sugar19AuthenticationErrorO07signingC0yA2CmF"
              }
            ]
          },
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.length" : 17,
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 141,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>case userNotFound<\/Declaration>",
                "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/AuthenticationError.swift",
                "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>userNotFound<\/decl.name><\/decl.enumelement>",
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.length" : 12,
                "key.name" : "userNotFound",
                "key.namelength" : 12,
                "key.nameoffset" : 146,
                "key.offset" : 146,
                "key.parsed_declaration" : "case userNotFound",
                "key.parsed_scope.end" : 6,
                "key.parsed_scope.start" : 6,
                "key.typename" : "(AuthenticationError.Type) -> AuthenticationError",
                "key.typeusr" : "$sy5Sugar19AuthenticationErrorOACmcD",
                "key.usr" : "s:5Sugar19AuthenticationErrorO12userNotFoundyA2CmF"
              }
            ]
          },
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.length" : 17,
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 163,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>case weakPassword<\/Declaration>",
                "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/AuthenticationError.swift",
                "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>weakPassword<\/decl.name><\/decl.enumelement>",
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.length" : 12,
                "key.name" : "weakPassword",
                "key.namelength" : 12,
                "key.nameoffset" : 168,
                "key.offset" : 168,
                "key.parsed_declaration" : "case weakPassword",
                "key.parsed_scope.end" : 7,
                "key.parsed_scope.start" : 7,
                "key.typename" : "(AuthenticationError.Type) -> AuthenticationError",
                "key.typeusr" : "$sy5Sugar19AuthenticationErrorOACmcD",
                "key.usr" : "s:5Sugar19AuthenticationErrorO12weakPasswordyA2CmF"
              }
            ]
          },
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.length" : 26,
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 185,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>case usernameAlreadyExists<\/Declaration>",
                "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/AuthenticationError.swift",
                "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>usernameAlreadyExists<\/decl.name><\/decl.enumelement>",
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.length" : 21,
                "key.name" : "usernameAlreadyExists",
                "key.namelength" : 21,
                "key.nameoffset" : 190,
                "key.offset" : 190,
                "key.parsed_declaration" : "case usernameAlreadyExists",
                "key.parsed_scope.end" : 8,
                "key.parsed_scope.start" : 8,
                "key.typename" : "(AuthenticationError.Type) -> AuthenticationError",
                "key.typeusr" : "$sy5Sugar19AuthenticationErrorOACmcD",
                "key.usr" : "s:5Sugar19AuthenticationErrorO21usernameAlreadyExistsyA2CmF"
              }
            ]
          },
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.length" : 22,
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 216,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>case incorrectPassword<\/Declaration>",
                "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/AuthenticationError.swift",
                "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>incorrectPassword<\/decl.name><\/decl.enumelement>",
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.length" : 17,
                "key.name" : "incorrectPassword",
                "key.namelength" : 17,
                "key.nameoffset" : 221,
                "key.offset" : 221,
                "key.parsed_declaration" : "case incorrectPassword",
                "key.parsed_scope.end" : 9,
                "key.parsed_scope.start" : 9,
                "key.typename" : "(AuthenticationError.Type) -> AuthenticationError",
                "key.typeusr" : "$sy5Sugar19AuthenticationErrorOACmcD",
                "key.usr" : "s:5Sugar19AuthenticationErrorO17incorrectPasswordyA2CmF"
              }
            ]
          },
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.length" : 25,
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 243,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>case incorrectOldPassword<\/Declaration>",
                "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/AuthenticationError.swift",
                "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>incorrectOldPassword<\/decl.name><\/decl.enumelement>",
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.length" : 20,
                "key.name" : "incorrectOldPassword",
                "key.namelength" : 20,
                "key.nameoffset" : 248,
                "key.offset" : 248,
                "key.parsed_declaration" : "case incorrectOldPassword",
                "key.parsed_scope.end" : 10,
                "key.parsed_scope.start" : 10,
                "key.typename" : "(AuthenticationError.Type) -> AuthenticationError",
                "key.typeusr" : "$sy5Sugar19AuthenticationErrorOACmcD",
                "key.usr" : "s:5Sugar19AuthenticationErrorO20incorrectOldPasswordyA2CmF"
              }
            ]
          },
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.length" : 41,
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 273,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>case passwordWithoutUsernameOrOldPassword<\/Declaration>",
                "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/AuthenticationError.swift",
                "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>passwordWithoutUsernameOrOldPassword<\/decl.name><\/decl.enumelement>",
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.length" : 36,
                "key.name" : "passwordWithoutUsernameOrOldPassword",
                "key.namelength" : 36,
                "key.nameoffset" : 278,
                "key.offset" : 278,
                "key.parsed_declaration" : "case passwordWithoutUsernameOrOldPassword",
                "key.parsed_scope.end" : 11,
                "key.parsed_scope.start" : 11,
                "key.typename" : "(AuthenticationError.Type) -> AuthenticationError",
                "key.typeusr" : "$sy5Sugar19AuthenticationErrorOACmcD",
                "key.usr" : "s:5Sugar19AuthenticationErrorO36passwordWithoutUsernameOrOldPasswordyA2CmF"
              }
            ]
          },
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.length" : 21,
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 319,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>case malformedPayload<\/Declaration>",
                "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/AuthenticationError.swift",
                "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>malformedPayload<\/decl.name><\/decl.enumelement>",
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.length" : 16,
                "key.name" : "malformedPayload",
                "key.namelength" : 16,
                "key.nameoffset" : 324,
                "key.offset" : 324,
                "key.parsed_declaration" : "case malformedPayload",
                "key.parsed_scope.end" : 12,
                "key.parsed_scope.start" : 12,
                "key.typename" : "(AuthenticationError.Type) -> AuthenticationError",
                "key.typeusr" : "$sy5Sugar19AuthenticationErrorOACmcD",
                "key.usr" : "s:5Sugar19AuthenticationErrorO16malformedPayloadyA2CmF"
              }
            ]
          }
        ],
        "key.typename" : "AuthenticationError.Type",
        "key.typeusr" : "$s5Sugar19AuthenticationErrorOmD",
        "key.usr" : "s:5Sugar19AuthenticationErrorO"
      },
      {
        "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
        "key.length" : 18,
        "key.name" : "MARK: - AbortError",
        "key.namelength" : 0,
        "key.nameoffset" : 0,
        "key.offset" : 347
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.annotated_decl" : "<Declaration>public enum AuthenticationError : <Type usr=\"s:SS\">String<\/Type>, <Type usr=\"s:s5ErrorP\">Error<\/Type><\/Declaration>",
        "key.bodylength" : 1477,
        "key.bodyoffset" : 409,
        "key.doc.column" : 13,
        "key.doc.declaration" : "public enum AuthenticationError : String, Error",
        "key.doc.file" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/AuthenticationError.swift",
        "key.doc.full_as_xml" : "<Other file=\"\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/AuthenticationError.swift\" line=\"4\" column=\"13\"><Name>AuthenticationError<\/Name><USR>s:5Sugar19AuthenticationErrorO<\/USR><Declaration>public enum AuthenticationError : String, Error<\/Declaration><CommentParts><Abstract><Para>Errors that can be thrown during authentication<\/Para><\/Abstract><\/CommentParts><\/Other>",
        "key.doc.line" : 4,
        "key.doc.name" : "AuthenticationError",
        "key.doc.type" : "Other",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 10,
            "key.offset" : 397
          }
        ],
        "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/AuthenticationError.swift",
        "key.fully_annotated_decl" : "<decl.enum><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>enum<\/syntaxtype.keyword> <decl.name>AuthenticationError<\/decl.name> : <ref.struct usr=\"s:SS\">String<\/ref.struct>, <ref.protocol usr=\"s:s5ErrorP\">Error<\/ref.protocol><\/decl.enum>",
        "key.inheritedtypes" : [
          {
            "key.name" : "AbortError"
          }
        ],
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 1521,
        "key.name" : "AuthenticationError",
        "key.namelength" : 19,
        "key.nameoffset" : 376,
        "key.offset" : 366,
        "key.parsed_declaration" : "extension AuthenticationError: AbortError",
        "key.parsed_scope.end" : 52,
        "key.parsed_scope.start" : 16,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var status: <Type usr=\"s:8NIOHTTP118HTTPResponseStatusO\">HTTPResponseStatus<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 446
              }
            ],
            "key.bodylength" : 512,
            "key.bodyoffset" : 485,
            "key.doc.column" : 16,
            "key.doc.comment" : "See `AbortError.status`",
            "key.doc.declaration" : "public var status: HTTPResponseStatus { get }",
            "key.doc.file" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/AuthenticationError.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/AuthenticationError.swift\" line=\"18\" column=\"16\"><Name>status<\/Name><USR>s:5Sugar19AuthenticationErrorO6status8NIOHTTP118HTTPResponseStatusOvp<\/USR><Declaration>public var status: HTTPResponseStatus { get }<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>AbortError.status<\/codeVoice><\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 18,
            "key.doc.name" : "status",
            "key.doc.type" : "Other",
            "key.doclength" : 28,
            "key.docoffset" : 414,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/AuthenticationError.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>status<\/decl.name>: <decl.var.type><ref.enum usr=\"s:8NIOHTTP118HTTPResponseStatusO\">HTTPResponseStatus<\/ref.enum><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 545,
            "key.name" : "status",
            "key.namelength" : 6,
            "key.nameoffset" : 457,
            "key.offset" : 453,
            "key.overrides" : [
              {
                "key.usr" : "s:5Vapor10AbortErrorP6status8NIOHTTP118HTTPResponseStatusOvp"
              }
            ],
            "key.parsed_declaration" : "public var status: HTTPResponseStatus",
            "key.parsed_scope.end" : 29,
            "key.parsed_scope.start" : 18,
            "key.typename" : "HTTPResponseStatus",
            "key.typeusr" : "$s8NIOHTTP118HTTPResponseStatusOD",
            "key.usr" : "s:5Sugar19AuthenticationErrorO6status8NIOHTTP118HTTPResponseStatusOvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var reason: <Type usr=\"s:SS\">String<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1036
              }
            ],
            "key.bodylength" : 821,
            "key.bodyoffset" : 1063,
            "key.doc.column" : 16,
            "key.doc.comment" : "See `AbortError.reason`",
            "key.doc.declaration" : "public var reason: String { get }",
            "key.doc.file" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/AuthenticationError.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/AuthenticationError.swift\" line=\"32\" column=\"16\"><Name>reason<\/Name><USR>s:5Sugar19AuthenticationErrorO6reasonSSvp<\/USR><Declaration>public var reason: String { get }<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>AbortError.reason<\/codeVoice><\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 32,
            "key.doc.name" : "reason",
            "key.doc.type" : "Other",
            "key.doclength" : 28,
            "key.docoffset" : 1004,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/AuthenticationError.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>reason<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 842,
            "key.name" : "reason",
            "key.namelength" : 6,
            "key.nameoffset" : 1047,
            "key.offset" : 1043,
            "key.overrides" : [
              {
                "key.usr" : "s:5Vapor10AbortErrorP6reasonSSvp"
              },
              {
                "key.usr" : "s:9Debugging10DebuggableP6reasonSSvp"
              }
            ],
            "key.parsed_declaration" : "public var reason: String",
            "key.parsed_scope.end" : 51,
            "key.parsed_scope.start" : 32,
            "key.typename" : "String",
            "key.typeusr" : "$sSSD",
            "key.usr" : "s:5Sugar19AuthenticationErrorO6reasonSSvp"
          }
        ],
        "key.typename" : "AuthenticationError.Type",
        "key.typeusr" : "$s5Sugar19AuthenticationErrorOmD",
        "key.usr" : "s:5Sugar19AuthenticationErrorO"
      },
      {
        "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
        "key.length" : 18,
        "key.name" : "MARK: - Debuggable",
        "key.namelength" : 0,
        "key.nameoffset" : 0,
        "key.offset" : 1892
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.annotated_decl" : "<Declaration>public enum AuthenticationError : <Type usr=\"s:SS\">String<\/Type>, <Type usr=\"s:s5ErrorP\">Error<\/Type><\/Declaration>",
        "key.bodylength" : 104,
        "key.bodyoffset" : 1954,
        "key.doc.column" : 13,
        "key.doc.declaration" : "public enum AuthenticationError : String, Error",
        "key.doc.file" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/AuthenticationError.swift",
        "key.doc.full_as_xml" : "<Other file=\"\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/AuthenticationError.swift\" line=\"4\" column=\"13\"><Name>AuthenticationError<\/Name><USR>s:5Sugar19AuthenticationErrorO<\/USR><Declaration>public enum AuthenticationError : String, Error<\/Declaration><CommentParts><Abstract><Para>Errors that can be thrown during authentication<\/Para><\/Abstract><\/CommentParts><\/Other>",
        "key.doc.line" : 4,
        "key.doc.name" : "AuthenticationError",
        "key.doc.type" : "Other",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 10,
            "key.offset" : 1942
          }
        ],
        "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/AuthenticationError.swift",
        "key.fully_annotated_decl" : "<decl.enum><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>enum<\/syntaxtype.keyword> <decl.name>AuthenticationError<\/decl.name> : <ref.struct usr=\"s:SS\">String<\/ref.struct>, <ref.protocol usr=\"s:s5ErrorP\">Error<\/ref.protocol><\/decl.enum>",
        "key.inheritedtypes" : [
          {
            "key.name" : "Debuggable"
          }
        ],
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 148,
        "key.name" : "AuthenticationError",
        "key.namelength" : 19,
        "key.nameoffset" : 1921,
        "key.offset" : 1911,
        "key.parsed_declaration" : "extension AuthenticationError: Debuggable",
        "key.parsed_scope.end" : 61,
        "key.parsed_scope.start" : 55,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var identifier: <Type usr=\"s:SS\">String<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1996
              }
            ],
            "key.bodylength" : 29,
            "key.bodyoffset" : 2027,
            "key.doc.column" : 16,
            "key.doc.comment" : "See `Debuggable.identifier`",
            "key.doc.declaration" : "public var identifier: String { get }",
            "key.doc.file" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/AuthenticationError.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/AuthenticationError.swift\" line=\"58\" column=\"16\"><Name>identifier<\/Name><USR>s:5Sugar19AuthenticationErrorO10identifierSSvp<\/USR><Declaration>public var identifier: String { get }<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>Debuggable.identifier<\/codeVoice><\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 58,
            "key.doc.name" : "identifier",
            "key.doc.type" : "Other",
            "key.doclength" : 32,
            "key.docoffset" : 1960,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/AuthenticationError.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>identifier<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 54,
            "key.name" : "identifier",
            "key.namelength" : 10,
            "key.nameoffset" : 2007,
            "key.offset" : 2003,
            "key.overrides" : [
              {
                "key.usr" : "s:9Debugging10DebuggableP10identifierSSvp"
              }
            ],
            "key.parsed_declaration" : "public var identifier: String",
            "key.parsed_scope.end" : 60,
            "key.parsed_scope.start" : 58,
            "key.typename" : "String",
            "key.typeusr" : "$sSSD",
            "key.usr" : "s:5Sugar19AuthenticationErrorO10identifierSSvp"
          }
        ],
        "key.typename" : "AuthenticationError.Type",
        "key.typeusr" : "$s5Sugar19AuthenticationErrorOmD",
        "key.usr" : "s:5Sugar19AuthenticationErrorO"
      }
    ]
  }
}, {
  "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/ExpireableJWTSigner.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 495,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public struct ExpireableJWTSigner<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 96
          }
        ],
        "key.bodylength" : 362,
        "key.bodyoffset" : 131,
        "key.doc.column" : 15,
        "key.doc.comment" : "A convenient combination of an expiration period and a signer",
        "key.doc.declaration" : "public struct ExpireableJWTSigner",
        "key.doc.file" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/ExpireableJWTSigner.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/ExpireableJWTSigner.swift\" line=\"5\" column=\"15\"><Name>ExpireableJWTSigner<\/Name><USR>s:5Sugar19ExpireableJWTSignerV<\/USR><Declaration>public struct ExpireableJWTSigner<\/Declaration><CommentParts><Abstract><Para>A convenient combination of an expiration period and a signer<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 5,
        "key.doc.name" : "ExpireableJWTSigner",
        "key.doc.type" : "Class",
        "key.doclength" : 66,
        "key.docoffset" : 30,
        "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/ExpireableJWTSigner.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>ExpireableJWTSigner<\/decl.name><\/decl.struct>",
        "key.kind" : "source.lang.swift.decl.struct",
        "key.length" : 391,
        "key.name" : "ExpireableJWTSigner",
        "key.namelength" : 19,
        "key.nameoffset" : 110,
        "key.offset" : 103,
        "key.parsed_declaration" : "public struct ExpireableJWTSigner",
        "key.parsed_scope.end" : 17,
        "key.parsed_scope.start" : 5,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public let expirationPeriod: <Type usr=\"c:@T@NSTimeInterval\">TimeInterval<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 222
              }
            ],
            "key.doc.column" : 16,
            "key.doc.comment" : "The amount of time added to 'now' when setting the expiration time for a JWT",
            "key.doc.declaration" : "public let expirationPeriod: TimeInterval",
            "key.doc.file" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/ExpireableJWTSigner.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/ExpireableJWTSigner.swift\" line=\"8\" column=\"16\"><Name>expirationPeriod<\/Name><USR>s:5Sugar19ExpireableJWTSignerV16expirationPeriodSdvp<\/USR><Declaration>public let expirationPeriod: TimeInterval<\/Declaration><CommentParts><Abstract><Para>The amount of time added to ‘now’ when setting the expiration time for a JWT<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 8,
            "key.doc.name" : "expirationPeriod",
            "key.doc.type" : "Other",
            "key.doclength" : 81,
            "key.docoffset" : 137,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/ExpireableJWTSigner.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>expirationPeriod<\/decl.name>: <decl.var.type><ref.typealias usr=\"c:@T@NSTimeInterval\">TimeInterval<\/ref.typealias><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 34,
            "key.name" : "expirationPeriod",
            "key.namelength" : 16,
            "key.nameoffset" : 233,
            "key.offset" : 229,
            "key.parsed_declaration" : "public let expirationPeriod: TimeInterval",
            "key.parsed_scope.end" : 8,
            "key.parsed_scope.start" : 8,
            "key.typename" : "Double",
            "key.typeusr" : "$sSdD",
            "key.usr" : "s:5Sugar19ExpireableJWTSignerV16expirationPeriodSdvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public let signer: <Type usr=\"s:3JWT9JWTSignerC\">JWTSigner<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 310
              }
            ],
            "key.doc.column" : 16,
            "key.doc.comment" : "The signer used for signing JWTs",
            "key.doc.declaration" : "public let signer: JWTSigner",
            "key.doc.file" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/ExpireableJWTSigner.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/ExpireableJWTSigner.swift\" line=\"11\" column=\"16\"><Name>signer<\/Name><USR>s:5Sugar19ExpireableJWTSignerV6signer3JWT0C0Cvp<\/USR><Declaration>public let signer: JWTSigner<\/Declaration><CommentParts><Abstract><Para>The signer used for signing JWTs<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 11,
            "key.doc.name" : "signer",
            "key.doc.type" : "Other",
            "key.doclength" : 37,
            "key.docoffset" : 269,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/ExpireableJWTSigner.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>signer<\/decl.name>: <decl.var.type><ref.class usr=\"s:3JWT9JWTSignerC\">JWTSigner<\/ref.class><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 21,
            "key.name" : "signer",
            "key.namelength" : 6,
            "key.nameoffset" : 321,
            "key.offset" : 317,
            "key.parsed_declaration" : "public let signer: JWTSigner",
            "key.parsed_scope.end" : 11,
            "key.parsed_scope.start" : 11,
            "key.typename" : "JWTSigner",
            "key.typeusr" : "$s3JWT9JWTSignerCD",
            "key.usr" : "s:5Sugar19ExpireableJWTSignerV6signer3JWT0C0Cvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public init(expirationPeriod: <Type usr=\"c:@T@NSTimeInterval\">TimeInterval<\/Type>, signer: <Type usr=\"s:3JWT9JWTSignerC\">JWTSigner<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 344
              }
            ],
            "key.bodylength" : 83,
            "key.bodyoffset" : 408,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/ExpireableJWTSigner.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>expirationPeriod<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.typealias usr=\"c:@T@NSTimeInterval\">TimeInterval<\/ref.typealias><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>signer<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:3JWT9JWTSignerC\">JWTSigner<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 141,
            "key.name" : "init(expirationPeriod:signer:)",
            "key.namelength" : 55,
            "key.nameoffset" : 351,
            "key.offset" : 351,
            "key.parsed_declaration" : "public init(expirationPeriod: TimeInterval, signer: JWTSigner)",
            "key.parsed_scope.end" : 16,
            "key.parsed_scope.start" : 13,
            "key.substructure" : [

            ],
            "key.typename" : "(ExpireableJWTSigner.Type) -> (Double, JWTSigner) -> ExpireableJWTSigner",
            "key.typeusr" : "$s16expirationPeriod6signer5Sugar19ExpireableJWTSignerVSd_3JWT0F0CtcD",
            "key.usr" : "s:5Sugar19ExpireableJWTSignerV16expirationPeriod6signerACSd_3JWT0C0Ctcfc"
          }
        ],
        "key.typename" : "ExpireableJWTSigner.Type",
        "key.typeusr" : "$s5Sugar19ExpireableJWTSignerVmD",
        "key.usr" : "s:5Sugar19ExpireableJWTSignerV"
      }
    ]
  }
}, {
  "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/ExpireableSubjectPayload.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 460,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public protocol ExpireableSubjectPayload : <Type usr=\"s:3JWT10JWTPayloadP\">JWTPayload<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 99
          }
        ],
        "key.bodylength" : 161,
        "key.bodyoffset" : 153,
        "key.doc.column" : 17,
        "key.doc.comment" : "A JWT Payload with an expiration time and authentication information",
        "key.doc.declaration" : "public protocol ExpireableSubjectPayload : JWTPayload",
        "key.doc.file" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/ExpireableSubjectPayload.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/ExpireableSubjectPayload.swift\" line=\"5\" column=\"17\"><Name>ExpireableSubjectPayload<\/Name><USR>s:5Sugar24ExpireableSubjectPayloadP<\/USR><Declaration>public protocol ExpireableSubjectPayload : JWTPayload<\/Declaration><CommentParts><Abstract><Para>A JWT Payload with an expiration time and authentication information<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 5,
        "key.doc.name" : "ExpireableSubjectPayload",
        "key.doc.type" : "Class",
        "key.doclength" : 73,
        "key.docoffset" : 26,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 10,
            "key.offset" : 141
          }
        ],
        "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/ExpireableSubjectPayload.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>ExpireableSubjectPayload<\/decl.name> : <ref.protocol usr=\"s:3JWT10JWTPayloadP\">JWTPayload<\/ref.protocol><\/decl.protocol>",
        "key.inheritedtypes" : [
          {
            "key.name" : "JWTPayload"
          }
        ],
        "key.kind" : "source.lang.swift.decl.protocol",
        "key.length" : 209,
        "key.name" : "ExpireableSubjectPayload",
        "key.namelength" : 24,
        "key.nameoffset" : 115,
        "key.offset" : 106,
        "key.parsed_declaration" : "public protocol ExpireableSubjectPayload: JWTPayload",
        "key.parsed_scope.end" : 12,
        "key.parsed_scope.start" : 5,
        "key.runtime_name" : "_TtP4main24ExpireableSubjectPayload_",
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>var exp: <Type usr=\"s:3JWT15ExpirationClaimV\">ExpirationClaim<\/Type> { get }<\/Declaration>",
            "key.bodylength" : 5,
            "key.bodyoffset" : 223,
            "key.doc.column" : 9,
            "key.doc.comment" : "The payload's last valid time",
            "key.doc.declaration" : "var exp: ExpirationClaim { get }",
            "key.doc.file" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/ExpireableSubjectPayload.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/ExpireableSubjectPayload.swift\" line=\"8\" column=\"9\"><Name>exp<\/Name><USR>s:5Sugar24ExpireableSubjectPayloadP3exp3JWT15ExpirationClaimVvp<\/USR><Declaration>var exp: ExpirationClaim { get }<\/Declaration><CommentParts><Abstract><Para>The payload’s last valid time<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 8,
            "key.doc.name" : "exp",
            "key.doc.type" : "Other",
            "key.doclength" : 34,
            "key.docoffset" : 159,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/ExpireableSubjectPayload.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>exp<\/decl.name>: <decl.var.type><ref.struct usr=\"s:3JWT15ExpirationClaimV\">ExpirationClaim<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 32,
            "key.name" : "exp",
            "key.namelength" : 3,
            "key.nameoffset" : 201,
            "key.offset" : 197,
            "key.parsed_declaration" : "var exp: ExpirationClaim",
            "key.parsed_scope.end" : 8,
            "key.parsed_scope.start" : 8,
            "key.typename" : "ExpirationClaim",
            "key.typeusr" : "$s3JWT15ExpirationClaimVD",
            "key.usr" : "s:5Sugar24ExpireableSubjectPayloadP3exp3JWT15ExpirationClaimVvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>var sub: <Type usr=\"s:3JWT12SubjectClaimV\">SubjectClaim<\/Type> { get }<\/Declaration>",
            "key.bodylength" : 5,
            "key.bodyoffset" : 307,
            "key.doc.column" : 9,
            "key.doc.comment" : "Contains the information to authenticate",
            "key.doc.declaration" : "var sub: SubjectClaim { get }",
            "key.doc.file" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/ExpireableSubjectPayload.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/ExpireableSubjectPayload.swift\" line=\"11\" column=\"9\"><Name>sub<\/Name><USR>s:5Sugar24ExpireableSubjectPayloadP3sub3JWT0C5ClaimVvp<\/USR><Declaration>var sub: SubjectClaim { get }<\/Declaration><CommentParts><Abstract><Para>Contains the information to authenticate<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 11,
            "key.doc.name" : "sub",
            "key.doc.type" : "Other",
            "key.doclength" : 45,
            "key.docoffset" : 235,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/ExpireableSubjectPayload.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>sub<\/decl.name>: <decl.var.type><ref.struct usr=\"s:3JWT12SubjectClaimV\">SubjectClaim<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 29,
            "key.name" : "sub",
            "key.namelength" : 3,
            "key.nameoffset" : 288,
            "key.offset" : 284,
            "key.parsed_declaration" : "var sub: SubjectClaim",
            "key.parsed_scope.end" : 11,
            "key.parsed_scope.start" : 11,
            "key.typename" : "SubjectClaim",
            "key.typeusr" : "$s3JWT12SubjectClaimVD",
            "key.usr" : "s:5Sugar24ExpireableSubjectPayloadP3sub3JWT0C5ClaimVvp"
          }
        ],
        "key.typename" : "ExpireableSubjectPayload.Protocol",
        "key.typeusr" : "$s5Sugar24ExpireableSubjectPayload_pmD",
        "key.usr" : "s:5Sugar24ExpireableSubjectPayloadP"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.annotated_decl" : "<Declaration>public protocol ExpireableSubjectPayload : <Type usr=\"s:3JWT10JWTPayloadP\">JWTPayload<\/Type><\/Declaration>",
        "key.bodylength" : 105,
        "key.bodyoffset" : 353,
        "key.doc.column" : 17,
        "key.doc.declaration" : "public protocol ExpireableSubjectPayload : JWTPayload",
        "key.doc.file" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/ExpireableSubjectPayload.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/ExpireableSubjectPayload.swift\" line=\"5\" column=\"17\"><Name>ExpireableSubjectPayload<\/Name><USR>s:5Sugar24ExpireableSubjectPayloadP<\/USR><Declaration>public protocol ExpireableSubjectPayload : JWTPayload<\/Declaration><CommentParts><Abstract><Para>A JWT Payload with an expiration time and authentication information<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 5,
        "key.doc.name" : "ExpireableSubjectPayload",
        "key.doc.type" : "Class",
        "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/ExpireableSubjectPayload.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>ExpireableSubjectPayload<\/decl.name> : <ref.protocol usr=\"s:3JWT10JWTPayloadP\">JWTPayload<\/ref.protocol><\/decl.protocol>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 142,
        "key.name" : "ExpireableSubjectPayload",
        "key.namelength" : 24,
        "key.nameoffset" : 327,
        "key.offset" : 317,
        "key.parsed_declaration" : "extension ExpireableSubjectPayload",
        "key.parsed_scope.end" : 20,
        "key.parsed_scope.start" : 14,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>func verify() throws<\/Declaration>",
            "key.bodylength" : 40,
            "key.bodyoffset" : 416,
            "key.doc.column" : 10,
            "key.doc.comment" : "See `JWTVerifiable.verify`",
            "key.doc.declaration" : "func verify() throws",
            "key.doc.file" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/ExpireableSubjectPayload.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/ExpireableSubjectPayload.swift\" line=\"17\" column=\"10\"><Name>verify()<\/Name><USR>s:5Sugar24ExpireableSubjectPayloadPAAE6verifyyyKF<\/USR><Declaration>func verify() throws<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>JWTVerifiable.verify<\/codeVoice><\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 17,
            "key.doc.name" : "verify()",
            "key.doc.type" : "Function",
            "key.doclength" : 31,
            "key.docoffset" : 359,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/ExpireableSubjectPayload.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>verify<\/decl.name>() <syntaxtype.keyword>throws<\/syntaxtype.keyword><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 63,
            "key.name" : "verify()",
            "key.namelength" : 8,
            "key.nameoffset" : 399,
            "key.offset" : 394,
            "key.parsed_declaration" : "func verify() throws",
            "key.parsed_scope.end" : 19,
            "key.parsed_scope.start" : 17,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:3JWT10JWTPayloadP6verify5usingyAA9JWTSignerC_tKF\">verify(using:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : ExpireableSubjectPayload> (Self) -> () throws -> ()",
            "key.typeusr" : "$syyKcD",
            "key.usr" : "s:5Sugar24ExpireableSubjectPayloadPAAE6verifyyyKF"
          }
        ],
        "key.typename" : "ExpireableSubjectPayload.Protocol",
        "key.typeusr" : "$s5Sugar24ExpireableSubjectPayload_pmD",
        "key.usr" : "s:5Sugar24ExpireableSubjectPayloadP"
      }
    ]
  }
}, {
  "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/HasPassword.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 2081,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public protocol HasPassword<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 97
          }
        ],
        "key.bodylength" : 415,
        "key.bodyoffset" : 126,
        "key.doc.column" : 17,
        "key.doc.comment" : "Types conforming to this protocol can create, validate, and verify passwords.",
        "key.doc.declaration" : "public protocol HasPassword",
        "key.doc.file" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/HasPassword.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/HasPassword.swift\" line=\"4\" column=\"17\"><Name>HasPassword<\/Name><USR>s:5Sugar11HasPasswordP<\/USR><Declaration>public protocol HasPassword<\/Declaration><CommentParts><Abstract><Para>Types conforming to this protocol can create, validate, and verify passwords.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 4,
        "key.doc.name" : "HasPassword",
        "key.doc.type" : "Class",
        "key.doclength" : 82,
        "key.docoffset" : 15,
        "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/HasPassword.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>HasPassword<\/decl.name><\/decl.protocol>",
        "key.kind" : "source.lang.swift.decl.protocol",
        "key.length" : 438,
        "key.name" : "HasPassword",
        "key.namelength" : 11,
        "key.nameoffset" : 113,
        "key.offset" : 104,
        "key.parsed_declaration" : "public protocol HasPassword",
        "key.parsed_scope.end" : 16,
        "key.parsed_scope.start" : 4,
        "key.runtime_name" : "_TtP4main11HasPassword_",
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>static var bCryptCost: <Type usr=\"s:Si\">Int<\/Type> { get }<\/Declaration>",
            "key.bodylength" : 5,
            "key.bodyoffset" : 208,
            "key.doc.column" : 16,
            "key.doc.comment" : "Complexity for BCrypt hashing algorithm.",
            "key.doc.declaration" : "static var bCryptCost: Int { get }",
            "key.doc.file" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/HasPassword.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/HasPassword.swift\" line=\"6\" column=\"16\"><Name>bCryptCost<\/Name><USR>s:5Sugar11HasPasswordP10bCryptCostSivpZ<\/USR><Declaration>static var bCryptCost: Int { get }<\/Declaration><CommentParts><Abstract><Para>Complexity for BCrypt hashing algorithm.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 6,
            "key.doc.name" : "bCryptCost",
            "key.doc.type" : "Other",
            "key.doclength" : 45,
            "key.docoffset" : 131,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/HasPassword.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>bCryptCost<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.static>",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 34,
            "key.name" : "bCryptCost",
            "key.namelength" : 10,
            "key.nameoffset" : 191,
            "key.offset" : 180,
            "key.parsed_declaration" : "static var bCryptCost: Int",
            "key.parsed_scope.end" : 6,
            "key.parsed_scope.start" : 6,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Sugar11HasPasswordPAAE10bCryptCostSivpZ\">bCryptCost<\/RelatedName>"
              }
            ],
            "key.typename" : "Int",
            "key.typeusr" : "$sSiD",
            "key.usr" : "s:5Sugar11HasPasswordP10bCryptCostSivpZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>static func validateStrength(of password: <Type usr=\"s:SS\">String<\/Type>) throws<\/Declaration>",
            "key.doc.column" : 17,
            "key.doc.comment" : "Validate strength of a password.\n\n- Parameter password: plain text password to validate.\n- Throws: if password is not strong enough.",
            "key.doc.declaration" : "static func validateStrength(of password: String) throws",
            "key.doc.file" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/HasPassword.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/HasPassword.swift\" line=\"12\" column=\"17\"><Name>validateStrength(of:)<\/Name><USR>s:5Sugar11HasPasswordP16validateStrength2ofySS_tKFZ<\/USR><Declaration>static func validateStrength(of password: String) throws<\/Declaration><CommentParts><Abstract><Para>Validate strength of a password.<\/Para><\/Abstract><Parameters><Parameter><Name>password<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>plain text password to validate.<\/Para><\/Discussion><\/Parameter><\/Parameters><ThrowsDiscussion><Para>if password is not strong enough.<\/Para><\/ThrowsDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 12,
            "key.doc.name" : "validateStrength(of:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "plain text password to validate."
                  }
                ],
                "name" : "password"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 160,
            "key.docoffset" : 220,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/HasPassword.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>validateStrength<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>of<\/decl.var.parameter.argument_label> <decl.var.parameter.name>password<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 56,
            "key.name" : "validateStrength(of:)",
            "key.namelength" : 37,
            "key.nameoffset" : 396,
            "key.offset" : 384,
            "key.parsed_declaration" : "static func validateStrength(of password: String) throws",
            "key.parsed_scope.end" : 12,
            "key.parsed_scope.start" : 12,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Sugar11HasPasswordPAAE16validateStrength2ofySS_tKFZ\">validateStrength(of: String) throws<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : HasPassword> (Self.Type) -> (String) throws -> ()",
            "key.typeusr" : "$s2ofySS_tKcD",
            "key.usr" : "s:5Sugar11HasPasswordP16validateStrength2ofySS_tKFZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>static var passwordKey: <Type usr=\"s:s15WritableKeyPathC\">WritableKeyPath<\/Type>&lt;<Type usr=\"s:5Sugar11HasPasswordP4Selfxmfp\">Self<\/Type>, <Type usr=\"s:SS\">String<\/Type>&gt; { get }<\/Declaration>",
            "key.bodylength" : 5,
            "key.bodyoffset" : 534,
            "key.doc.column" : 16,
            "key.doc.comment" : "Key path to the password",
            "key.doc.declaration" : "static var passwordKey: WritableKeyPath<Self, String> { get }",
            "key.doc.file" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/HasPassword.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/HasPassword.swift\" line=\"15\" column=\"16\"><Name>passwordKey<\/Name><USR>s:5Sugar11HasPasswordP11passwordKeys08WritableE4PathCyxSSGvpZ<\/USR><Declaration>static var passwordKey: WritableKeyPath&lt;Self, String&gt; { get }<\/Declaration><CommentParts><Abstract><Para>Key path to the password<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 15,
            "key.doc.name" : "passwordKey",
            "key.doc.type" : "Other",
            "key.doclength" : 29,
            "key.docoffset" : 446,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/HasPassword.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>passwordKey<\/decl.name>: <decl.var.type><ref.class usr=\"s:s15WritableKeyPathC\">WritableKeyPath<\/ref.class>&lt;<ref.generic_type_param usr=\"s:5Sugar11HasPasswordP4Selfxmfp\">Self<\/ref.generic_type_param>, <ref.struct usr=\"s:SS\">String<\/ref.struct>&gt;<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.static>",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 61,
            "key.name" : "passwordKey",
            "key.namelength" : 11,
            "key.nameoffset" : 490,
            "key.offset" : 479,
            "key.parsed_declaration" : "static var passwordKey: WritableKeyPath<Self, String>",
            "key.parsed_scope.end" : 15,
            "key.parsed_scope.start" : 15,
            "key.typename" : "WritableKeyPath<Self, String>",
            "key.typeusr" : "$ss15WritableKeyPathCyxSSGD",
            "key.usr" : "s:5Sugar11HasPasswordP11passwordKeys08WritableE4PathCyxSSGvpZ"
          }
        ],
        "key.typename" : "HasPassword.Protocol",
        "key.typeusr" : "$s5Sugar11HasPassword_pmD",
        "key.usr" : "s:5Sugar11HasPasswordP"
      },
      {
        "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
        "key.length" : 45,
        "key.name" : "MARK: - Overrideable default implementations.",
        "key.namelength" : 0,
        "key.nameoffset" : 0,
        "key.offset" : 547
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.annotated_decl" : "<Declaration>public protocol HasPassword<\/Declaration>",
        "key.bodylength" : 652,
        "key.bodyoffset" : 616,
        "key.doc.column" : 17,
        "key.doc.declaration" : "public protocol HasPassword",
        "key.doc.file" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/HasPassword.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/HasPassword.swift\" line=\"4\" column=\"17\"><Name>HasPassword<\/Name><USR>s:5Sugar11HasPasswordP<\/USR><Declaration>public protocol HasPassword<\/Declaration><CommentParts><Abstract><Para>Types conforming to this protocol can create, validate, and verify passwords.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 4,
        "key.doc.name" : "HasPassword",
        "key.doc.type" : "Class",
        "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/HasPassword.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>HasPassword<\/decl.name><\/decl.protocol>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 676,
        "key.name" : "HasPassword",
        "key.namelength" : 11,
        "key.nameoffset" : 603,
        "key.offset" : 593,
        "key.parsed_declaration" : "extension HasPassword",
        "key.parsed_scope.end" : 36,
        "key.parsed_scope.start" : 19,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static var bCryptCost: <Type usr=\"s:Si\">Int<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 816
              }
            ],
            "key.bodylength" : 23,
            "key.bodyoffset" : 851,
            "key.doc.column" : 23,
            "key.doc.comment" : "Default complexity for hashing algorithm. Higher values are more secure but significantly\nincrease the hashing time. Consider overriding and using a lower value for development.",
            "key.doc.declaration" : "public static var bCryptCost: Int { get }",
            "key.doc.file" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/HasPassword.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/HasPassword.swift\" line=\"23\" column=\"23\"><Name>bCryptCost<\/Name><USR>s:5Sugar11HasPasswordPAAE10bCryptCostSivpZ<\/USR><Declaration>public static var bCryptCost: Int { get }<\/Declaration><CommentParts><Abstract><Para>Default complexity for hashing algorithm. Higher values are more secure but significantly increase the hashing time. Consider overriding and using a lower value for development.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 23,
            "key.doc.name" : "bCryptCost",
            "key.doc.type" : "Other",
            "key.doclength" : 190,
            "key.docoffset" : 622,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/HasPassword.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>bCryptCost<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.static>",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 52,
            "key.name" : "bCryptCost",
            "key.namelength" : 10,
            "key.nameoffset" : 834,
            "key.offset" : 823,
            "key.parsed_declaration" : "public static var bCryptCost: Int",
            "key.parsed_scope.end" : 25,
            "key.parsed_scope.start" : 23,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Sugar11HasPasswordP10bCryptCostSivpZ\">bCryptCost<\/RelatedName>"
              }
            ],
            "key.typename" : "Int",
            "key.typeusr" : "$sSiD",
            "key.usr" : "s:5Sugar11HasPasswordPAAE10bCryptCostSivpZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static func validateStrength(of password: <Type usr=\"s:SS\">String<\/Type>) throws<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1094
              }
            ],
            "key.bodylength" : 107,
            "key.bodyoffset" : 1159,
            "key.doc.column" : 24,
            "key.doc.comment" : "Default implementation for validating password strength.\n\n- Parameter password: password string to validate.\n- Throws: PasswordError.weakPassword when password is not strong enough.",
            "key.doc.declaration" : "public static func validateStrength(of password: String) throws",
            "key.doc.file" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/HasPassword.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/HasPassword.swift\" line=\"31\" column=\"24\"><Name>validateStrength(of:)<\/Name><USR>s:5Sugar11HasPasswordPAAE16validateStrength2ofySS_tKFZ<\/USR><Declaration>public static func validateStrength(of password: String) throws<\/Declaration><CommentParts><Abstract><Para>Default implementation for validating password strength.<\/Para><\/Abstract><Parameters><Parameter><Name>password<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>password string to validate.<\/Para><\/Discussion><\/Parameter><\/Parameters><ThrowsDiscussion><Para>PasswordError.weakPassword when password is not strong enough.<\/Para><\/ThrowsDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 31,
            "key.doc.name" : "validateStrength(of:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "password string to validate."
                  }
                ],
                "name" : "password"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 209,
            "key.docoffset" : 881,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/HasPassword.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>validateStrength<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>of<\/decl.var.parameter.argument_label> <decl.var.parameter.name>password<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 166,
            "key.name" : "validateStrength(of:)",
            "key.namelength" : 37,
            "key.nameoffset" : 1113,
            "key.offset" : 1101,
            "key.parsed_declaration" : "public static func validateStrength(of password: String) throws",
            "key.parsed_scope.end" : 35,
            "key.parsed_scope.start" : 31,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Sugar11HasPasswordP16validateStrength2ofySS_tKFZ\">validateStrength(of: String) throws<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : HasPassword> (Self.Type) -> (String) throws -> ()",
            "key.typeusr" : "$s2ofySS_tKcD",
            "key.usr" : "s:5Sugar11HasPasswordPAAE16validateStrength2ofySS_tKFZ"
          }
        ],
        "key.typename" : "HasPassword.Protocol",
        "key.typeusr" : "$s5Sugar11HasPassword_pmD",
        "key.usr" : "s:5Sugar11HasPasswordP"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.annotated_decl" : "<Declaration>public protocol HasPassword<\/Declaration>",
        "key.bodylength" : 785,
        "key.bodyoffset" : 1294,
        "key.doc.column" : 17,
        "key.doc.declaration" : "public protocol HasPassword",
        "key.doc.file" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/HasPassword.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/HasPassword.swift\" line=\"4\" column=\"17\"><Name>HasPassword<\/Name><USR>s:5Sugar11HasPasswordP<\/USR><Declaration>public protocol HasPassword<\/Declaration><CommentParts><Abstract><Para>Types conforming to this protocol can create, validate, and verify passwords.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 4,
        "key.doc.name" : "HasPassword",
        "key.doc.type" : "Class",
        "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/HasPassword.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>HasPassword<\/decl.name><\/decl.protocol>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 809,
        "key.name" : "HasPassword",
        "key.namelength" : 11,
        "key.nameoffset" : 1281,
        "key.offset" : 1271,
        "key.parsed_declaration" : "extension HasPassword",
        "key.parsed_scope.end" : 56,
        "key.parsed_scope.start" : 38,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static func hashPassword(_ password: <Type usr=\"s:SS\">String<\/Type>) throws -&gt; <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1553
              }
            ],
            "key.bodylength" : 107,
            "key.bodyoffset" : 1623,
            "key.doc.column" : 24,
            "key.doc.comment" : "Hashes password.\n\n- Parameter password: password to validate and hash.\n- Returns: a HashedPassword value based on the input and `bCryptCost`.\n- Throws: PasswordError.weakPassword when password is not strong enough.",
            "key.doc.declaration" : "public static func hashPassword(_ password: String) throws -> String",
            "key.doc.file" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/HasPassword.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/HasPassword.swift\" line=\"44\" column=\"24\"><Name>hashPassword(_:)<\/Name><USR>s:5Sugar11HasPasswordPAAE04hashC0yS2SKFZ<\/USR><Declaration>public static func hashPassword(_ password: String) throws -&gt; String<\/Declaration><CommentParts><Abstract><Para>Hashes password.<\/Para><\/Abstract><Parameters><Parameter><Name>password<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>password to validate and hash.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>a HashedPassword value based on the input and <codeVoice>bCryptCost<\/codeVoice>.<\/Para><\/ResultDiscussion><ThrowsDiscussion><Para>PasswordError.weakPassword when password is not strong enough.<\/Para><\/ThrowsDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 44,
            "key.doc.name" : "hashPassword(_:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "password to validate and hash."
                  }
                ],
                "name" : "password"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "a HashedPassword value based on the input and `bCryptCost`."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 250,
            "key.docoffset" : 1299,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/HasPassword.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>hashPassword<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>password<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.function.returntype><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 171,
            "key.name" : "hashPassword(_:)",
            "key.namelength" : 32,
            "key.nameoffset" : 1572,
            "key.offset" : 1560,
            "key.parsed_declaration" : "public static func hashPassword(_ password: String) throws -> String",
            "key.parsed_scope.end" : 47,
            "key.parsed_scope.start" : 44,
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : HasPassword> (Self.Type) -> (String) throws -> String",
            "key.typeusr" : "$syS2SKcD",
            "key.usr" : "s:5Sugar11HasPasswordPAAE04hashC0yS2SKFZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func verify(_ password: <Type usr=\"s:SS\">String<\/Type>) throws -&gt; <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1932
              }
            ],
            "key.bodylength" : 90,
            "key.bodyoffset" : 1987,
            "key.doc.column" : 17,
            "key.doc.comment" : "Verifies whether provided password matches the hashed password.\n\n- Parameter password: password to verify.\n- Returns: a boolean indicating whether passwords match.",
            "key.doc.declaration" : "public func verify(_ password: String) throws -> Bool",
            "key.doc.file" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/HasPassword.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/HasPassword.swift\" line=\"53\" column=\"17\"><Name>verify(_:)<\/Name><USR>s:5Sugar11HasPasswordPAAE6verifyySbSSKF<\/USR><Declaration>public func verify(_ password: String) throws -&gt; Bool<\/Declaration><CommentParts><Abstract><Para>Verifies whether provided password matches the hashed password.<\/Para><\/Abstract><Parameters><Parameter><Name>password<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>password to verify.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>a boolean indicating whether passwords match.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 53,
            "key.doc.name" : "verify(_:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "password to verify."
                  }
                ],
                "name" : "password"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "a boolean indicating whether passwords match."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 191,
            "key.docoffset" : 1737,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/HasPassword.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>verify<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>password<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 139,
            "key.name" : "verify(_:)",
            "key.namelength" : 26,
            "key.nameoffset" : 1944,
            "key.offset" : 1939,
            "key.parsed_declaration" : "public func verify(_ password: String) throws -> Bool",
            "key.parsed_scope.end" : 55,
            "key.parsed_scope.start" : 53,
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : HasPassword> (Self) -> (String) throws -> Bool",
            "key.typeusr" : "$sySbSSKcD",
            "key.usr" : "s:5Sugar11HasPasswordPAAE6verifyySbSSKF"
          }
        ],
        "key.typename" : "HasPassword.Protocol",
        "key.typeusr" : "$s5Sugar11HasPassword_pmD",
        "key.usr" : "s:5Sugar11HasPasswordP"
      }
    ]
  }
}, {
  "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/HasReadablePassword.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 231,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public protocol HasReadablePassword<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 82
          }
        ],
        "key.bodylength" : 110,
        "key.bodyoffset" : 119,
        "key.doc.column" : 17,
        "key.doc.comment" : "Types conforming to this protocol can be used for login or register requests.",
        "key.doc.declaration" : "public protocol HasReadablePassword",
        "key.doc.file" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/HasReadablePassword.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/HasReadablePassword.swift\" line=\"2\" column=\"17\"><Name>HasReadablePassword<\/Name><USR>s:5Sugar19HasReadablePasswordP<\/USR><Declaration>public protocol HasReadablePassword<\/Declaration><CommentParts><Abstract><Para>Types conforming to this protocol can be used for login or register requests.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 2,
        "key.doc.name" : "HasReadablePassword",
        "key.doc.type" : "Class",
        "key.doclength" : 82,
        "key.docoffset" : 0,
        "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/HasReadablePassword.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>HasReadablePassword<\/decl.name><\/decl.protocol>",
        "key.kind" : "source.lang.swift.decl.protocol",
        "key.length" : 141,
        "key.name" : "HasReadablePassword",
        "key.namelength" : 19,
        "key.nameoffset" : 98,
        "key.offset" : 89,
        "key.parsed_declaration" : "public protocol HasReadablePassword",
        "key.parsed_scope.end" : 5,
        "key.parsed_scope.start" : 2,
        "key.runtime_name" : "_TtP4main19HasReadablePassword_",
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>static var readablePasswordKey: <Type usr=\"s:s7KeyPathC\">KeyPath<\/Type>&lt;<Type usr=\"s:5Sugar19HasReadablePasswordP4Selfxmfp\">Self<\/Type>, <Type usr=\"s:SS\">String<\/Type>&gt; { get }<\/Declaration>",
            "key.bodylength" : 5,
            "key.bodyoffset" : 222,
            "key.doc.column" : 16,
            "key.doc.comment" : "Key path to the readable password.",
            "key.doc.declaration" : "static var readablePasswordKey: KeyPath<Self, String> { get }",
            "key.doc.file" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/HasReadablePassword.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/HasReadablePassword.swift\" line=\"4\" column=\"16\"><Name>readablePasswordKey<\/Name><USR>s:5Sugar19HasReadablePasswordP08readableD3Keys0F4PathCyxSSGvpZ<\/USR><Declaration>static var readablePasswordKey: KeyPath&lt;Self, String&gt; { get }<\/Declaration><CommentParts><Abstract><Para>Key path to the readable password.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 4,
            "key.doc.name" : "readablePasswordKey",
            "key.doc.type" : "Other",
            "key.doclength" : 39,
            "key.docoffset" : 124,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/HasReadablePassword.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>readablePasswordKey<\/decl.name>: <decl.var.type><ref.class usr=\"s:s7KeyPathC\">KeyPath<\/ref.class>&lt;<ref.generic_type_param usr=\"s:5Sugar19HasReadablePasswordP4Selfxmfp\">Self<\/ref.generic_type_param>, <ref.struct usr=\"s:SS\">String<\/ref.struct>&gt;<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.static>",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 61,
            "key.name" : "readablePasswordKey",
            "key.namelength" : 19,
            "key.nameoffset" : 178,
            "key.offset" : 167,
            "key.parsed_declaration" : "static var readablePasswordKey: KeyPath<Self, String>",
            "key.parsed_scope.end" : 4,
            "key.parsed_scope.start" : 4,
            "key.typename" : "KeyPath<Self, String>",
            "key.typeusr" : "$ss7KeyPathCyxSSGD",
            "key.usr" : "s:5Sugar19HasReadablePasswordP08readableD3Keys0F4PathCyxSSGvpZ"
          }
        ],
        "key.typename" : "HasReadablePassword.Protocol",
        "key.typeusr" : "$s5Sugar19HasReadablePassword_pmD",
        "key.usr" : "s:5Sugar19HasReadablePasswordP"
      }
    ]
  }
}, {
  "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/HasReadableUsername.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 253,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public protocol HasReadableUsername<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 82
          }
        ],
        "key.bodylength" : 132,
        "key.bodyoffset" : 119,
        "key.doc.column" : 17,
        "key.doc.comment" : "Types conforming to this protocol can be used for login or register requests.",
        "key.doc.declaration" : "public protocol HasReadableUsername",
        "key.doc.file" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/HasReadableUsername.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/HasReadableUsername.swift\" line=\"2\" column=\"17\"><Name>HasReadableUsername<\/Name><USR>s:5Sugar19HasReadableUsernameP<\/USR><Declaration>public protocol HasReadableUsername<\/Declaration><CommentParts><Abstract><Para>Types conforming to this protocol can be used for login or register requests.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 2,
        "key.doc.name" : "HasReadableUsername",
        "key.doc.type" : "Class",
        "key.doclength" : 82,
        "key.docoffset" : 0,
        "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/HasReadableUsername.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>HasReadableUsername<\/decl.name><\/decl.protocol>",
        "key.kind" : "source.lang.swift.decl.protocol",
        "key.length" : 163,
        "key.name" : "HasReadableUsername",
        "key.namelength" : 19,
        "key.nameoffset" : 98,
        "key.offset" : 89,
        "key.parsed_declaration" : "public protocol HasReadableUsername",
        "key.parsed_scope.end" : 5,
        "key.parsed_scope.start" : 2,
        "key.runtime_name" : "_TtP4main19HasReadableUsername_",
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>static var readableUsernameKey: <Type usr=\"s:s7KeyPathC\">KeyPath<\/Type>&lt;<Type usr=\"s:5Sugar19HasReadableUsernameP4Selfxmfp\">Self<\/Type>, <Type usr=\"s:SS\">String<\/Type>&gt; { get }<\/Declaration>",
            "key.bodylength" : 5,
            "key.bodyoffset" : 244,
            "key.doc.column" : 16,
            "key.doc.comment" : "The keypath to the username, sometimes an email address.",
            "key.doc.declaration" : "static var readableUsernameKey: KeyPath<Self, String> { get }",
            "key.doc.file" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/HasReadableUsername.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/HasReadableUsername.swift\" line=\"4\" column=\"16\"><Name>readableUsernameKey<\/Name><USR>s:5Sugar19HasReadableUsernameP08readableD3Keys0F4PathCyxSSGvpZ<\/USR><Declaration>static var readableUsernameKey: KeyPath&lt;Self, String&gt; { get }<\/Declaration><CommentParts><Abstract><Para>The keypath to the username, sometimes an email address.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 4,
            "key.doc.name" : "readableUsernameKey",
            "key.doc.type" : "Other",
            "key.doclength" : 61,
            "key.docoffset" : 124,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/HasReadableUsername.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>readableUsernameKey<\/decl.name>: <decl.var.type><ref.class usr=\"s:s7KeyPathC\">KeyPath<\/ref.class>&lt;<ref.generic_type_param usr=\"s:5Sugar19HasReadableUsernameP4Selfxmfp\">Self<\/ref.generic_type_param>, <ref.struct usr=\"s:SS\">String<\/ref.struct>&gt;<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.static>",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 61,
            "key.name" : "readableUsernameKey",
            "key.namelength" : 19,
            "key.nameoffset" : 200,
            "key.offset" : 189,
            "key.parsed_declaration" : "static var readableUsernameKey: KeyPath<Self, String>",
            "key.parsed_scope.end" : 4,
            "key.parsed_scope.start" : 4,
            "key.typename" : "KeyPath<Self, String>",
            "key.typeusr" : "$ss7KeyPathCyxSSGD",
            "key.usr" : "s:5Sugar19HasReadableUsernameP08readableD3Keys0F4PathCyxSSGvpZ"
          }
        ],
        "key.typename" : "HasReadableUsername.Protocol",
        "key.typeusr" : "$s5Sugar19HasReadableUsername_pmD",
        "key.usr" : "s:5Sugar19HasReadableUsernameP"
      }
    ]
  }
}, {
  "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/HasUpdatablePassword.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 348,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public protocol HasUpdatablePassword<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 80
          }
        ],
        "key.bodylength" : 228,
        "key.bodyoffset" : 118,
        "key.doc.column" : 17,
        "key.doc.comment" : "Types conforming to this protocol can be used for change password requests.",
        "key.doc.declaration" : "public protocol HasUpdatablePassword",
        "key.doc.file" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/HasUpdatablePassword.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/HasUpdatablePassword.swift\" line=\"2\" column=\"17\"><Name>HasUpdatablePassword<\/Name><USR>s:5Sugar20HasUpdatablePasswordP<\/USR><Declaration>public protocol HasUpdatablePassword<\/Declaration><CommentParts><Abstract><Para>Types conforming to this protocol can be used for change password requests.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 2,
        "key.doc.name" : "HasUpdatablePassword",
        "key.doc.type" : "Class",
        "key.doclength" : 80,
        "key.docoffset" : 0,
        "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/HasUpdatablePassword.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>HasUpdatablePassword<\/decl.name><\/decl.protocol>",
        "key.kind" : "source.lang.swift.decl.protocol",
        "key.length" : 260,
        "key.name" : "HasUpdatablePassword",
        "key.namelength" : 20,
        "key.nameoffset" : 96,
        "key.offset" : 87,
        "key.parsed_declaration" : "public protocol HasUpdatablePassword",
        "key.parsed_scope.end" : 8,
        "key.parsed_scope.start" : 2,
        "key.runtime_name" : "_TtP4main20HasUpdatablePassword_",
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>static var updatablePasswordKey: <Type usr=\"s:s7KeyPathC\">KeyPath<\/Type>&lt;<Type usr=\"s:5Sugar20HasUpdatablePasswordP4Selfxmfp\">Self<\/Type>, <Type usr=\"s:SS\">String<\/Type>?&gt; { get }<\/Declaration>",
            "key.bodylength" : 5,
            "key.bodyoffset" : 226,
            "key.doc.column" : 16,
            "key.doc.comment" : "The keypath to the optional password.",
            "key.doc.declaration" : "static var updatablePasswordKey: KeyPath<Self, String?> { get }",
            "key.doc.file" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/HasUpdatablePassword.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/HasUpdatablePassword.swift\" line=\"4\" column=\"16\"><Name>updatablePasswordKey<\/Name><USR>s:5Sugar20HasUpdatablePasswordP09updatableD3Keys0F4PathCyxSSSgGvpZ<\/USR><Declaration>static var updatablePasswordKey: KeyPath&lt;Self, String?&gt; { get }<\/Declaration><CommentParts><Abstract><Para>The keypath to the optional password.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 4,
            "key.doc.name" : "updatablePasswordKey",
            "key.doc.type" : "Other",
            "key.doclength" : 42,
            "key.docoffset" : 123,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/HasUpdatablePassword.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>updatablePasswordKey<\/decl.name>: <decl.var.type><ref.class usr=\"s:s7KeyPathC\">KeyPath<\/ref.class>&lt;<ref.generic_type_param usr=\"s:5Sugar20HasUpdatablePasswordP4Selfxmfp\">Self<\/ref.generic_type_param>, <ref.struct usr=\"s:SS\">String<\/ref.struct>?&gt;<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.static>",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 63,
            "key.name" : "updatablePasswordKey",
            "key.namelength" : 20,
            "key.nameoffset" : 180,
            "key.offset" : 169,
            "key.parsed_declaration" : "static var updatablePasswordKey: KeyPath<Self, String?>",
            "key.parsed_scope.end" : 4,
            "key.parsed_scope.start" : 4,
            "key.typename" : "KeyPath<Self, String?>",
            "key.typeusr" : "$ss7KeyPathCyxSSSgGD",
            "key.usr" : "s:5Sugar20HasUpdatablePasswordP09updatableD3Keys0F4PathCyxSSSgGvpZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>static var oldPasswordKey: <Type usr=\"s:s7KeyPathC\">KeyPath<\/Type>&lt;<Type usr=\"s:5Sugar20HasUpdatablePasswordP4Selfxmfp\">Self<\/Type>, <Type usr=\"s:SS\">String<\/Type>?&gt; { get }<\/Declaration>",
            "key.bodylength" : 5,
            "key.bodyoffset" : 339,
            "key.doc.column" : 16,
            "key.doc.comment" : "The keypath to the optional old password.",
            "key.doc.declaration" : "static var oldPasswordKey: KeyPath<Self, String?> { get }",
            "key.doc.file" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/HasUpdatablePassword.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/HasUpdatablePassword.swift\" line=\"7\" column=\"16\"><Name>oldPasswordKey<\/Name><USR>s:5Sugar20HasUpdatablePasswordP03oldD3Keys0F4PathCyxSSSgGvpZ<\/USR><Declaration>static var oldPasswordKey: KeyPath&lt;Self, String?&gt; { get }<\/Declaration><CommentParts><Abstract><Para>The keypath to the optional old password.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 7,
            "key.doc.name" : "oldPasswordKey",
            "key.doc.type" : "Other",
            "key.doclength" : 46,
            "key.docoffset" : 238,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/HasUpdatablePassword.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>oldPasswordKey<\/decl.name>: <decl.var.type><ref.class usr=\"s:s7KeyPathC\">KeyPath<\/ref.class>&lt;<ref.generic_type_param usr=\"s:5Sugar20HasUpdatablePasswordP4Selfxmfp\">Self<\/ref.generic_type_param>, <ref.struct usr=\"s:SS\">String<\/ref.struct>?&gt;<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.static>",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 57,
            "key.name" : "oldPasswordKey",
            "key.namelength" : 14,
            "key.nameoffset" : 299,
            "key.offset" : 288,
            "key.parsed_declaration" : "static var oldPasswordKey: KeyPath<Self, String?>",
            "key.parsed_scope.end" : 7,
            "key.parsed_scope.start" : 7,
            "key.typename" : "KeyPath<Self, String?>",
            "key.typeusr" : "$ss7KeyPathCyxSSSgGD",
            "key.usr" : "s:5Sugar20HasUpdatablePasswordP03oldD3Keys0F4PathCyxSSSgGvpZ"
          }
        ],
        "key.typename" : "HasUpdatablePassword.Protocol",
        "key.typeusr" : "$s5Sugar20HasUpdatablePassword_pmD",
        "key.usr" : "s:5Sugar20HasUpdatablePasswordP"
      }
    ]
  }
}, {
  "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/HasUpdatableUsername.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 259,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public protocol HasUpdatableUsername<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 75
          }
        ],
        "key.bodylength" : 144,
        "key.bodyoffset" : 113,
        "key.doc.column" : 17,
        "key.doc.comment" : "Types conforming to this protocol can be used in user update requests.",
        "key.doc.declaration" : "public protocol HasUpdatableUsername",
        "key.doc.file" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/HasUpdatableUsername.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/HasUpdatableUsername.swift\" line=\"2\" column=\"17\"><Name>HasUpdatableUsername<\/Name><USR>s:5Sugar20HasUpdatableUsernameP<\/USR><Declaration>public protocol HasUpdatableUsername<\/Declaration><CommentParts><Abstract><Para>Types conforming to this protocol can be used in user update requests.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 2,
        "key.doc.name" : "HasUpdatableUsername",
        "key.doc.type" : "Class",
        "key.doclength" : 75,
        "key.docoffset" : 0,
        "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/HasUpdatableUsername.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>HasUpdatableUsername<\/decl.name><\/decl.protocol>",
        "key.kind" : "source.lang.swift.decl.protocol",
        "key.length" : 176,
        "key.name" : "HasUpdatableUsername",
        "key.namelength" : 20,
        "key.nameoffset" : 91,
        "key.offset" : 82,
        "key.parsed_declaration" : "public protocol HasUpdatableUsername",
        "key.parsed_scope.end" : 5,
        "key.parsed_scope.start" : 2,
        "key.runtime_name" : "_TtP4main20HasUpdatableUsername_",
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>static var updatableUsernameKey: <Type usr=\"s:s7KeyPathC\">KeyPath<\/Type>&lt;<Type usr=\"s:5Sugar20HasUpdatableUsernameP4Selfxmfp\">Self<\/Type>, <Type usr=\"s:SS\">String<\/Type>?&gt; { get }<\/Declaration>",
            "key.bodylength" : 5,
            "key.bodyoffset" : 250,
            "key.doc.column" : 16,
            "key.doc.comment" : "The keypath to the updatable username, sometimes an email address.",
            "key.doc.declaration" : "static var updatableUsernameKey: KeyPath<Self, String?> { get }",
            "key.doc.file" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/HasUpdatableUsername.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/HasUpdatableUsername.swift\" line=\"4\" column=\"16\"><Name>updatableUsernameKey<\/Name><USR>s:5Sugar20HasUpdatableUsernameP09updatableD3Keys0F4PathCyxSSSgGvpZ<\/USR><Declaration>static var updatableUsernameKey: KeyPath&lt;Self, String?&gt; { get }<\/Declaration><CommentParts><Abstract><Para>The keypath to the updatable username, sometimes an email address.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 4,
            "key.doc.name" : "updatableUsernameKey",
            "key.doc.type" : "Other",
            "key.doclength" : 71,
            "key.docoffset" : 118,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/HasUpdatableUsername.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>updatableUsernameKey<\/decl.name>: <decl.var.type><ref.class usr=\"s:s7KeyPathC\">KeyPath<\/ref.class>&lt;<ref.generic_type_param usr=\"s:5Sugar20HasUpdatableUsernameP4Selfxmfp\">Self<\/ref.generic_type_param>, <ref.struct usr=\"s:SS\">String<\/ref.struct>?&gt;<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.static>",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 63,
            "key.name" : "updatableUsernameKey",
            "key.namelength" : 20,
            "key.nameoffset" : 204,
            "key.offset" : 193,
            "key.parsed_declaration" : "static var updatableUsernameKey: KeyPath<Self, String?>",
            "key.parsed_scope.end" : 4,
            "key.parsed_scope.start" : 4,
            "key.typename" : "KeyPath<Self, String?>",
            "key.typeusr" : "$ss7KeyPathCyxSSSgGD",
            "key.usr" : "s:5Sugar20HasUpdatableUsernameP09updatableD3Keys0F4PathCyxSSSgGvpZ"
          }
        ],
        "key.typename" : "HasUpdatableUsername.Protocol",
        "key.typeusr" : "$s5Sugar20HasUpdatableUsername_pmD",
        "key.usr" : "s:5Sugar20HasUpdatableUsernameP"
      }
    ]
  }
}, {
  "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/JWTAuthenticatable.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 2518,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public protocol JWTAuthenticatable : <Type usr=\"s:14Authentication15AuthenticatableP\">Authenticatable<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 158
          }
        ],
        "key.bodylength" : 951,
        "key.bodyoffset" : 211,
        "key.doc.column" : 17,
        "key.doc.comment" : "Types confornming to this protocol will be able to be authenticated through an associated\nJWT payload.",
        "key.doc.declaration" : "public protocol JWTAuthenticatable : Authenticatable",
        "key.doc.file" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/JWTAuthenticatable.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/JWTAuthenticatable.swift\" line=\"7\" column=\"17\"><Name>JWTAuthenticatable<\/Name><USR>s:5Sugar18JWTAuthenticatableP<\/USR><Declaration>public protocol JWTAuthenticatable : Authenticatable<\/Declaration><CommentParts><Abstract><Para>Types confornming to this protocol will be able to be authenticated through an associated JWT payload.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 7,
        "key.doc.name" : "JWTAuthenticatable",
        "key.doc.type" : "Class",
        "key.doclength" : 111,
        "key.docoffset" : 47,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 15,
            "key.offset" : 194
          }
        ],
        "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/JWTAuthenticatable.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>JWTAuthenticatable<\/decl.name> : <ref.protocol usr=\"s:14Authentication15AuthenticatableP\">Authenticatable<\/ref.protocol><\/decl.protocol>",
        "key.inheritedtypes" : [
          {
            "key.name" : "Authenticatable"
          }
        ],
        "key.kind" : "source.lang.swift.decl.protocol",
        "key.length" : 998,
        "key.name" : "JWTAuthenticatable",
        "key.namelength" : 18,
        "key.nameoffset" : 174,
        "key.offset" : 165,
        "key.parsed_declaration" : "public protocol JWTAuthenticatable: Authenticatable",
        "key.parsed_scope.end" : 31,
        "key.parsed_scope.start" : 7,
        "key.runtime_name" : "_TtP4main18JWTAuthenticatable_",
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>associatedtype JWTPayload : <Type usr=\"s:5Sugar24ExpireableSubjectPayloadP\">ExpireableSubjectPayload<\/Type><\/Declaration>",
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/JWTAuthenticatable.swift",
            "key.fully_annotated_decl" : "<decl.associatedtype><syntaxtype.keyword>associatedtype<\/syntaxtype.keyword> <decl.name>JWTPayload<\/decl.name> : <ref.protocol usr=\"s:5Sugar24ExpireableSubjectPayloadP\">ExpireableSubjectPayload<\/ref.protocol><\/decl.associatedtype>",
            "key.kind" : "source.lang.swift.decl.associatedtype",
            "key.length" : 51,
            "key.name" : "JWTPayload",
            "key.namelength" : 10,
            "key.nameoffset" : 231,
            "key.offset" : 216,
            "key.parsed_declaration" : "associatedtype JWTPayload: ExpireableSubjectPayload",
            "key.parsed_scope.end" : 8,
            "key.parsed_scope.start" : 8,
            "key.typename" : "Self.JWTPayload.Type",
            "key.typeusr" : "$s10JWTPayload5Sugar18JWTAuthenticatablePQzmD",
            "key.usr" : "s:5Sugar18JWTAuthenticatableP10JWTPayloadQa"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>static func authenticate(using payload: <Type usr=\"s:5Sugar18JWTAuthenticatableP10JWTPayloadQa\">JWTPayload<\/Type>, on connection: <Type usr=\"s:11DatabaseKit0A11ConnectableP\">DatabaseConnectable<\/Type>) throws -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:5Sugar18JWTAuthenticatableP4Selfxmfp\">Self<\/Type>?&gt;<\/Declaration>",
            "key.doc.column" : 17,
            "key.doc.comment" : "Authenticates using the supplied payload and connection.\n\n- Parameters:\n  - payload: a payload containing user identifiable information\n  - connection: the connection which which to load the user\n- Returns: the authenticated user or nil, in the future.",
            "key.doc.declaration" : "static func authenticate(using payload: JWTPayload, on connection: DatabaseConnectable) throws -> Future<Self?>",
            "key.doc.file" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/JWTAuthenticatable.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/JWTAuthenticatable.swift\" line=\"16\" column=\"17\"><Name>authenticate(using:on:)<\/Name><USR>s:5Sugar18JWTAuthenticatableP12authenticate5using2on3NIO15EventLoopFutureCyxSgG10JWTPayloadQz_11DatabaseKit0K11Connectable_ptKFZ<\/USR><Declaration>static func authenticate(using payload: JWTPayload, on connection: DatabaseConnectable) throws -&gt; Future&lt;Self?&gt;<\/Declaration><CommentParts><Abstract><Para>Authenticates using the supplied payload and connection.<\/Para><\/Abstract><Parameters><Parameter><Name>payload<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>a payload containing user identifiable information<\/Para><\/Discussion><\/Parameter><Parameter><Name>connection<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>the connection which which to load the user<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>the authenticated user or nil, in the future.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 16,
            "key.doc.name" : "authenticate(using:on:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "a payload containing user identifiable information"
                  }
                ],
                "name" : "payload"
              },
              {
                "discussion" : [
                  {
                    "Para" : "the connection which which to load the user"
                  }
                ],
                "name" : "connection"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "the authenticated user or nil, in the future."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 296,
            "key.docoffset" : 273,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/JWTAuthenticatable.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>authenticate<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>using<\/decl.var.parameter.argument_label> <decl.var.parameter.name>payload<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.associatedtype usr=\"s:5Sugar18JWTAuthenticatableP10JWTPayloadQa\">JWTPayload<\/ref.associatedtype><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>on<\/decl.var.parameter.argument_label> <decl.var.parameter.name>connection<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:11DatabaseKit0A11ConnectableP\">DatabaseConnectable<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.generic_type_param usr=\"s:5Sugar18JWTAuthenticatableP4Selfxmfp\">Self<\/ref.generic_type_param>?&gt;<\/decl.function.returntype><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 133,
            "key.name" : "authenticate(using:on:)",
            "key.namelength" : 97,
            "key.nameoffset" : 585,
            "key.offset" : 573,
            "key.parsed_declaration" : "static func authenticate(",
            "key.parsed_scope.end" : 16,
            "key.parsed_scope.start" : 16,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Sugar18JWTAuthenticatablePAA6Fluent5ModelRzs25LosslessStringConvertible2IDAdEPRpzrlE12authenticate5using2on3NIO15EventLoopFutureCyxSgG10JWTPayloadACQz_11DatabaseKit0Q11Connectable_ptKFZ\">authenticate(using: JWTPayload, on: DatabaseConnectable) throws -&gt; Future&lt;Self?&gt;<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : JWTAuthenticatable> (Self.Type) -> (Self.JWTPayload, DatabaseConnectable) throws -> EventLoopFuture<Self?>",
            "key.typeusr" : "$s5using2on3NIO15EventLoopFutureCyxSgG10JWTPayloadQz_11DatabaseKit0H11Connectable_ptKcD",
            "key.usr" : "s:5Sugar18JWTAuthenticatableP12authenticate5using2on3NIO15EventLoopFutureCyxSgG10JWTPayloadQz_11DatabaseKit0K11Connectable_ptKFZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>func makePayload(expirationTime: <Type usr=\"s:10Foundation4DateV\">Date<\/Type>, on container: <Type usr=\"s:7Service9ContainerP\">Container<\/Type>) throws -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:5Sugar18JWTAuthenticatableP10JWTPayloadQa\">JWTPayload<\/Type>&gt;<\/Declaration>",
            "key.doc.column" : 10,
            "key.doc.comment" : "Makes JWT Payload that is able to identify the user during authentication.\n\n- Parameters:\n  - expirationTime: time until which the JWT containing this payload is valid\n  - container: a container that can be used to access services\n- Returns: JWT Payload that is able to identify the user",
            "key.doc.declaration" : "func makePayload(expirationTime: Date, on container: Container) throws -> Future<JWTPayload>",
            "key.doc.file" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/JWTAuthenticatable.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/JWTAuthenticatable.swift\" line=\"27\" column=\"10\"><Name>makePayload(expirationTime:on:)<\/Name><USR>s:5Sugar18JWTAuthenticatableP11makePayload14expirationTime2on3NIO15EventLoopFutureCy10JWTPayloadQzG10Foundation4DateV_7Service9Container_ptKF<\/USR><Declaration>func makePayload(expirationTime: Date, on container: Container) throws -&gt; Future&lt;JWTPayload&gt;<\/Declaration><CommentParts><Abstract><Para>Makes JWT Payload that is able to identify the user during authentication.<\/Para><\/Abstract><Parameters><Parameter><Name>expirationTime<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>time until which the JWT containing this payload is valid<\/Para><\/Discussion><\/Parameter><Parameter><Name>container<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>a container that can be used to access services<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>JWT Payload that is able to identify the user<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 27,
            "key.doc.name" : "makePayload(expirationTime:on:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "time until which the JWT containing this payload is valid"
                  }
                ],
                "name" : "expirationTime"
              },
              {
                "discussion" : [
                  {
                    "Para" : "a container that can be used to access services"
                  }
                ],
                "name" : "container"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "JWT Payload that is able to identify the user"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 331,
            "key.docoffset" : 712,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/JWTAuthenticatable.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>makePayload<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>expirationTime<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:10Foundation4DateV\">Date<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>on<\/decl.var.parameter.argument_label> <decl.var.parameter.name>container<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:7Service9ContainerP\">Container<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.associatedtype usr=\"s:5Sugar18JWTAuthenticatableP10JWTPayloadQa\">JWTPayload<\/ref.associatedtype>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 114,
            "key.name" : "makePayload(expirationTime:on:)",
            "key.namelength" : 80,
            "key.nameoffset" : 1052,
            "key.offset" : 1047,
            "key.parsed_declaration" : "func makePayload(",
            "key.parsed_scope.end" : 27,
            "key.parsed_scope.start" : 27,
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : JWTAuthenticatable> (Self) -> (Date, Container) throws -> EventLoopFuture<Self.JWTPayload>",
            "key.typeusr" : "$s14expirationTime2on3NIO15EventLoopFutureCy10JWTPayloadQzG10Foundation4DateV_7Service9Container_ptKcD",
            "key.usr" : "s:5Sugar18JWTAuthenticatableP11makePayload14expirationTime2on3NIO15EventLoopFutureCy10JWTPayloadQzG10Foundation4DateV_7Service9Container_ptKF"
          }
        ],
        "key.typename" : "JWTAuthenticatable.Protocol",
        "key.typeusr" : "$s5Sugar18JWTAuthenticatable_pmD",
        "key.usr" : "s:5Sugar18JWTAuthenticatableP"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.annotated_decl" : "<Declaration>public protocol JWTAuthenticatable : <Type usr=\"s:14Authentication15AuthenticatableP\">Authenticatable<\/Type><\/Declaration>",
        "key.bodylength" : 874,
        "key.bodyoffset" : 1195,
        "key.doc.column" : 17,
        "key.doc.declaration" : "public protocol JWTAuthenticatable : Authenticatable",
        "key.doc.file" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/JWTAuthenticatable.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/JWTAuthenticatable.swift\" line=\"7\" column=\"17\"><Name>JWTAuthenticatable<\/Name><USR>s:5Sugar18JWTAuthenticatableP<\/USR><Declaration>public protocol JWTAuthenticatable : Authenticatable<\/Declaration><CommentParts><Abstract><Para>Types confornming to this protocol will be able to be authenticated through an associated JWT payload.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 7,
        "key.doc.name" : "JWTAuthenticatable",
        "key.doc.type" : "Class",
        "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/JWTAuthenticatable.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>JWTAuthenticatable<\/decl.name> : <ref.protocol usr=\"s:14Authentication15AuthenticatableP\">Authenticatable<\/ref.protocol><\/decl.protocol>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 905,
        "key.name" : "JWTAuthenticatable",
        "key.namelength" : 18,
        "key.nameoffset" : 1175,
        "key.offset" : 1165,
        "key.parsed_declaration" : "extension JWTAuthenticatable",
        "key.parsed_scope.end" : 52,
        "key.parsed_scope.start" : 33,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func signToken(using signer: <Type usr=\"s:5Sugar19ExpireableJWTSignerV\">ExpireableJWTSigner<\/Type>, currentTime: <Type usr=\"s:10Foundation4DateV\">Date<\/Type> = .init(), on container: <Type usr=\"s:7Service9ContainerP\">Container<\/Type>) throws -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:SS\">String<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1565
              }
            ],
            "key.bodylength" : 335,
            "key.bodyoffset" : 1732,
            "key.doc.column" : 17,
            "key.doc.comment" : "Create a signed token by making a payload and a JWT and signing it with the provided signer.\n\n- Parameters:\n  - signer:\n  - currentTime: the time that is used to determine the expiration time\n  - container: a container that is used as the worker for the event loop\n- Returns: a future signed token as a string",
            "key.doc.declaration" : "public func signToken(using signer: ExpireableJWTSigner, currentTime: Date = .init(), on container: Container) throws -> Future<String>",
            "key.doc.file" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/JWTAuthenticatable.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/JWTAuthenticatable.swift\" line=\"41\" column=\"17\"><Name>signToken(using:currentTime:on:)<\/Name><USR>s:5Sugar18JWTAuthenticatablePAAE9signToken5using11currentTime2on3NIO15EventLoopFutureCySSGAA19ExpireableJWTSignerV_10Foundation4DateV7Service9Container_ptKF<\/USR><Declaration>public func signToken(using signer: ExpireableJWTSigner, currentTime: Date = .init(), on container: Container) throws -&gt; Future&lt;String&gt;<\/Declaration><CommentParts><Abstract><Para>Create a signed token by making a payload and a JWT and signing it with the provided signer.<\/Para><\/Abstract><Parameters><Parameter><Name>signer<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para><\/Para><\/Discussion><\/Parameter><Parameter><Name>currentTime<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>the time that is used to determine the expiration time<\/Para><\/Discussion><\/Parameter><Parameter><Name>container<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>a container that is used as the worker for the event loop<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>a future signed token as a string<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 41,
            "key.doc.name" : "signToken(using:currentTime:on:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : ""
                  }
                ],
                "name" : "signer"
              },
              {
                "discussion" : [
                  {
                    "Para" : "the time that is used to determine the expiration time"
                  }
                ],
                "name" : "currentTime"
              },
              {
                "discussion" : [
                  {
                    "Para" : "a container that is used as the worker for the event loop"
                  }
                ],
                "name" : "container"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "a future signed token as a string"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 361,
            "key.docoffset" : 1200,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/JWTAuthenticatable.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>signToken<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>using<\/decl.var.parameter.argument_label> <decl.var.parameter.name>signer<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:5Sugar19ExpireableJWTSignerV\">ExpireableJWTSigner<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>currentTime<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:10Foundation4DateV\">Date<\/ref.struct><\/decl.var.parameter.type> = .init()<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>on<\/decl.var.parameter.argument_label> <decl.var.parameter.name>container<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:7Service9ContainerP\">Container<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.struct usr=\"s:SS\">String<\/ref.struct>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 496,
            "key.name" : "signToken(using:currentTime:on:)",
            "key.namelength" : 128,
            "key.nameoffset" : 1577,
            "key.offset" : 1572,
            "key.parsed_declaration" : "public func signToken(\n    using signer: ExpireableJWTSigner,\n    currentTime: Date = .init(),\n    on container: Container\n) throws -> Future<String>",
            "key.parsed_scope.end" : 51,
            "key.parsed_scope.start" : 41,
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : JWTAuthenticatable> (Self) -> (ExpireableJWTSigner, Date, Container) throws -> EventLoopFuture<String>",
            "key.typeusr" : "$s5using11currentTime2on3NIO15EventLoopFutureCySSG5Sugar19ExpireableJWTSignerV_10Foundation4DateV7Service9Container_ptKcD",
            "key.usr" : "s:5Sugar18JWTAuthenticatablePAAE9signToken5using11currentTime2on3NIO15EventLoopFutureCySSGAA19ExpireableJWTSignerV_10Foundation4DateV7Service9Container_ptKF"
          }
        ],
        "key.typename" : "JWTAuthenticatable.Protocol",
        "key.typeusr" : "$s5Sugar18JWTAuthenticatable_pmD",
        "key.usr" : "s:5Sugar18JWTAuthenticatableP"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.annotated_decl" : "<Declaration>public protocol JWTAuthenticatable : <Type usr=\"s:14Authentication15AuthenticatableP\">Authenticatable<\/Type><\/Declaration>",
        "key.bodylength" : 352,
        "key.bodyoffset" : 2164,
        "key.doc.column" : 17,
        "key.doc.declaration" : "public protocol JWTAuthenticatable : Authenticatable",
        "key.doc.file" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/JWTAuthenticatable.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/JWTAuthenticatable.swift\" line=\"7\" column=\"17\"><Name>JWTAuthenticatable<\/Name><USR>s:5Sugar18JWTAuthenticatableP<\/USR><Declaration>public protocol JWTAuthenticatable : Authenticatable<\/Declaration><CommentParts><Abstract><Para>Types confornming to this protocol will be able to be authenticated through an associated JWT payload.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 7,
        "key.doc.name" : "JWTAuthenticatable",
        "key.doc.type" : "Class",
        "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/JWTAuthenticatable.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>JWTAuthenticatable<\/decl.name> : <ref.protocol usr=\"s:14Authentication15AuthenticatableP\">Authenticatable<\/ref.protocol><\/decl.protocol>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 445,
        "key.name" : "JWTAuthenticatable",
        "key.namelength" : 18,
        "key.nameoffset" : 2082,
        "key.offset" : 2072,
        "key.parsed_declaration" : "extension JWTAuthenticatable where\n    Self: Model,\n    Self.ID: LosslessStringConvertible",
        "key.parsed_scope.end" : 69,
        "key.parsed_scope.start" : 54,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static func authenticate(using payload: <Type usr=\"s:5Sugar18JWTAuthenticatableP10JWTPayloadQa\">JWTPayload<\/Type>, on connection: <Type usr=\"s:11DatabaseKit0A11ConnectableP\">DatabaseConnectable<\/Type>) throws -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:5Sugar18JWTAuthenticatablePAA6Fluent5ModelRzs25LosslessStringConvertible2IDAdEPRpzrlE4Selfxmfp\">Self<\/Type>?&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2203
              }
            ],
            "key.bodylength" : 169,
            "key.bodyoffset" : 2345,
            "key.doc.column" : 24,
            "key.doc.comment" : "See `JWTAuthenticatable`.",
            "key.doc.declaration" : "public static func authenticate(using payload: JWTPayload, on connection: DatabaseConnectable) throws -> Future<Self?>",
            "key.doc.file" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/JWTAuthenticatable.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/JWTAuthenticatable.swift\" line=\"59\" column=\"24\"><Name>authenticate(using:on:)<\/Name><USR>s:5Sugar18JWTAuthenticatablePAA6Fluent5ModelRzs25LosslessStringConvertible2IDAdEPRpzrlE12authenticate5using2on3NIO15EventLoopFutureCyxSgG10JWTPayloadACQz_11DatabaseKit0Q11Connectable_ptKFZ<\/USR><Declaration>public static func authenticate(using payload: JWTPayload, on connection: DatabaseConnectable) throws -&gt; Future&lt;Self?&gt;<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>JWTAuthenticatable<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 59,
            "key.doc.name" : "authenticate(using:on:)",
            "key.doc.type" : "Function",
            "key.doclength" : 30,
            "key.docoffset" : 2169,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/JWTAuthenticatable.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>authenticate<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>using<\/decl.var.parameter.argument_label> <decl.var.parameter.name>payload<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.associatedtype usr=\"s:5Sugar18JWTAuthenticatableP10JWTPayloadQa\">JWTPayload<\/ref.associatedtype><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>on<\/decl.var.parameter.argument_label> <decl.var.parameter.name>connection<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:11DatabaseKit0A11ConnectableP\">DatabaseConnectable<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.generic_type_param usr=\"s:5Sugar18JWTAuthenticatablePAA6Fluent5ModelRzs25LosslessStringConvertible2IDAdEPRpzrlE4Selfxmfp\">Self<\/ref.generic_type_param>?&gt;<\/decl.function.returntype><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 305,
            "key.name" : "authenticate(using:on:)",
            "key.namelength" : 97,
            "key.nameoffset" : 2222,
            "key.offset" : 2210,
            "key.parsed_declaration" : "public static func authenticate(\n    using payload: JWTPayload,\n    on connection: DatabaseConnectable\n) throws -> Future<Self?>",
            "key.parsed_scope.end" : 68,
            "key.parsed_scope.start" : 59,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:6Fluent5ModelP14AuthenticationAD22SessionAuthenticatableRzs25LosslessStringConvertible2IDACRpzrlE12authenticate07sessionI02on3NIO15EventLoopFutureCyxSgGAH_11DatabaseKit0Q11Connectable_ptFZ\">authenticate(sessionID:on:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Sugar18JWTAuthenticatableP12authenticate5using2on3NIO15EventLoopFutureCyxSgG10JWTPayloadQz_11DatabaseKit0K11Connectable_ptKFZ\">authenticate(using: JWTPayload, on: DatabaseConnectable) throws -&gt; Future&lt;Self?&gt;<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : Model, Self : JWTAuthenticatable, Self.ID : LosslessStringConvertible> (Self.Type) -> (Self.JWTPayload, DatabaseConnectable) throws -> EventLoopFuture<Self?>",
            "key.typeusr" : "$s5using2on3NIO15EventLoopFutureCyxSgG10JWTPayload5Sugar18JWTAuthenticatablePQz_11DatabaseKit0J11Connectable_ptKcD",
            "key.usr" : "s:5Sugar18JWTAuthenticatablePAA6Fluent5ModelRzs25LosslessStringConvertible2IDAdEPRpzrlE12authenticate5using2on3NIO15EventLoopFutureCyxSgG10JWTPayloadACQz_11DatabaseKit0Q11Connectable_ptKFZ"
          }
        ],
        "key.typename" : "JWTAuthenticatable.Protocol",
        "key.typeusr" : "$s5Sugar18JWTAuthenticatable_pmD",
        "key.usr" : "s:5Sugar18JWTAuthenticatableP"
      }
    ]
  }
}, {
  "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/JWTAuthenticationMiddleware.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 2323,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public final class JWTAuthenticationMiddleware&lt;A&gt; : <Type usr=\"s:5Vapor10MiddlewareP\">Middleware<\/Type> where A : <Type usr=\"s:5Sugar18JWTAuthenticatableP\">JWTAuthenticatable<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.final",
            "key.length" : 5,
            "key.offset" : 456
          },
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 449
          }
        ],
        "key.bodylength" : 1789,
        "key.bodyoffset" : 532,
        "key.doc.column" : 20,
        "key.doc.comment" : "A middleware that authenticates by extracting and verifying a JWT (JSON Web Token) from the\nAuthorization header. By default it will also load the user (or whatever authenticatable entity\nis used) from the database but this can be disabled for performance reasons if it is not needed.\n\nAuthentication is skipped if authentication has already occurred, e.g. in a previous middleware.",
        "key.doc.declaration" : "public final class JWTAuthenticationMiddleware<A> : Middleware where A : JWTAuthenticatable",
        "key.doc.discussion" : [
          {
            "Para" : "Authentication is skipped if authentication has already occurred, e.g. in a previous middleware."
          }
        ],
        "key.doc.file" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/JWTAuthenticationMiddleware.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/JWTAuthenticationMiddleware.swift\" line=\"10\" column=\"20\"><Name>JWTAuthenticationMiddleware<\/Name><USR>s:5Sugar27JWTAuthenticationMiddlewareC<\/USR><Declaration>public final class JWTAuthenticationMiddleware&lt;A&gt; : Middleware where A : JWTAuthenticatable<\/Declaration><CommentParts><Abstract><Para>A middleware that authenticates by extracting and verifying a JWT (JSON Web Token) from the Authorization header. By default it will also load the user (or whatever authenticatable entity is used) from the database but this can be disabled for performance reasons if it is not needed.<\/Para><\/Abstract><Discussion><Para>Authentication is skipped if authentication has already occurred, e.g. in a previous middleware.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 10,
        "key.doc.name" : "JWTAuthenticationMiddleware",
        "key.doc.type" : "Class",
        "key.doclength" : 402,
        "key.docoffset" : 47,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 10,
            "key.offset" : 520
          }
        ],
        "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/JWTAuthenticationMiddleware.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>final<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>JWTAuthenticationMiddleware<\/decl.name>&lt;<decl.generic_type_param usr=\"s:5Sugar27JWTAuthenticationMiddlewareC1Axmfp\"><decl.generic_type_param.name>A<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt; : <ref.protocol usr=\"s:5Vapor10MiddlewareP\">Middleware<\/ref.protocol> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>A : <ref.protocol usr=\"s:5Sugar18JWTAuthenticatableP\">JWTAuthenticatable<\/ref.protocol><\/decl.generic_type_requirement><\/decl.class>",
        "key.inheritedtypes" : [
          {
            "key.name" : "Middleware"
          }
        ],
        "key.kind" : "source.lang.swift.decl.class",
        "key.length" : 1860,
        "key.name" : "JWTAuthenticationMiddleware",
        "key.namelength" : 27,
        "key.nameoffset" : 468,
        "key.offset" : 462,
        "key.parsed_declaration" : "public final class JWTAuthenticationMiddleware<A: JWTAuthenticatable>: Middleware",
        "key.parsed_scope.end" : 61,
        "key.parsed_scope.start" : 10,
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>A : <Type usr=\"s:5Sugar18JWTAuthenticatableP\">JWTAuthenticatable<\/Type><\/Declaration>",
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 18,
                "key.offset" : 499
              }
            ],
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/JWTAuthenticationMiddleware.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>A<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:5Sugar18JWTAuthenticatableP\">JWTAuthenticatable<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
            "key.inheritedtypes" : [
              {
                "key.name" : "JWTAuthenticatable"
              }
            ],
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 21,
            "key.name" : "A",
            "key.namelength" : 1,
            "key.nameoffset" : 496,
            "key.offset" : 496,
            "key.parsed_declaration" : "public final class JWTAuthenticationMiddleware<A: JWTAuthenticatable>: Middleware",
            "key.parsed_scope.end" : 10,
            "key.parsed_scope.start" : 10,
            "key.typename" : "A.Type",
            "key.typeusr" : "$sxmD",
            "key.usr" : "s:5Sugar27JWTAuthenticationMiddlewareC1Axmfp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>let signer: <Type usr=\"s:3JWT9JWTSignerC\">JWTSigner<\/Type><\/Declaration>",
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/JWTAuthenticationMiddleware.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>signer<\/decl.name>: <decl.var.type><ref.class usr=\"s:3JWT9JWTSignerC\">JWTSigner<\/ref.class><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 21,
            "key.name" : "signer",
            "key.namelength" : 6,
            "key.nameoffset" : 541,
            "key.offset" : 537,
            "key.parsed_declaration" : "let signer: JWTSigner",
            "key.parsed_scope.end" : 11,
            "key.parsed_scope.start" : 11,
            "key.typename" : "JWTSigner",
            "key.typeusr" : "$s3JWT9JWTSignerCD",
            "key.usr" : "s:5Sugar27JWTAuthenticationMiddlewareC6signer3JWT9JWTSignerCvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>let shouldAuthenticate: <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/JWTAuthenticationMiddleware.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>shouldAuthenticate<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 28,
            "key.name" : "shouldAuthenticate",
            "key.namelength" : 18,
            "key.nameoffset" : 567,
            "key.offset" : 563,
            "key.parsed_declaration" : "let shouldAuthenticate: Bool",
            "key.parsed_scope.end" : 12,
            "key.parsed_scope.start" : 12,
            "key.typename" : "Bool",
            "key.typeusr" : "$sSbD",
            "key.usr" : "s:5Sugar27JWTAuthenticationMiddlewareC18shouldAuthenticateSbvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public init(signer: <Type usr=\"s:3JWT9JWTSignerC\">JWTSigner<\/Type>, shouldAuthenticate: <Type usr=\"s:Sb\">Bool<\/Type> = true)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 874
              }
            ],
            "key.bodylength" : 87,
            "key.bodyoffset" : 939,
            "key.doc.column" : 12,
            "key.doc.comment" : "Creates a new JWT Authentication Middleware\n\n- Parameters:\n  - signer: the signer which with to verify the JWTs\n  - shouldAuthenticate: whether full authentication (which usually includes a database\n    query) should be performed",
            "key.doc.declaration" : "public init(signer: JWTSigner, shouldAuthenticate: Bool = true)",
            "key.doc.file" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/JWTAuthenticationMiddleware.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/JWTAuthenticationMiddleware.swift\" line=\"20\" column=\"12\"><Name>init(signer:shouldAuthenticate:)<\/Name><USR>s:5Sugar27JWTAuthenticationMiddlewareC6signer18shouldAuthenticateACyxG3JWT9JWTSignerC_Sbtcfc<\/USR><Declaration>public init(signer: JWTSigner, shouldAuthenticate: Bool = true)<\/Declaration><CommentParts><Abstract><Para>Creates a new JWT Authentication Middleware<\/Para><\/Abstract><Parameters><Parameter><Name>signer<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>the signer which with to verify the JWTs<\/Para><\/Discussion><\/Parameter><Parameter><Name>shouldAuthenticate<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>whether full authentication (which usually includes a database query) should be performed<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 20,
            "key.doc.name" : "init(signer:shouldAuthenticate:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "the signer which with to verify the JWTs"
                  }
                ],
                "name" : "signer"
              },
              {
                "discussion" : [
                  {
                    "Para" : "whether full authentication (which usually includes a database query) should be performed"
                  }
                ],
                "name" : "shouldAuthenticate"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 273,
            "key.docoffset" : 597,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/JWTAuthenticationMiddleware.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>signer<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:3JWT9JWTSignerC\">JWTSigner<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>shouldAuthenticate<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.parameter.type> = true<\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 146,
            "key.name" : "init(signer:shouldAuthenticate:)",
            "key.namelength" : 56,
            "key.nameoffset" : 881,
            "key.offset" : 881,
            "key.parsed_declaration" : "public init(signer: JWTSigner, shouldAuthenticate: Bool = true)",
            "key.parsed_scope.end" : 23,
            "key.parsed_scope.start" : 20,
            "key.substructure" : [

            ],
            "key.typename" : "<A where A : JWTAuthenticatable> (JWTAuthenticationMiddleware<A>.Type) -> (JWTSigner, Bool) -> JWTAuthenticationMiddleware<A>",
            "key.typeusr" : "$s6signer18shouldAuthenticate5Sugar27JWTAuthenticationMiddlewareCyxG3JWT9JWTSignerC_SbtcD",
            "key.usr" : "s:5Sugar27JWTAuthenticationMiddlewareC6signer18shouldAuthenticateACyxG3JWT9JWTSignerC_Sbtcfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func respond(to req: <Type usr=\"s:5Vapor7RequestC\">Request<\/Type>, chainingTo next: <Type usr=\"s:5Vapor9ResponderP\">Responder<\/Type>) throws -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:5Vapor8ResponseC\">Response<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1066
              }
            ],
            "key.bodylength" : 1138,
            "key.bodyoffset" : 1181,
            "key.doc.column" : 17,
            "key.doc.comment" : "See `Middleware.respond`",
            "key.doc.declaration" : "public func respond(to req: Request, chainingTo next: Responder) throws -> Future<Response>",
            "key.doc.file" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/JWTAuthenticationMiddleware.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/JWTAuthenticationMiddleware.swift\" line=\"26\" column=\"17\"><Name>respond(to:chainingTo:)<\/Name><USR>s:5Sugar27JWTAuthenticationMiddlewareC7respond2to10chainingTo3NIO15EventLoopFutureCy5Vapor8ResponseCGAJ7RequestC_AJ9Responder_ptKF<\/USR><Declaration>public func respond(to req: Request, chainingTo next: Responder) throws -&gt; Future&lt;Response&gt;<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>Middleware.respond<\/codeVoice><\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 26,
            "key.doc.name" : "respond(to:chainingTo:)",
            "key.doc.type" : "Function",
            "key.doclength" : 29,
            "key.docoffset" : 1033,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/JWTAuthenticationMiddleware.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>respond<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>to<\/decl.var.parameter.argument_label> <decl.var.parameter.name>req<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>chainingTo<\/decl.var.parameter.argument_label> <decl.var.parameter.name>next<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:5Vapor9ResponderP\">Responder<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.class usr=\"s:5Vapor8ResponseC\">Response<\/ref.class>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 1247,
            "key.name" : "respond(to:chainingTo:)",
            "key.namelength" : 74,
            "key.nameoffset" : 1078,
            "key.offset" : 1073,
            "key.overrides" : [
              {
                "key.usr" : "s:5Vapor10MiddlewareP7respond2to10chainingTo3NIO15EventLoopFutureCyAA8ResponseCGAA7RequestC_AA9Responder_ptKF"
              }
            ],
            "key.parsed_declaration" : "public func respond(\n    to req: Request,\n    chainingTo next: Responder\n) throws -> Future<Response>",
            "key.parsed_scope.end" : 60,
            "key.parsed_scope.start" : 26,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let jwt: <Type usr=\"s:3JWTAAV\">JWT<\/Type>&lt;<Type usr=\"s:5Sugar27JWTAuthenticationMiddlewareC1Axmfp\">A<\/Type>.<Type usr=\"s:5Sugar18JWTAuthenticatableP10JWTPayloadQa\">JWTPayload<\/Type>&gt;<\/Declaration>",
                "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/JWTAuthenticationMiddleware.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>jwt<\/decl.name>: <decl.var.type><ref.struct usr=\"s:3JWTAAV\">JWT<\/ref.struct>&lt;<ref.generic_type_param usr=\"s:5Sugar27JWTAuthenticationMiddlewareC1Axmfp\">A<\/ref.generic_type_param>.<ref.associatedtype usr=\"s:5Sugar18JWTAuthenticatableP10JWTPayloadQa\">JWTPayload<\/ref.associatedtype>&gt;<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 26,
                "key.name" : "jwt",
                "key.namelength" : 3,
                "key.nameoffset" : 1486,
                "key.offset" : 1482,
                "key.parsed_declaration" : "let jwt: JWT<A.JWTPayload>",
                "key.parsed_scope.end" : 40,
                "key.parsed_scope.start" : 40,
                "key.typename" : "JWT<A.JWTPayload>",
                "key.typeusr" : "$s3JWTAAVy10JWTPayload5Sugar18JWTAuthenticatablePQzGD",
                "key.usr" : "s:5Sugar27JWTAuthenticationMiddlewareC7respond2to10chainingTo3NIO15EventLoopFutureCy5Vapor8ResponseCGAJ7RequestC_AJ9Responder_ptKF3jwtL_3JWTARVy10JWTPayloadQzGvp"
              },
              {
                "key.annotated_decl" : "<Declaration>let error: <Type usr=\"s:3JWT8JWTErrorV\">JWTError<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/JWTAuthenticationMiddleware.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>error<\/decl.name>: <decl.var.type><ref.struct usr=\"s:3JWT8JWTErrorV\">JWTError<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 5,
                "key.name" : "error",
                "key.namelength" : 5,
                "key.nameoffset" : 1625,
                "key.offset" : 1625,
                "key.parsed_declaration" : "} catch let error as JWTError where error.identifier == \"exp\"",
                "key.parsed_scope.end" : 43,
                "key.parsed_scope.start" : 43,
                "key.typename" : "JWTError",
                "key.typeusr" : "$s3JWT8JWTErrorVD",
                "key.usr" : "s:5Sugar27JWTAuthenticationMiddlewareC7respond2to10chainingTo3NIO15EventLoopFutureCy5Vapor8ResponseCGAJ7RequestC_AJ9Responder_ptKF5errorL_3JWT8JWTErrorVvp"
              }
            ],
            "key.typename" : "<A where A : JWTAuthenticatable> (JWTAuthenticationMiddleware<A>) -> (Request, Responder) throws -> EventLoopFuture<Response>",
            "key.typeusr" : "$s2to10chainingTo3NIO15EventLoopFutureCy5Vapor8ResponseCGAF7RequestC_AF9Responder_ptKcD",
            "key.usr" : "s:5Sugar27JWTAuthenticationMiddlewareC7respond2to10chainingTo3NIO15EventLoopFutureCy5Vapor8ResponseCGAJ7RequestC_AJ9Responder_ptKF"
          }
        ],
        "key.typename" : "JWTAuthenticationMiddleware<A>.Type",
        "key.typeusr" : "$s5Sugar27JWTAuthenticationMiddlewareCyxGmD",
        "key.usr" : "s:5Sugar27JWTAuthenticationMiddlewareC"
      }
    ]
  }
}, {
  "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/Loginable.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 2294,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public protocol Loginable<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 109
          }
        ],
        "key.bodylength" : 733,
        "key.bodyoffset" : 136,
        "key.doc.column" : 17,
        "key.doc.comment" : "Expresses the ability for a type (e.g. a user type) to be logged in.",
        "key.doc.declaration" : "public protocol Loginable",
        "key.doc.file" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/Loginable.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/Loginable.swift\" line=\"5\" column=\"17\"><Name>Loginable<\/Name><USR>s:5Sugar9LoginableP<\/USR><Declaration>public protocol Loginable<\/Declaration><CommentParts><Abstract><Para>Expresses the ability for a type (e.g. a user type) to be logged in.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 5,
        "key.doc.name" : "Loginable",
        "key.doc.type" : "Class",
        "key.doclength" : 73,
        "key.docoffset" : 36,
        "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/Loginable.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>Loginable<\/decl.name><\/decl.protocol>",
        "key.kind" : "source.lang.swift.decl.protocol",
        "key.length" : 754,
        "key.name" : "Loginable",
        "key.namelength" : 9,
        "key.nameoffset" : 125,
        "key.offset" : 116,
        "key.parsed_declaration" : "public protocol Loginable",
        "key.parsed_scope.end" : 23,
        "key.parsed_scope.start" : 5,
        "key.runtime_name" : "_TtP4main9Loginable_",
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>associatedtype Login<\/Declaration>",
            "key.doc.column" : 20,
            "key.doc.comment" : "Payload containing the information required to perform a login.",
            "key.doc.declaration" : "associatedtype Login",
            "key.doc.file" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/Loginable.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/Loginable.swift\" line=\"8\" column=\"20\"><Name>Login<\/Name><USR>s:5Sugar9LoginableP5LoginQa<\/USR><Declaration>associatedtype Login<\/Declaration><CommentParts><Abstract><Para>Payload containing the information required to perform a login.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 8,
            "key.doc.name" : "Login",
            "key.doc.type" : "Other",
            "key.doclength" : 68,
            "key.docoffset" : 142,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/Loginable.swift",
            "key.fully_annotated_decl" : "<decl.associatedtype><syntaxtype.keyword>associatedtype<\/syntaxtype.keyword> <decl.name>Login<\/decl.name><\/decl.associatedtype>",
            "key.kind" : "source.lang.swift.decl.associatedtype",
            "key.length" : 20,
            "key.name" : "Login",
            "key.namelength" : 5,
            "key.nameoffset" : 229,
            "key.offset" : 214,
            "key.parsed_declaration" : "associatedtype Login",
            "key.parsed_scope.end" : 8,
            "key.parsed_scope.start" : 8,
            "key.typename" : "Self.Login.Type",
            "key.typeusr" : "$s5Login5Sugar9LoginablePQzmD",
            "key.usr" : "s:5Sugar9LoginableP5LoginQa"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>static func preLogin(on req: <Type usr=\"s:5Vapor7RequestC\">Request<\/Type>) -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:s4Voida\">Void<\/Type>&gt;<\/Declaration>",
            "key.doc.column" : 17,
            "key.doc.comment" : "Used to perform any pre-login steps such as validation.\n\n- Parameter req: the request.\n- Returns: a `Future<Void>` signaling success or failure.",
            "key.doc.declaration" : "static func preLogin(on req: Request) -> Future<Void>",
            "key.doc.file" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/Loginable.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/Loginable.swift\" line=\"14\" column=\"17\"><Name>preLogin(on:)<\/Name><USR>s:5Sugar9LoginableP8preLogin2on3NIO15EventLoopFutureCyytG5Vapor7RequestC_tFZ<\/USR><Declaration>static func preLogin(on req: Request) -&gt; Future&lt;Void&gt;<\/Declaration><CommentParts><Abstract><Para>Used to perform any pre-login steps such as validation.<\/Para><\/Abstract><Parameters><Parameter><Name>req<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>the request.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>a <codeVoice>Future&lt;Void&gt;<\/codeVoice> signaling success or failure.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 14,
            "key.doc.name" : "preLogin(on:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "the request."
                  }
                ],
                "name" : "req"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "a `Future<Void>` signaling success or failure."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 172,
            "key.docoffset" : 240,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/Loginable.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>preLogin<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>on<\/decl.var.parameter.argument_label> <decl.var.parameter.name>req<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias>&gt;<\/decl.function.returntype><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 53,
            "key.name" : "preLogin(on:)",
            "key.namelength" : 25,
            "key.nameoffset" : 428,
            "key.offset" : 416,
            "key.parsed_declaration" : "static func preLogin(on req: Request) -> Future<Void>",
            "key.parsed_scope.end" : 14,
            "key.parsed_scope.start" : 14,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Sugar9LoginablePAAE8preLogin2on3NIO15EventLoopFutureCyytG5Vapor7RequestC_tFZ\">preLogin(on: Request) -&gt; Future&lt;Void&gt;<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : Loginable> (Self.Type) -> (Request) -> EventLoopFuture<()>",
            "key.typeusr" : "$s2on3NIO15EventLoopFutureCyytG5Vapor7RequestC_tcD",
            "key.usr" : "s:5Sugar9LoginableP8preLogin2on3NIO15EventLoopFutureCyytG5Vapor7RequestC_tFZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>static func logIn(with login: <Type usr=\"s:5Sugar9LoginableP5LoginQa\">Login<\/Type>, on worker: <Type usr=\"s:11DatabaseKit0A11ConnectableP\">DatabaseConnectable<\/Type>) -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:5Sugar9LoginableP4Selfxmfp\">Self<\/Type>&gt;<\/Declaration>",
            "key.doc.column" : 17,
            "key.doc.comment" : "Performs the actual login. Called after `preLogin(on:)`.\n\n- Parameters:\n  - login: the login information.\n  - worker: a worker on which to perform any database related actions like user lookup.\n- Returns: an instance of self in the `Future` on successful login.",
            "key.doc.declaration" : "static func logIn(with login: Login, on worker: DatabaseConnectable) -> Future<Self>",
            "key.doc.file" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/Loginable.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/Loginable.swift\" line=\"22\" column=\"17\"><Name>logIn(with:on:)<\/Name><USR>s:5Sugar9LoginableP5logIn4with2on3NIO15EventLoopFutureCyxG5LoginQz_11DatabaseKit0L11Connectable_ptFZ<\/USR><Declaration>static func logIn(with login: Login, on worker: DatabaseConnectable) -&gt; Future&lt;Self&gt;<\/Declaration><CommentParts><Abstract><Para>Performs the actual login. Called after <codeVoice>preLogin(on:)<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>login<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>the login information.<\/Para><\/Discussion><\/Parameter><Parameter><Name>worker<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>a worker on which to perform any database related actions like user lookup.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>an instance of self in the <codeVoice>Future<\/codeVoice> on successful login.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 22,
            "key.doc.name" : "logIn(with:on:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "the login information."
                  }
                ],
                "name" : "login"
              },
              {
                "discussion" : [
                  {
                    "Para" : "a worker on which to perform any database related actions like user lookup."
                  }
                ],
                "name" : "worker"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "an instance of self in the `Future` on successful login."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 305,
            "key.docoffset" : 475,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/Loginable.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>logIn<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>with<\/decl.var.parameter.argument_label> <decl.var.parameter.name>login<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.associatedtype usr=\"s:5Sugar9LoginableP5LoginQa\">Login<\/ref.associatedtype><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>on<\/decl.var.parameter.argument_label> <decl.var.parameter.name>worker<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:11DatabaseKit0A11ConnectableP\">DatabaseConnectable<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.generic_type_param usr=\"s:5Sugar9LoginableP4Selfxmfp\">Self<\/ref.generic_type_param>&gt;<\/decl.function.returntype><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 84,
            "key.name" : "logIn(with:on:)",
            "key.namelength" : 56,
            "key.nameoffset" : 796,
            "key.offset" : 784,
            "key.parsed_declaration" : "static func logIn(with login: Login, on worker: DatabaseConnectable) -> Future<Self>",
            "key.parsed_scope.end" : 22,
            "key.parsed_scope.start" : 22,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Sugar9LoginablePAA14Authentication23PasswordAuthenticatableRzAA011HasReadableD05LoginACRpzAA0fG8UsernameAHRQrlE5logIn4with2on3NIO15EventLoopFutureCyxGAH_11DatabaseKit0R11Connectable_ptFZ\">logIn(with: Login, on: DatabaseConnectable) -&gt; Future&lt;Self&gt;<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Sugar9LoginablePAASe5LoginRpzrlE5logIn2on3NIO15EventLoopFutureCyxG5Vapor7RequestC_tFZ\">logIn(on:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : Loginable> (Self.Type) -> (Self.Login, DatabaseConnectable) -> EventLoopFuture<Self>",
            "key.typeusr" : "$s4with2on3NIO15EventLoopFutureCyxG5LoginQz_11DatabaseKit0H11Connectable_ptcD",
            "key.usr" : "s:5Sugar9LoginableP5logIn4with2on3NIO15EventLoopFutureCyxG5LoginQz_11DatabaseKit0L11Connectable_ptFZ"
          }
        ],
        "key.typename" : "Loginable.Protocol",
        "key.typeusr" : "$s5Sugar9Loginable_pmD",
        "key.usr" : "s:5Sugar9LoginableP"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.annotated_decl" : "<Declaration>public protocol Loginable<\/Declaration>",
        "key.bodylength" : 178,
        "key.bodyoffset" : 893,
        "key.doc.column" : 17,
        "key.doc.declaration" : "public protocol Loginable",
        "key.doc.file" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/Loginable.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/Loginable.swift\" line=\"5\" column=\"17\"><Name>Loginable<\/Name><USR>s:5Sugar9LoginableP<\/USR><Declaration>public protocol Loginable<\/Declaration><CommentParts><Abstract><Para>Expresses the ability for a type (e.g. a user type) to be logged in.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 5,
        "key.doc.name" : "Loginable",
        "key.doc.type" : "Class",
        "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/Loginable.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>Loginable<\/decl.name><\/decl.protocol>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 200,
        "key.name" : "Loginable",
        "key.namelength" : 9,
        "key.nameoffset" : 882,
        "key.offset" : 872,
        "key.parsed_declaration" : "extension Loginable",
        "key.parsed_scope.end" : 32,
        "key.parsed_scope.start" : 25,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static func preLogin(on req: <Type usr=\"s:5Vapor7RequestC\">Request<\/Type>) -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:s4Voida\">Void<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 974
              }
            ],
            "key.bodylength" : 33,
            "key.bodyoffset" : 1036,
            "key.doc.column" : 24,
            "key.doc.comment" : "Default implementation that does nothing.\nSee `Loginable`.",
            "key.doc.declaration" : "public static func preLogin(on req: Request) -> Future<Void>",
            "key.doc.file" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/Loginable.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/Loginable.swift\" line=\"29\" column=\"24\"><Name>preLogin(on:)<\/Name><USR>s:5Sugar9LoginablePAAE8preLogin2on3NIO15EventLoopFutureCyytG5Vapor7RequestC_tFZ<\/USR><Declaration>public static func preLogin(on req: Request) -&gt; Future&lt;Void&gt;<\/Declaration><CommentParts><Abstract><Para>Default implementation that does nothing. See <codeVoice>Loginable<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 29,
            "key.doc.name" : "preLogin(on:)",
            "key.doc.type" : "Function",
            "key.doclength" : 71,
            "key.docoffset" : 899,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/Loginable.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>preLogin<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>on<\/decl.var.parameter.argument_label> <decl.var.parameter.name>req<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias>&gt;<\/decl.function.returntype><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 89,
            "key.name" : "preLogin(on:)",
            "key.namelength" : 25,
            "key.nameoffset" : 993,
            "key.offset" : 981,
            "key.parsed_declaration" : "public static func preLogin(on req: Request) -> Future<Void>",
            "key.parsed_scope.end" : 31,
            "key.parsed_scope.start" : 29,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Sugar9LoginableP8preLogin2on3NIO15EventLoopFutureCyytG5Vapor7RequestC_tFZ\">preLogin(on: Request) -&gt; Future&lt;Void&gt;<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : Loginable> (Self.Type) -> (Request) -> EventLoopFuture<()>",
            "key.typeusr" : "$s2on3NIO15EventLoopFutureCyytG5Vapor7RequestC_tcD",
            "key.usr" : "s:5Sugar9LoginablePAAE8preLogin2on3NIO15EventLoopFutureCyytG5Vapor7RequestC_tFZ"
          }
        ],
        "key.typename" : "Loginable.Protocol",
        "key.typeusr" : "$s5Sugar9Loginable_pmD",
        "key.usr" : "s:5Sugar9LoginableP"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.annotated_decl" : "<Declaration>public protocol Loginable<\/Declaration>",
        "key.bodylength" : 539,
        "key.bodyoffset" : 1209,
        "key.doc.column" : 17,
        "key.doc.declaration" : "public protocol Loginable",
        "key.doc.file" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/Loginable.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/Loginable.swift\" line=\"5\" column=\"17\"><Name>Loginable<\/Name><USR>s:5Sugar9LoginableP<\/USR><Declaration>public protocol Loginable<\/Declaration><CommentParts><Abstract><Para>Expresses the ability for a type (e.g. a user type) to be logged in.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 5,
        "key.doc.name" : "Loginable",
        "key.doc.type" : "Class",
        "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/Loginable.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>Loginable<\/decl.name><\/decl.protocol>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 675,
        "key.name" : "Loginable",
        "key.namelength" : 9,
        "key.nameoffset" : 1084,
        "key.offset" : 1074,
        "key.parsed_declaration" : "extension Loginable where\n    Self: PasswordAuthenticatable,\n    Self.Login: HasReadableUsername,\n    Self.Login: HasReadablePassword",
        "key.parsed_scope.end" : 51,
        "key.parsed_scope.start" : 34,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static func logIn(with login: <Type usr=\"s:5Sugar9LoginableP5LoginQa\">Login<\/Type>, on worker: <Type usr=\"s:11DatabaseKit0A11ConnectableP\">DatabaseConnectable<\/Type>) -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:5Sugar9LoginablePAA14Authentication23PasswordAuthenticatableRzAA011HasReadableD05LoginACRpzAA0fG8UsernameAHRQrlE4Selfxmfp\">Self<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1333
              }
            ],
            "key.bodylength" : 320,
            "key.bodyoffset" : 1426,
            "key.doc.column" : 24,
            "key.doc.comment" : "Default implementation that uses functionality provided by `PasswordAuthenticatable`.\nSee `Loginable`.",
            "key.doc.declaration" : "public static func logIn(with login: Login, on worker: DatabaseConnectable) -> Future<Self>",
            "key.doc.file" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/Loginable.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/Loginable.swift\" line=\"41\" column=\"24\"><Name>logIn(with:on:)<\/Name><USR>s:5Sugar9LoginablePAA14Authentication23PasswordAuthenticatableRzAA011HasReadableD05LoginACRpzAA0fG8UsernameAHRQrlE5logIn4with2on3NIO15EventLoopFutureCyxGAH_11DatabaseKit0R11Connectable_ptFZ<\/USR><Declaration>public static func logIn(with login: Login, on worker: DatabaseConnectable) -&gt; Future&lt;Self&gt;<\/Declaration><CommentParts><Abstract><Para>Default implementation that uses functionality provided by <codeVoice>PasswordAuthenticatable<\/codeVoice>. See <codeVoice>Loginable<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 41,
            "key.doc.name" : "logIn(with:on:)",
            "key.doc.type" : "Function",
            "key.doclength" : 115,
            "key.docoffset" : 1214,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/Loginable.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>logIn<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>with<\/decl.var.parameter.argument_label> <decl.var.parameter.name>login<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.associatedtype usr=\"s:5Sugar9LoginableP5LoginQa\">Login<\/ref.associatedtype><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>on<\/decl.var.parameter.argument_label> <decl.var.parameter.name>worker<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:11DatabaseKit0A11ConnectableP\">DatabaseConnectable<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.generic_type_param usr=\"s:5Sugar9LoginablePAA14Authentication23PasswordAuthenticatableRzAA011HasReadableD05LoginACRpzAA0fG8UsernameAHRQrlE4Selfxmfp\">Self<\/ref.generic_type_param>&gt;<\/decl.function.returntype><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 407,
            "key.name" : "logIn(with:on:)",
            "key.namelength" : 56,
            "key.nameoffset" : 1352,
            "key.offset" : 1340,
            "key.parsed_declaration" : "public static func logIn(with login: Login, on worker: DatabaseConnectable) -> Future<Self>",
            "key.parsed_scope.end" : 50,
            "key.parsed_scope.start" : 41,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Sugar9LoginableP5logIn4with2on3NIO15EventLoopFutureCyxG5LoginQz_11DatabaseKit0L11Connectable_ptFZ\">logIn(with: Login, on: DatabaseConnectable) -&gt; Future&lt;Self&gt;<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Sugar9LoginablePAASe5LoginRpzrlE5logIn2on3NIO15EventLoopFutureCyxG5Vapor7RequestC_tFZ\">logIn(on:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : PasswordAuthenticatable, Self : Loginable, Self.Login : HasReadablePassword, Self.Login : HasReadableUsername> (Self.Type) -> (Self.Login, DatabaseConnectable) -> EventLoopFuture<Self>",
            "key.typeusr" : "$s4with2on3NIO15EventLoopFutureCyxG5Login5Sugar9LoginablePQz_11DatabaseKit0J11Connectable_ptcD",
            "key.usr" : "s:5Sugar9LoginablePAA14Authentication23PasswordAuthenticatableRzAA011HasReadableD05LoginACRpzAA0fG8UsernameAHRQrlE5logIn4with2on3NIO15EventLoopFutureCyxGAH_11DatabaseKit0R11Connectable_ptFZ"
          }
        ],
        "key.typename" : "Loginable.Protocol",
        "key.typeusr" : "$s5Sugar9Loginable_pmD",
        "key.usr" : "s:5Sugar9LoginableP"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.annotated_decl" : "<Declaration>public protocol Loginable<\/Declaration>",
        "key.bodylength" : 492,
        "key.bodyoffset" : 1800,
        "key.doc.column" : 17,
        "key.doc.declaration" : "public protocol Loginable",
        "key.doc.file" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/Loginable.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/Loginable.swift\" line=\"5\" column=\"17\"><Name>Loginable<\/Name><USR>s:5Sugar9LoginableP<\/USR><Declaration>public protocol Loginable<\/Declaration><CommentParts><Abstract><Para>Expresses the ability for a type (e.g. a user type) to be logged in.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 5,
        "key.doc.name" : "Loginable",
        "key.doc.type" : "Class",
        "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/Loginable.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>Loginable<\/decl.name><\/decl.protocol>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 542,
        "key.name" : "Loginable",
        "key.namelength" : 9,
        "key.nameoffset" : 1761,
        "key.offset" : 1751,
        "key.parsed_declaration" : "extension Loginable where Self.Login: Decodable",
        "key.parsed_scope.end" : 68,
        "key.parsed_scope.start" : 53,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static func logIn(on req: <Type usr=\"s:5Vapor7RequestC\">Request<\/Type>) -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:5Sugar9LoginablePAASe5LoginRpzrlE4Selfxmfp\">Self<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1995
              }
            ],
            "key.bodylength" : 236,
            "key.bodyoffset" : 2054,
            "key.doc.column" : 24,
            "key.doc.comment" : "Convenience function that combines `preLogin` and `logIn`.\n\n- Parameter req: the request.\n- Returns: an instance of self in the `Future` on successful login.",
            "key.doc.declaration" : "public static func logIn(on req: Request) -> Future<Self>",
            "key.doc.file" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/Loginable.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/Loginable.swift\" line=\"59\" column=\"24\"><Name>logIn(on:)<\/Name><USR>s:5Sugar9LoginablePAASe5LoginRpzrlE5logIn2on3NIO15EventLoopFutureCyxG5Vapor7RequestC_tFZ<\/USR><Declaration>public static func logIn(on req: Request) -&gt; Future&lt;Self&gt;<\/Declaration><CommentParts><Abstract><Para>Convenience function that combines <codeVoice>preLogin<\/codeVoice> and <codeVoice>logIn<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>req<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>the request.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>an instance of self in the <codeVoice>Future<\/codeVoice> on successful login.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 59,
            "key.doc.name" : "logIn(on:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "the request."
                  }
                ],
                "name" : "req"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "an instance of self in the `Future` on successful login."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 185,
            "key.docoffset" : 1806,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/Loginable.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>logIn<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>on<\/decl.var.parameter.argument_label> <decl.var.parameter.name>req<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.generic_type_param usr=\"s:5Sugar9LoginablePAASe5LoginRpzrlE4Selfxmfp\">Self<\/ref.generic_type_param>&gt;<\/decl.function.returntype><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 289,
            "key.name" : "logIn(on:)",
            "key.namelength" : 22,
            "key.nameoffset" : 2014,
            "key.offset" : 2002,
            "key.parsed_declaration" : "public static func logIn(on req: Request) -> Future<Self>",
            "key.parsed_scope.end" : 67,
            "key.parsed_scope.start" : 59,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Sugar9LoginableP5logIn4with2on3NIO15EventLoopFutureCyxG5LoginQz_11DatabaseKit0L11Connectable_ptFZ\">logIn(with: Login, on: DatabaseConnectable) -&gt; Future&lt;Self&gt;<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Sugar9LoginablePAA14Authentication23PasswordAuthenticatableRzAA011HasReadableD05LoginACRpzAA0fG8UsernameAHRQrlE5logIn4with2on3NIO15EventLoopFutureCyxGAH_11DatabaseKit0R11Connectable_ptFZ\">logIn(with: Login, on: DatabaseConnectable) -&gt; Future&lt;Self&gt;<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : Loginable, Self.Login : Decodable> (Self.Type) -> (Request) -> EventLoopFuture<Self>",
            "key.typeusr" : "$s2on3NIO15EventLoopFutureCyxG5Vapor7RequestC_tcD",
            "key.usr" : "s:5Sugar9LoginablePAASe5LoginRpzrlE5logIn2on3NIO15EventLoopFutureCyxG5Vapor7RequestC_tFZ"
          }
        ],
        "key.typename" : "Loginable.Protocol",
        "key.typeusr" : "$s5Sugar9Loginable_pmD",
        "key.usr" : "s:5Sugar9LoginableP"
      }
    ]
  }
}, {
  "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/Payload.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 717,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public struct Payload : <Type usr=\"s:5Sugar24ExpireableSubjectPayloadP\">ExpireableSubjectPayload<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 77
          }
        ],
        "key.bodylength" : 589,
        "key.bodyoffset" : 126,
        "key.doc.column" : 15,
        "key.doc.comment" : "A commonly used payload with a subject and expiration claim.",
        "key.doc.declaration" : "public struct Payload : ExpireableSubjectPayload",
        "key.doc.file" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/Payload.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/Payload.swift\" line=\"4\" column=\"15\"><Name>Payload<\/Name><USR>s:5Sugar7PayloadV<\/USR><Declaration>public struct Payload : ExpireableSubjectPayload<\/Declaration><CommentParts><Abstract><Para>A commonly used payload with a subject and expiration claim.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 4,
        "key.doc.name" : "Payload",
        "key.doc.type" : "Class",
        "key.doclength" : 65,
        "key.docoffset" : 12,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 24,
            "key.offset" : 100
          }
        ],
        "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/Payload.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>Payload<\/decl.name> : <ref.protocol usr=\"s:5Sugar24ExpireableSubjectPayloadP\">ExpireableSubjectPayload<\/ref.protocol><\/decl.struct>",
        "key.inheritedtypes" : [
          {
            "key.name" : "ExpireableSubjectPayload"
          }
        ],
        "key.kind" : "source.lang.swift.decl.struct",
        "key.length" : 632,
        "key.name" : "Payload",
        "key.namelength" : 7,
        "key.nameoffset" : 91,
        "key.offset" : 84,
        "key.parsed_declaration" : "public struct Payload: ExpireableSubjectPayload",
        "key.parsed_scope.end" : 28,
        "key.parsed_scope.start" : 4,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public let exp: <Type usr=\"s:3JWT15ExpirationClaimV\">ExpirationClaim<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 170
              }
            ],
            "key.doc.column" : 16,
            "key.doc.comment" : "See `ExpireableSubjectPayload`",
            "key.doc.declaration" : "public let exp: ExpirationClaim",
            "key.doc.file" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/Payload.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/Payload.swift\" line=\"6\" column=\"16\"><Name>exp<\/Name><USR>s:5Sugar7PayloadV3exp3JWT15ExpirationClaimVvp<\/USR><Declaration>public let exp: ExpirationClaim<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>ExpireableSubjectPayload<\/codeVoice><\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 6,
            "key.doc.name" : "exp",
            "key.doc.type" : "Other",
            "key.doclength" : 35,
            "key.docoffset" : 131,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/Payload.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>exp<\/decl.name>: <decl.var.type><ref.struct usr=\"s:3JWT15ExpirationClaimV\">ExpirationClaim<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 24,
            "key.name" : "exp",
            "key.namelength" : 3,
            "key.nameoffset" : 181,
            "key.offset" : 177,
            "key.overrides" : [
              {
                "key.usr" : "s:5Sugar24ExpireableSubjectPayloadP3exp3JWT15ExpirationClaimVvp"
              }
            ],
            "key.parsed_declaration" : "public let exp: ExpirationClaim",
            "key.parsed_scope.end" : 6,
            "key.parsed_scope.start" : 6,
            "key.typename" : "ExpirationClaim",
            "key.typeusr" : "$s3JWT15ExpirationClaimVD",
            "key.usr" : "s:5Sugar7PayloadV3exp3JWT15ExpirationClaimVvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public let sub: <Type usr=\"s:3JWT12SubjectClaimV\">SubjectClaim<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 246
              }
            ],
            "key.doc.column" : 16,
            "key.doc.comment" : "See `ExpireableSubjectPayload`",
            "key.doc.declaration" : "public let sub: SubjectClaim",
            "key.doc.file" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/Payload.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/Payload.swift\" line=\"9\" column=\"16\"><Name>sub<\/Name><USR>s:5Sugar7PayloadV3sub3JWT12SubjectClaimVvp<\/USR><Declaration>public let sub: SubjectClaim<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>ExpireableSubjectPayload<\/codeVoice><\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 9,
            "key.doc.name" : "sub",
            "key.doc.type" : "Other",
            "key.doclength" : 35,
            "key.docoffset" : 207,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/Payload.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>sub<\/decl.name>: <decl.var.type><ref.struct usr=\"s:3JWT12SubjectClaimV\">SubjectClaim<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 21,
            "key.name" : "sub",
            "key.namelength" : 3,
            "key.nameoffset" : 257,
            "key.offset" : 253,
            "key.overrides" : [
              {
                "key.usr" : "s:5Sugar24ExpireableSubjectPayloadP3sub3JWT0C5ClaimVvp"
              }
            ],
            "key.parsed_declaration" : "public let sub: SubjectClaim",
            "key.parsed_scope.end" : 9,
            "key.parsed_scope.start" : 9,
            "key.typename" : "SubjectClaim",
            "key.typeusr" : "$s3JWT12SubjectClaimVD",
            "key.usr" : "s:5Sugar7PayloadV3sub3JWT12SubjectClaimVvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public init(exp: <Type usr=\"s:3JWT15ExpirationClaimV\">ExpirationClaim<\/Type>, sub: <Type usr=\"s:3JWT12SubjectClaimV\">SubjectClaim<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 459
              }
            ],
            "key.bodylength" : 51,
            "key.bodyoffset" : 535,
            "key.doc.column" : 12,
            "key.doc.comment" : "Create a new `Payload`.\n\n- Parameters:\n  - exp: the expiration claim.\n  - sub: the subject claim containing information to identify a user.",
            "key.doc.declaration" : "public init(exp: ExpirationClaim, sub: SubjectClaim)",
            "key.doc.file" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/Payload.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/Payload.swift\" line=\"16\" column=\"12\"><Name>init(exp:sub:)<\/Name><USR>s:5Sugar7PayloadV3exp3subAC3JWT15ExpirationClaimV_AF07SubjectG0Vtcfc<\/USR><Declaration>public init(exp: ExpirationClaim, sub: SubjectClaim)<\/Declaration><CommentParts><Abstract><Para>Create a new <codeVoice>Payload<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>exp<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>the expiration claim.<\/Para><\/Discussion><\/Parameter><Parameter><Name>sub<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>the subject claim containing information to identify a user.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 16,
            "key.doc.name" : "init(exp:sub:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "the expiration claim."
                  }
                ],
                "name" : "exp"
              },
              {
                "discussion" : [
                  {
                    "Para" : "the subject claim containing information to identify a user."
                  }
                ],
                "name" : "sub"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 175,
            "key.docoffset" : 280,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/Payload.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>exp<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:3JWT15ExpirationClaimV\">ExpirationClaim<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>sub<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:3JWT12SubjectClaimV\">SubjectClaim<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 121,
            "key.name" : "init(exp:sub:)",
            "key.namelength" : 67,
            "key.nameoffset" : 466,
            "key.offset" : 466,
            "key.parsed_declaration" : "public init(\n    exp: ExpirationClaim,\n    sub: SubjectClaim\n)",
            "key.parsed_scope.end" : 22,
            "key.parsed_scope.start" : 16,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Sugar7PayloadV4fromACs7Decoder_p_tKcfc\">init(from:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(Payload.Type) -> (ExpirationClaim, SubjectClaim) -> Payload",
            "key.typeusr" : "$s3exp3sub5Sugar7PayloadV3JWT15ExpirationClaimV_AF07SubjectG0VtcD",
            "key.usr" : "s:5Sugar7PayloadV3exp3subAC3JWT15ExpirationClaimV_AF07SubjectG0Vtcfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func verify(using signer: <Type usr=\"s:3JWT9JWTSignerC\">JWTSigner<\/Type>) throws<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 621
              }
            ],
            "key.bodylength" : 40,
            "key.bodyoffset" : 673,
            "key.doc.column" : 17,
            "key.doc.comment" : "See `JWTVerifiable`",
            "key.doc.declaration" : "public func verify(using signer: JWTSigner) throws",
            "key.doc.file" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/Payload.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/Payload.swift\" line=\"25\" column=\"17\"><Name>verify(using:)<\/Name><USR>s:5Sugar7PayloadV6verify5usingy3JWT9JWTSignerC_tKF<\/USR><Declaration>public func verify(using signer: JWTSigner) throws<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>JWTVerifiable<\/codeVoice><\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 25,
            "key.doc.name" : "verify(using:)",
            "key.doc.type" : "Function",
            "key.doclength" : 24,
            "key.docoffset" : 593,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Authentication\/Payload.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>verify<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>using<\/decl.var.parameter.argument_label> <decl.var.parameter.name>signer<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:3JWT9JWTSignerC\">JWTSigner<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 86,
            "key.name" : "verify(using:)",
            "key.namelength" : 31,
            "key.nameoffset" : 633,
            "key.offset" : 628,
            "key.overrides" : [
              {
                "key.usr" : "s:3JWT10JWTPayloadP6verify5usingyAA9JWTSignerC_tKF"
              }
            ],
            "key.parsed_declaration" : "public func verify(using signer: JWTSigner) throws",
            "key.parsed_scope.end" : 27,
            "key.parsed_scope.start" : 25,
            "key.substructure" : [

            ],
            "key.typename" : "(Payload) -> (JWTSigner) throws -> ()",
            "key.typeusr" : "$s5usingy3JWT9JWTSignerC_tKcD",
            "key.usr" : "s:5Sugar7PayloadV6verify5usingy3JWT9JWTSignerC_tKF"
          }
        ],
        "key.typename" : "Payload.Type",
        "key.typeusr" : "$s5Sugar7PayloadVmD",
        "key.usr" : "s:5Sugar7PayloadV"
      }
    ]
  }
}, {
  "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Commands\/SeederCommand\/Seedable.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 410,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public protocol Seedable : <Type usr=\"s:6Fluent5ModelP\">Model<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 28
          }
        ],
        "key.bodylength" : 179,
        "key.bodyoffset" : 61,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 5,
            "key.offset" : 54
          }
        ],
        "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Commands\/SeederCommand\/Seedable.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>Seedable<\/decl.name> : <ref.protocol usr=\"s:6Fluent5ModelP\">Model<\/ref.protocol><\/decl.protocol>",
        "key.inheritedtypes" : [
          {
            "key.name" : "Model"
          }
        ],
        "key.kind" : "source.lang.swift.decl.protocol",
        "key.length" : 206,
        "key.name" : "Seedable",
        "key.namelength" : 8,
        "key.nameoffset" : 44,
        "key.offset" : 35,
        "key.parsed_declaration" : "public protocol Seedable: Model",
        "key.parsed_scope.end" : 10,
        "key.parsed_scope.start" : 4,
        "key.runtime_name" : "_TtP4main8Seedable_",
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>static var arguments: [<Type usr=\"s:7Command0A8ArgumentV\">CommandArgument<\/Type>] { get }<\/Declaration>",
            "key.bodylength" : 5,
            "key.bodyoffset" : 107,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Commands\/SeederCommand\/Seedable.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>arguments<\/decl.name>: <decl.var.type>[<ref.struct usr=\"s:7Command0A8ArgumentV\">CommandArgument<\/ref.struct>]<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.static>",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 47,
            "key.name" : "arguments",
            "key.namelength" : 9,
            "key.nameoffset" : 77,
            "key.offset" : 66,
            "key.parsed_declaration" : "static var arguments: [CommandArgument]",
            "key.parsed_scope.end" : 5,
            "key.parsed_scope.start" : 5,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Sugar8SeedablePAAE9argumentsSay7Command0D8ArgumentVGvpZ\">arguments<\/RelatedName>"
              }
            ],
            "key.typename" : "[CommandArgument]",
            "key.typeusr" : "$sSay7Command0A8ArgumentVGD",
            "key.usr" : "s:5Sugar8SeedableP9argumentsSay7Command0D8ArgumentVGvpZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>static var options: [<Type usr=\"s:7Command0A6OptionV\">CommandOption<\/Type>] { get }<\/Declaration>",
            "key.bodylength" : 5,
            "key.bodyoffset" : 155,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Commands\/SeederCommand\/Seedable.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>options<\/decl.name>: <decl.var.type>[<ref.struct usr=\"s:7Command0A6OptionV\">CommandOption<\/ref.struct>]<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.static>",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 43,
            "key.name" : "options",
            "key.namelength" : 7,
            "key.nameoffset" : 129,
            "key.offset" : 118,
            "key.parsed_declaration" : "static var options: [CommandOption]",
            "key.parsed_scope.end" : 6,
            "key.parsed_scope.start" : 6,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Sugar8SeedablePAAE7optionsSay7Command0D6OptionVGvpZ\">options<\/RelatedName>"
              }
            ],
            "key.typename" : "[CommandOption]",
            "key.typeusr" : "$sSay7Command0A6OptionVGD",
            "key.usr" : "s:5Sugar8SeedableP7optionsSay7Command0D6OptionVGvpZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>static var help: <Type usr=\"s:SS\">String<\/Type> { get }<\/Declaration>",
            "key.bodylength" : 5,
            "key.bodyoffset" : 191,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Commands\/SeederCommand\/Seedable.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>help<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.static>",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 31,
            "key.name" : "help",
            "key.namelength" : 4,
            "key.nameoffset" : 177,
            "key.offset" : 166,
            "key.parsed_declaration" : "static var help: String",
            "key.parsed_scope.end" : 7,
            "key.parsed_scope.start" : 7,
            "key.typename" : "String",
            "key.typeusr" : "$sSSD",
            "key.usr" : "s:5Sugar8SeedableP4helpSSvpZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>init(command: <Type usr=\"s:7Command0A7ContextV\">CommandContext<\/Type>) throws<\/Declaration>",
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Commands\/SeederCommand\/Seedable.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>command<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:7Command0A7ContextV\">CommandContext<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword><\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 36,
            "key.name" : "init(command:)",
            "key.namelength" : 29,
            "key.nameoffset" : 203,
            "key.offset" : 203,
            "key.parsed_declaration" : "init(command: CommandContext) throws",
            "key.parsed_scope.end" : 9,
            "key.parsed_scope.start" : 9,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Se4fromxs7Decoder_p_tKcfc\">init(from:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : Seedable> (Self.Type) -> (CommandContext) throws -> Self",
            "key.typeusr" : "$s7commandx7Command0B7ContextV_tKcD",
            "key.usr" : "s:5Sugar8SeedableP7commandx7Command0D7ContextV_tKcfc"
          }
        ],
        "key.typename" : "Seedable.Protocol",
        "key.typeusr" : "$s5Sugar8Seedable_pmD",
        "key.usr" : "s:5Sugar8SeedableP"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public protocol Seedable : <Type usr=\"s:6Fluent5ModelP\">Model<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 243
          }
        ],
        "key.bodylength" : 138,
        "key.bodyoffset" : 270,
        "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Commands\/SeederCommand\/Seedable.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>Seedable<\/decl.name> : <ref.protocol usr=\"s:6Fluent5ModelP\">Model<\/ref.protocol><\/decl.protocol>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 159,
        "key.name" : "Seedable",
        "key.namelength" : 8,
        "key.nameoffset" : 260,
        "key.offset" : 250,
        "key.parsed_declaration" : "public extension Seedable",
        "key.parsed_scope.end" : 20,
        "key.parsed_scope.start" : 12,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>static var arguments: [<Type usr=\"s:7Command0A8ArgumentV\">CommandArgument<\/Type>] { get }<\/Declaration>",
            "key.bodylength" : 23,
            "key.bodyoffset" : 316,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Commands\/SeederCommand\/Seedable.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>arguments<\/decl.name>: <decl.var.type>[<ref.struct usr=\"s:7Command0A8ArgumentV\">CommandArgument<\/ref.struct>]<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.static>",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 65,
            "key.name" : "arguments",
            "key.namelength" : 9,
            "key.nameoffset" : 286,
            "key.offset" : 275,
            "key.parsed_declaration" : "static var arguments: [CommandArgument]",
            "key.parsed_scope.end" : 15,
            "key.parsed_scope.start" : 13,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Sugar8SeedableP9argumentsSay7Command0D8ArgumentVGvpZ\">arguments<\/RelatedName>"
              }
            ],
            "key.typename" : "[CommandArgument]",
            "key.typeusr" : "$sSay7Command0A8ArgumentVGD",
            "key.usr" : "s:5Sugar8SeedablePAAE9argumentsSay7Command0D8ArgumentVGvpZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>static var options: [<Type usr=\"s:7Command0A6OptionV\">CommandOption<\/Type>] { get }<\/Declaration>",
            "key.bodylength" : 23,
            "key.bodyoffset" : 383,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Commands\/SeederCommand\/Seedable.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>options<\/decl.name>: <decl.var.type>[<ref.struct usr=\"s:7Command0A6OptionV\">CommandOption<\/ref.struct>]<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.static>",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 61,
            "key.name" : "options",
            "key.namelength" : 7,
            "key.nameoffset" : 357,
            "key.offset" : 346,
            "key.parsed_declaration" : "static var options: [CommandOption]",
            "key.parsed_scope.end" : 19,
            "key.parsed_scope.start" : 17,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Sugar8SeedableP7optionsSay7Command0D6OptionVGvpZ\">options<\/RelatedName>"
              }
            ],
            "key.typename" : "[CommandOption]",
            "key.typeusr" : "$sSay7Command0A6OptionVGD",
            "key.usr" : "s:5Sugar8SeedablePAAE7optionsSay7Command0D6OptionVGvpZ"
          }
        ],
        "key.typename" : "Seedable.Protocol",
        "key.typeusr" : "$s5Sugar8Seedable_pmD",
        "key.usr" : "s:5Sugar8SeedableP"
      }
    ]
  }
}, {
  "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Commands\/SeederCommand\/SeederCommand.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 782,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public struct SeederCommand&lt;M&gt; : <Type usr=\"s:7CommandAAP\">Command<\/Type> where M : <Type usr=\"s:5Sugar8SeedableP\">Seedable<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 28
          }
        ],
        "key.bodylength" : 701,
        "key.bodyoffset" : 79,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 7,
            "key.offset" : 70
          }
        ],
        "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Commands\/SeederCommand\/SeederCommand.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>SeederCommand<\/decl.name>&lt;<decl.generic_type_param usr=\"s:5Sugar13SeederCommandV1Mxmfp\"><decl.generic_type_param.name>M<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt; : <ref.protocol usr=\"s:7CommandAAP\">Command<\/ref.protocol> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>M : <ref.protocol usr=\"s:5Sugar8SeedableP\">Seedable<\/ref.protocol><\/decl.generic_type_requirement><\/decl.struct>",
        "key.inheritedtypes" : [
          {
            "key.name" : "Command"
          }
        ],
        "key.kind" : "source.lang.swift.decl.struct",
        "key.length" : 746,
        "key.name" : "SeederCommand",
        "key.namelength" : 13,
        "key.nameoffset" : 42,
        "key.offset" : 35,
        "key.parsed_declaration" : "public struct SeederCommand<M: Seedable>: Command",
        "key.parsed_scope.end" : 29,
        "key.parsed_scope.start" : 4,
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>M : <Type usr=\"s:5Sugar8SeedableP\">Seedable<\/Type><\/Declaration>",
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 8,
                "key.offset" : 59
              }
            ],
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Commands\/SeederCommand\/SeederCommand.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>M<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:5Sugar8SeedableP\">Seedable<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
            "key.inheritedtypes" : [
              {
                "key.name" : "Seedable"
              }
            ],
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 11,
            "key.name" : "M",
            "key.namelength" : 1,
            "key.nameoffset" : 56,
            "key.offset" : 56,
            "key.parsed_declaration" : "public struct SeederCommand<M: Seedable>: Command",
            "key.parsed_scope.end" : 4,
            "key.parsed_scope.start" : 4,
            "key.typename" : "M.Type",
            "key.typeusr" : "$sxmD",
            "key.usr" : "s:5Sugar13SeederCommandV1Mxmfp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private let databaseIdentifier: <Type usr=\"s:11DatabaseKit0A10IdentifierV\">DatabaseIdentifier<\/Type>&lt;<Type usr=\"s:5Sugar13SeederCommandV1Mxmfp\">M<\/Type>.<Type usr=\"s:6Fluent5ModelP8DatabaseQa\">Database<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 84
              }
            ],
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Commands\/SeederCommand\/SeederCommand.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>databaseIdentifier<\/decl.name>: <decl.var.type><ref.struct usr=\"s:11DatabaseKit0A10IdentifierV\">DatabaseIdentifier<\/ref.struct>&lt;<ref.generic_type_param usr=\"s:5Sugar13SeederCommandV1Mxmfp\">M<\/ref.generic_type_param>.<ref.associatedtype usr=\"s:6Fluent5ModelP8DatabaseQa\">Database<\/ref.associatedtype>&gt;<\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 54,
            "key.name" : "databaseIdentifier",
            "key.namelength" : 18,
            "key.nameoffset" : 96,
            "key.offset" : 92,
            "key.parsed_declaration" : "private let databaseIdentifier: DatabaseIdentifier<M.Database>",
            "key.parsed_scope.end" : 5,
            "key.parsed_scope.start" : 5,
            "key.typename" : "DatabaseIdentifier<M.Database>",
            "key.typeusr" : "$s11DatabaseKit0A10IdentifierVy0A06Fluent5ModelPQzGD",
            "key.usr" : "s:5Sugar13SeederCommandV18databaseIdentifier33_4E0D5D0248310259A13EB1F7F56961C1LL11DatabaseKit0nE0Vy0N0QzGvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public init(databaseIdentifier: <Type usr=\"s:11DatabaseKit0A10IdentifierV\">DatabaseIdentifier<\/Type>&lt;<Type usr=\"s:5Sugar13SeederCommandV1Mxmfp\">M<\/Type>.<Type usr=\"s:6Fluent5ModelP8DatabaseQa\">Database<\/Type>&gt;)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 152
              }
            ],
            "key.bodylength" : 58,
            "key.bodyoffset" : 217,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Commands\/SeederCommand\/SeederCommand.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>databaseIdentifier<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:11DatabaseKit0A10IdentifierV\">DatabaseIdentifier<\/ref.struct>&lt;<ref.generic_type_param usr=\"s:5Sugar13SeederCommandV1Mxmfp\">M<\/ref.generic_type_param>.<ref.associatedtype usr=\"s:6Fluent5ModelP8DatabaseQa\">Database<\/ref.associatedtype>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 117,
            "key.name" : "init(databaseIdentifier:)",
            "key.namelength" : 56,
            "key.nameoffset" : 159,
            "key.offset" : 159,
            "key.parsed_declaration" : "public init(databaseIdentifier: DatabaseIdentifier<M.Database>)",
            "key.parsed_scope.end" : 9,
            "key.parsed_scope.start" : 7,
            "key.substructure" : [

            ],
            "key.typename" : "<M where M : Seedable> (SeederCommand<M>.Type) -> (DatabaseIdentifier<M.Database>) -> SeederCommand<M>",
            "key.typeusr" : "$s18databaseIdentifier5Sugar13SeederCommandVyxG11DatabaseKit0fB0Vy0F0QzG_tcD",
            "key.usr" : "s:5Sugar13SeederCommandV18databaseIdentifierACyxG11DatabaseKit0fE0Vy0F0QzG_tcfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var arguments: [<Type usr=\"s:7Command0A8ArgumentV\">CommandArgument<\/Type>] { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 282
              }
            ],
            "key.bodylength" : 32,
            "key.bodyoffset" : 323,
            "key.doc.declaration" : "var arguments: [Command.CommandArgument] { get }",
            "key.doc.discussion" : [
              {
                "Para" : "See `CommandArgument` for more information."
              }
            ],
            "key.doc.full_as_xml" : "<Other><Name>arguments<\/Name><USR>s:7CommandAAP9argumentsSayAA0A8ArgumentVGvp<\/USR><Declaration>var arguments: [Command.CommandArgument] { get }<\/Declaration><CommentParts><Abstract><Para>This command’s required <codeVoice>CommandArgument<\/codeVoice>s.<\/Para><\/Abstract><Discussion><Para>See <codeVoice>CommandArgument<\/codeVoice> for more information.<\/Para><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.name" : "arguments",
            "key.doc.type" : "Other",
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Commands\/SeederCommand\/SeederCommand.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>arguments<\/decl.name>: <decl.var.type>[<ref.struct usr=\"s:7Command0A8ArgumentV\">CommandArgument<\/ref.struct>]<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 67,
            "key.name" : "arguments",
            "key.namelength" : 9,
            "key.nameoffset" : 293,
            "key.offset" : 289,
            "key.overrides" : [
              {
                "key.usr" : "s:7CommandAAP9argumentsSayAA0A8ArgumentVGvp"
              }
            ],
            "key.parsed_declaration" : "public var arguments: [CommandArgument]",
            "key.parsed_scope.end" : 13,
            "key.parsed_scope.start" : 11,
            "key.typename" : "[CommandArgument]",
            "key.typeusr" : "$sSay7Command0A8ArgumentVGD",
            "key.usr" : "s:7CommandAAP9argumentsSayAA0A8ArgumentVGvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var options: [<Type usr=\"s:7Command0A6OptionV\">CommandOption<\/Type>] { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 362
              }
            ],
            "key.bodylength" : 30,
            "key.bodyoffset" : 399,
            "key.doc.declaration" : "var options: [Command.CommandOption] { get }",
            "key.doc.full_as_xml" : "<Other><Name>options<\/Name><USR>s:7Command0A8RunnableP7optionsSayAA0A6OptionVGvp<\/USR><Declaration>var options: [Command.CommandOption] { get }<\/Declaration><CommentParts><Abstract><Para>The supported options.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.name" : "options",
            "key.doc.type" : "Other",
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Commands\/SeederCommand\/SeederCommand.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>options<\/decl.name>: <decl.var.type>[<ref.struct usr=\"s:7Command0A6OptionV\">CommandOption<\/ref.struct>]<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 61,
            "key.name" : "options",
            "key.namelength" : 7,
            "key.nameoffset" : 373,
            "key.offset" : 369,
            "key.overrides" : [
              {
                "key.usr" : "s:7Command0A8RunnableP7optionsSayAA0A6OptionVGvp"
              }
            ],
            "key.parsed_declaration" : "public var options: [CommandOption]",
            "key.parsed_scope.end" : 17,
            "key.parsed_scope.start" : 15,
            "key.typename" : "[CommandOption]",
            "key.typeusr" : "$sSay7Command0A6OptionVGD",
            "key.usr" : "s:7Command0A8RunnableP7optionsSayAA0A6OptionVGvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var help: [<Type usr=\"s:SS\">String<\/Type>] { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 436
              }
            ],
            "key.bodylength" : 29,
            "key.bodyoffset" : 463,
            "key.doc.declaration" : "var help: [String] { get }",
            "key.doc.full_as_xml" : "<Other><Name>help<\/Name><USR>s:7Command0A8RunnableP4helpSaySSGvp<\/USR><Declaration>var help: [String] { get }<\/Declaration><CommentParts><Abstract><Para>Text that will be displayed when <codeVoice>--help<\/codeVoice> is passed.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.name" : "help",
            "key.doc.type" : "Other",
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Commands\/SeederCommand\/SeederCommand.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>help<\/decl.name>: <decl.var.type>[<ref.struct usr=\"s:SS\">String<\/ref.struct>]<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 50,
            "key.name" : "help",
            "key.namelength" : 4,
            "key.nameoffset" : 447,
            "key.offset" : 443,
            "key.overrides" : [
              {
                "key.usr" : "s:7Command0A8RunnableP4helpSaySSGvp"
              }
            ],
            "key.parsed_declaration" : "public var help: [String]",
            "key.parsed_scope.end" : 21,
            "key.parsed_scope.start" : 19,
            "key.typename" : "[String]",
            "key.typeusr" : "$sSaySSGD",
            "key.usr" : "s:7Command0A8RunnableP4helpSaySSGvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func run(using context: <Type usr=\"s:7Command0A7ContextV\">CommandContext<\/Type>) throws -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:s4Voida\">Void<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 499
              }
            ],
            "key.bodylength" : 208,
            "key.bodyoffset" : 570,
            "key.doc.declaration" : "func run(using context: Command.CommandContext) throws -> NIO.EventLoopFuture<Void>",
            "key.doc.full_as_xml" : "<Function><Name>run(using:)<\/Name><USR>s:7Command0A8RunnableP3run5using3NIO15EventLoopFutureCyytGAA0A7ContextV_tKF<\/USR><Declaration>func run(using context: Command.CommandContext) throws -&gt; NIO.EventLoopFuture&lt;Void&gt;<\/Declaration><CommentParts><Abstract><Para>Runs the command against the supplied input.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.name" : "run(using:)",
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Commands\/SeederCommand\/SeederCommand.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>run<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>using<\/decl.var.parameter.argument_label> <decl.var.parameter.name>context<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:7Command0A7ContextV\">CommandContext<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 273,
            "key.name" : "run(using:)",
            "key.namelength" : 34,
            "key.nameoffset" : 511,
            "key.offset" : 506,
            "key.overrides" : [
              {
                "key.usr" : "s:7Command0A8RunnableP3run5using3NIO15EventLoopFutureCyytGAA0A7ContextV_tKF"
              }
            ],
            "key.parsed_declaration" : "public func run(using context: CommandContext) throws -> Future<Void>",
            "key.parsed_scope.end" : 28,
            "key.parsed_scope.start" : 23,
            "key.substructure" : [

            ],
            "key.typename" : "<M where M : Seedable> (SeederCommand<M>) -> (CommandContext) throws -> EventLoopFuture<()>",
            "key.typeusr" : "$s5using3NIO15EventLoopFutureCyytG7Command0F7ContextV_tKcD",
            "key.usr" : "s:7Command0A8RunnableP3run5using3NIO15EventLoopFutureCyytGAA0A7ContextV_tKF"
          }
        ],
        "key.typename" : "SeederCommand<M>.Type",
        "key.typeusr" : "$s5Sugar13SeederCommandVyxGmD",
        "key.usr" : "s:5Sugar13SeederCommandV"
      }
    ]
  }
}, {
  "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Array.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 137,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>struct Array&lt;Element&gt; : <Type usr=\"s:s24_DestructorSafeContainerP\">_DestructorSafeContainer<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 0
          }
        ],
        "key.bodylength" : 111,
        "key.bodyoffset" : 24,
        "key.doc.declaration" : "struct Array<Element>",
        "key.doc.discussion" : [
          {
            "Para" : "Arrays are one of the most commonly used data types in an app. You use arrays to organize your app’s data. Specifically, you use the `Array` type to hold elements of a single type, the array’s `Element` type. An array can store any kind of elements—from integers to strings to classes."
          },
          {
            "Para" : "Swift makes it easy to create arrays in your code using an array literal: simply surround a comma-separated list of values with square brackets. Without any other information, Swift creates an array that includes the specified values, automatically inferring the array’s `Element` type. For example:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "You can create an empty array by specifying the `Element` type of your array in the declaration. For example:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "If you need an array that is preinitialized with a fixed number of default values, use the `Array(repeating:count:)` initializer."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "When you need to perform an operation on all of an array’s elements, use a `for`-`in` loop to iterate through the array’s contents."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Use the `isEmpty` property to check quickly whether an array has any elements, or use the `count` property to find the number of elements in the array."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Use the `first` and `last` properties for safe access to the value of the array’s first and last elements. If the array is empty, these properties are `nil`."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "You can access individual array elements through a subscript. The first element of a nonempty array is always at index zero. You can subscript an array with any integer from zero up to, but not including, the count of the array. Using a negative number or an index equal to or greater than `count` triggers a runtime error. For example:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Suppose you need to store a list of the names of students that are signed up for a class you’re teaching. During the registration period, you need to add and remove names as students add and drop the class."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "To add single elements to the end of an array, use the `append(_:)` method. Add multiple elements at the same time by passing another array or a sequence of any kind to the `append(contentsOf:)` method."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "You can add new elements in the middle of an array by using the `insert(_:at:)` method for single elements and by using `insert(contentsOf:at:)` to insert multiple elements from another collection or array literal. The elements at that index and later indices are shifted back to make room."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "To remove elements from an array, use the `remove(at:)`, `removeSubrange(_:)`, and `removeLast()` methods."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "You can replace an existing element with a new value by assigning the new value to the subscript."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Every array reserves a specific amount of memory to hold its contents. When you add elements to an array and that array begins to exceed its reserved capacity, the array allocates a larger region of memory and copies its elements into the new storage. The new storage is a multiple of the old storage’s size. This exponential growth strategy means that appending an element happens in constant time, averaging the performance of many append operations. Append operations that trigger reallocation have a performance cost, but they occur less and less often as the array grows larger."
          },
          {
            "Para" : "If you know approximately how many elements you will need to store, use the `reserveCapacity(_:)` method before appending to the array to avoid intermediate reallocations. Use the `capacity` and `count` properties to determine how many more elements the array can store without allocating larger storage."
          },
          {
            "Para" : "For arrays of most `Element` types, this storage is a contiguous block of memory. For arrays with an `Element` type that is a class or `@objc` protocol type, this storage can be a contiguous block of memory or an instance of `NSArray`. Because any arbitrary subclass of `NSArray` can become an `Array`, there are no guarantees about representation or efficiency in this case."
          },
          {
            "Para" : "Each array has an independent value that includes the values of all of its elements. For simple types such as integers and other structures, this means that when you change a value in one array, the value of that element does not change in any copies of the array. For example:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "If the elements in an array are instances of a class, the semantics are the same, though they might appear different at first. In this case, the values stored in the array are references to objects that live outside the array. If you change a reference to an object in one array, only that array has a reference to the new object. However, if two arrays contain references to the same object, you can observe changes to that object’s properties from both arrays. For example:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Arrays, like all variable-size collections in the standard library, use copy-on-write optimization. Multiple copies of an array share the same storage until you modify one of the copies. When that happens, the array being modified replaces its storage with a uniquely owned copy of itself, which is then modified in place. Optimizations are sometimes applied that can reduce the amount of copying."
          },
          {
            "Para" : "This means that if an array is sharing storage with other copies, the first mutating operation on that array incurs the cost of copying the array. An array that is the sole owner of its storage can perform mutating operations in place."
          },
          {
            "Para" : "In the example below, a `numbers` array is created along with two copies that share the same storage. When the original `numbers` array is modified, it makes a unique copy of its storage before making the modification. Further modifications to `numbers` are made in place, while the two copies continue to share the original storage."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "When you need to access APIs that require data in an `NSArray` instance instead of `Array`, use the type-cast operator (`as`) to bridge your instance. For bridging to be possible, the `Element` type of your array must be a class, an `@objc` protocol (a protocol imported from Objective-C or marked with the `@objc` attribute), or a type that bridges to a Foundation type."
          },
          {
            "Para" : "The following example shows how you can bridge an `Array` instance to `NSArray` to use the `write(to:atomically:)` method. In this example, the `colors` array can be bridged to `NSArray` because the `colors` array’s `String` elements bridge to `NSString`. The compiler prevents bridging the `moreColors` array, on the other hand, because its `Element` type is `Optional<String>`, which does  bridge to a Foundation type."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Bridging from `Array` to `NSArray` takes O(1) time and O(1) space if the array’s elements are already instances of a class or an `@objc` protocol; otherwise, it takes O() time and space."
          },
          {
            "Para" : "When the destination array’s element type is a class or an `@objc` protocol, bridging from `NSArray` to `Array` first calls the `copy(with:)` (`- copyWithZone:` in Objective-C) method on the array to get an immutable copy and then performs additional Swift bookkeeping work that takes O(1) time. For instances of `NSArray` that are already immutable, `copy(with:)` usually returns the same array in O(1) time; otherwise, the copying performance is unspecified. If `copy(with:)` returns the same array, the instances of `NSArray` and `Array` share storage using the same copy-on-write optimization that is used when two instances of `Array` share storage."
          },
          {
            "Para" : "When the destination array’s element type is a nonclass type that bridges to a Foundation type, bridging from `NSArray` to `Array` performs a bridging copy of the elements to contiguous storage in O() time. For example, bridging from `NSArray` to `Array<Int>` performs such a copy. No further bridging is required when accessing elements of the `Array` instance."
          },
          {
            "Note" : ""
          }
        ],
        "key.doc.full_as_xml" : "<Class><Name>Array<\/Name><USR>s:Sa<\/USR><Declaration>struct Array&lt;Element&gt;<\/Declaration><CommentParts><Abstract><Para>An ordered, random-access collection.<\/Para><\/Abstract><Discussion><Para>Arrays are one of the most commonly used data types in an app. You use arrays to organize your app’s data. Specifically, you use the <codeVoice>Array<\/codeVoice> type to hold elements of a single type, the array’s <codeVoice>Element<\/codeVoice> type. An array can store any kind of elements—from integers to strings to classes.<\/Para><Para>Swift makes it easy to create arrays in your code using an array literal: simply surround a comma-separated list of values with square brackets. Without any other information, Swift creates an array that includes the specified values, automatically inferring the array’s <codeVoice>Element<\/codeVoice> type. For example:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[\/\/ An array of 'Int' elements]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let oddNumbers = [1, 3, 5, 7, 9, 11, 13, 15]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ An array of 'String' elements]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let streets = [\"Albemarle\", \"Brandywine\", \"Chesapeake\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>You can create an empty array by specifying the <codeVoice>Element<\/codeVoice> type of your array in the declaration. For example:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[\/\/ Shortened forms are preferred]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[var emptyDoubles: [Double] = []]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ The full type name is also allowed]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[var emptyFloats: Array<Float> = Array()]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>If you need an array that is preinitialized with a fixed number of default values, use the <codeVoice>Array(repeating:count:)<\/codeVoice> initializer.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var digitCounts = Array(repeating: 0, count: 10)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(digitCounts)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h1>]]><\/rawHTML>Accessing Array Values<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>When you need to perform an operation on all of an array’s elements, use a <codeVoice>for<\/codeVoice>-<codeVoice>in<\/codeVoice> loop to iterate through the array’s contents.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[for street in streets {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(\"I don't live on \\(street).\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"I don't live on Albemarle.\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"I don't live on Brandywine.\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"I don't live on Chesapeake.\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Use the <codeVoice>isEmpty<\/codeVoice> property to check quickly whether an array has any elements, or use the <codeVoice>count<\/codeVoice> property to find the number of elements in the array.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[if oddNumbers.isEmpty {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(\"I don't know any odd numbers.\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[} else {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(\"I know \\(oddNumbers.count) odd numbers.\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"I know 8 odd numbers.\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Use the <codeVoice>first<\/codeVoice> and <codeVoice>last<\/codeVoice> properties for safe access to the value of the array’s first and last elements. If the array is empty, these properties are <codeVoice>nil<\/codeVoice>.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[if let firstElement = oddNumbers.first, let lastElement = oddNumbers.last {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(firstElement, lastElement, separator: \", \")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"1, 15\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(emptyDoubles.first, emptyDoubles.last, separator: \", \")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"nil, nil\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>You can access individual array elements through a subscript. The first element of a nonempty array is always at index zero. You can subscript an array with any integer from zero up to, but not including, the count of the array. Using a negative number or an index equal to or greater than <codeVoice>count<\/codeVoice> triggers a runtime error. For example:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(oddNumbers[0], oddNumbers[3], separator: \", \")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"1, 7\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(emptyDoubles[0])]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Triggers runtime error: Index out of range]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h1>]]><\/rawHTML>Adding and Removing Elements<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>Suppose you need to store a list of the names of students that are signed up for a class you’re teaching. During the registration period, you need to add and remove names as students add and drop the class.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var students = [\"Ben\", \"Ivy\", \"Jordell\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>To add single elements to the end of an array, use the <codeVoice>append(_:)<\/codeVoice> method. Add multiple elements at the same time by passing another array or a sequence of any kind to the <codeVoice>append(contentsOf:)<\/codeVoice> method.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[students.append(\"Maxime\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[students.append(contentsOf: [\"Shakia\", \"William\"])]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ [\"Ben\", \"Ivy\", \"Jordell\", \"Maxime\", \"Shakia\", \"William\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>You can add new elements in the middle of an array by using the <codeVoice>insert(_:at:)<\/codeVoice> method for single elements and by using <codeVoice>insert(contentsOf:at:)<\/codeVoice> to insert multiple elements from another collection or array literal. The elements at that index and later indices are shifted back to make room.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[students.insert(\"Liam\", at: 3)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ [\"Ben\", \"Ivy\", \"Jordell\", \"Liam\", \"Maxime\", \"Shakia\", \"William\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>To remove elements from an array, use the <codeVoice>remove(at:)<\/codeVoice>, <codeVoice>removeSubrange(_:)<\/codeVoice>, and <codeVoice>removeLast()<\/codeVoice> methods.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[\/\/ Ben's family is moving to another state]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[students.remove(at: 0)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ [\"Ivy\", \"Jordell\", \"Liam\", \"Maxime\", \"Shakia\", \"William\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ William is signing up for a different class]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[students.removeLast()]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ [\"Ivy\", \"Jordell\", \"Liam\", \"Maxime\", \"Shakia\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>You can replace an existing element with a new value by assigning the new value to the subscript.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[if let i = students.firstIndex(of: \"Maxime\") {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    students[i] = \"Max\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ [\"Ivy\", \"Jordell\", \"Liam\", \"Max\", \"Shakia\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h2>]]><\/rawHTML>Growing the Size of an Array<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><Para>Every array reserves a specific amount of memory to hold its contents. When you add elements to an array and that array begins to exceed its reserved capacity, the array allocates a larger region of memory and copies its elements into the new storage. The new storage is a multiple of the old storage’s size. This exponential growth strategy means that appending an element happens in constant time, averaging the performance of many append operations. Append operations that trigger reallocation have a performance cost, but they occur less and less often as the array grows larger.<\/Para><Para>If you know approximately how many elements you will need to store, use the <codeVoice>reserveCapacity(_:)<\/codeVoice> method before appending to the array to avoid intermediate reallocations. Use the <codeVoice>capacity<\/codeVoice> and <codeVoice>count<\/codeVoice> properties to determine how many more elements the array can store without allocating larger storage.<\/Para><Para>For arrays of most <codeVoice>Element<\/codeVoice> types, this storage is a contiguous block of memory. For arrays with an <codeVoice>Element<\/codeVoice> type that is a class or <codeVoice>@objc<\/codeVoice> protocol type, this storage can be a contiguous block of memory or an instance of <codeVoice>NSArray<\/codeVoice>. Because any arbitrary subclass of <codeVoice>NSArray<\/codeVoice> can become an <codeVoice>Array<\/codeVoice>, there are no guarantees about representation or efficiency in this case.<\/Para><rawHTML><![CDATA[<h1>]]><\/rawHTML>Modifying Copies of Arrays<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>Each array has an independent value that includes the values of all of its elements. For simple types such as integers and other structures, this means that when you change a value in one array, the value of that element does not change in any copies of the array. For example:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var numbers = [1, 2, 3, 4, 5]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[var numbersCopy = numbers]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[numbers[0] = 100]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(numbers)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[100, 2, 3, 4, 5]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(numbersCopy)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[1, 2, 3, 4, 5]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>If the elements in an array are instances of a class, the semantics are the same, though they might appear different at first. In this case, the values stored in the array are references to objects that live outside the array. If you change a reference to an object in one array, only that array has a reference to the new object. However, if two arrays contain references to the same object, you can observe changes to that object’s properties from both arrays. For example:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[\/\/ An integer type with reference semantics]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[class IntegerReference {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    var value = 10]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[var firstIntegers = [IntegerReference(), IntegerReference()]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[var secondIntegers = firstIntegers]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Modifications to an instance are visible from either array]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[firstIntegers[0].value = 100]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(secondIntegers[0].value)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"100\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Replacements, additions, and removals are still visible]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ only in the modified array]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[firstIntegers[0] = IntegerReference()]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(firstIntegers[0].value)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"10\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(secondIntegers[0].value)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"100\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Arrays, like all variable-size collections in the standard library, use copy-on-write optimization. Multiple copies of an array share the same storage until you modify one of the copies. When that happens, the array being modified replaces its storage with a uniquely owned copy of itself, which is then modified in place. Optimizations are sometimes applied that can reduce the amount of copying.<\/Para><Para>This means that if an array is sharing storage with other copies, the first mutating operation on that array incurs the cost of copying the array. An array that is the sole owner of its storage can perform mutating operations in place.<\/Para><Para>In the example below, a <codeVoice>numbers<\/codeVoice> array is created along with two copies that share the same storage. When the original <codeVoice>numbers<\/codeVoice> array is modified, it makes a unique copy of its storage before making the modification. Further modifications to <codeVoice>numbers<\/codeVoice> are made in place, while the two copies continue to share the original storage.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var numbers = [1, 2, 3, 4, 5]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[var firstCopy = numbers]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[var secondCopy = numbers]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ The storage for 'numbers' is copied here]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[numbers[0] = 100]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[numbers[1] = 200]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[numbers[2] = 300]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ 'numbers' is [100, 200, 300, 4, 5]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ 'firstCopy' and 'secondCopy' are [1, 2, 3, 4, 5]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h1>]]><\/rawHTML>Bridging Between Array and NSArray<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>When you need to access APIs that require data in an <codeVoice>NSArray<\/codeVoice> instance instead of <codeVoice>Array<\/codeVoice>, use the type-cast operator (<codeVoice>as<\/codeVoice>) to bridge your instance. For bridging to be possible, the <codeVoice>Element<\/codeVoice> type of your array must be a class, an <codeVoice>@objc<\/codeVoice> protocol (a protocol imported from Objective-C or marked with the <codeVoice>@objc<\/codeVoice> attribute), or a type that bridges to a Foundation type.<\/Para><Para>The following example shows how you can bridge an <codeVoice>Array<\/codeVoice> instance to <codeVoice>NSArray<\/codeVoice> to use the <codeVoice>write(to:atomically:)<\/codeVoice> method. In this example, the <codeVoice>colors<\/codeVoice> array can be bridged to <codeVoice>NSArray<\/codeVoice> because the <codeVoice>colors<\/codeVoice> array’s <codeVoice>String<\/codeVoice> elements bridge to <codeVoice>NSString<\/codeVoice>. The compiler prevents bridging the <codeVoice>moreColors<\/codeVoice> array, on the other hand, because its <codeVoice>Element<\/codeVoice> type is <codeVoice>Optional&lt;String&gt;<\/codeVoice>, which does <emphasis>not<\/emphasis> bridge to a Foundation type.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let colors = [\"periwinkle\", \"rose\", \"moss\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let moreColors: [String?] = [\"ochre\", \"pine\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let url = NSURL(fileURLWithPath: \"names.plist\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[(colors as NSArray).write(to: url, atomically: true)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ true]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[(moreColors as NSArray).write(to: url, atomically: true)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ error: cannot convert value of type '[String?]' to type 'NSArray']]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Bridging from <codeVoice>Array<\/codeVoice> to <codeVoice>NSArray<\/codeVoice> takes O(1) time and O(1) space if the array’s elements are already instances of a class or an <codeVoice>@objc<\/codeVoice> protocol; otherwise, it takes O(<emphasis>n<\/emphasis>) time and space.<\/Para><Para>When the destination array’s element type is a class or an <codeVoice>@objc<\/codeVoice> protocol, bridging from <codeVoice>NSArray<\/codeVoice> to <codeVoice>Array<\/codeVoice> first calls the <codeVoice>copy(with:)<\/codeVoice> (<codeVoice>- copyWithZone:<\/codeVoice> in Objective-C) method on the array to get an immutable copy and then performs additional Swift bookkeeping work that takes O(1) time. For instances of <codeVoice>NSArray<\/codeVoice> that are already immutable, <codeVoice>copy(with:)<\/codeVoice> usually returns the same array in O(1) time; otherwise, the copying performance is unspecified. If <codeVoice>copy(with:)<\/codeVoice> returns the same array, the instances of <codeVoice>NSArray<\/codeVoice> and <codeVoice>Array<\/codeVoice> share storage using the same copy-on-write optimization that is used when two instances of <codeVoice>Array<\/codeVoice> share storage.<\/Para><Para>When the destination array’s element type is a nonclass type that bridges to a Foundation type, bridging from <codeVoice>NSArray<\/codeVoice> to <codeVoice>Array<\/codeVoice> performs a bridging copy of the elements to contiguous storage in O(<emphasis>n<\/emphasis>) time. For example, bridging from <codeVoice>NSArray<\/codeVoice> to <codeVoice>Array&lt;Int&gt;<\/codeVoice> performs such a copy. No further bridging is required when accessing elements of the <codeVoice>Array<\/codeVoice> instance.<\/Para><Note><Para>The <codeVoice>ContiguousArray<\/codeVoice> and <codeVoice>ArraySlice<\/codeVoice> types are not bridged; instances of those types always have a contiguous block of memory as their storage.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.name" : "Array",
        "key.doc.type" : "Class",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>Array<\/decl.name>&lt;<decl.generic_type_param usr=\"s:Sa7Elementxmfp\"><decl.generic_type_param.name>Element<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt; : <ref.protocol usr=\"s:s24_DestructorSafeContainerP\">_DestructorSafeContainer<\/ref.protocol><\/decl.struct>",
        "key.groupname" : "Collection\/Array",
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 129,
        "key.modulename" : "Swift",
        "key.name" : "Array",
        "key.namelength" : 5,
        "key.nameoffset" : 17,
        "key.offset" : 7,
        "key.parsed_declaration" : "public extension Array",
        "key.parsed_scope.end" : 5,
        "key.parsed_scope.start" : 1,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>subscript(safe index: <Type usr=\"s:Si\">Int<\/Type>) -&gt; <Type usr=\"s:Sa5SugarE7Elementxmfp\">Element<\/Type>? { get }<\/Declaration>",
            "key.bodylength" : 64,
            "key.bodyoffset" : 69,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Array.swift",
            "key.fully_annotated_decl" : "<decl.function.subscript><syntaxtype.keyword>subscript<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>safe<\/decl.var.parameter.argument_label> <decl.var.parameter.name>index<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:Sa5SugarE7Elementxmfp\">Element<\/ref.generic_type_param>?<\/decl.function.returntype> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.function.subscript>",
            "key.groupname" : "Collection\/Array",
            "key.kind" : "source.lang.swift.decl.function.subscript",
            "key.length" : 105,
            "key.name" : "subscript(safe:)",
            "key.namelength" : 26,
            "key.nameoffset" : 29,
            "key.offset" : 29,
            "key.parsed_declaration" : "subscript(safe index: Int) -> Element?",
            "key.parsed_scope.end" : 4,
            "key.parsed_scope.start" : 2,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SayxSicip\">subscript(_:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Says10ArraySliceVyxGSnySiGcip\">subscript(_:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Element> (safe: Int) -> Element?",
            "key.typeusr" : "$s4safexSgSi_tcD",
            "key.usr" : "s:Sa5SugarE4safexSgSi_tcip"
          }
        ],
        "key.typename" : "Array<Element>.Type",
        "key.typeusr" : "$sSayxGmD",
        "key.usr" : "s:Sa"
      }
    ]
  }
}, {
  "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Bool.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 123,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>struct Bool<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 0
          }
        ],
        "key.bodylength" : 98,
        "key.bodyoffset" : 23,
        "key.doc.declaration" : "struct Bool",
        "key.doc.discussion" : [
          {
            "Para" : "`Bool` represents Boolean values in Swift. Create instances of `Bool` by using one of the Boolean literals `true` or `false`, or by assigning the result of a Boolean method or operation to a variable or constant."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Swift uses only simple Boolean values in conditional contexts to help avoid accidental programming errors and to help maintain the clarity of each control statement. Unlike in other programming languages, in Swift, integers and strings cannot be used where a Boolean value is required."
          },
          {
            "Para" : "For example, the following code sample does not compile, because it attempts to use the integer `i` in a logical context:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "The correct approach in Swift is to compare the `i` value with zero in the `while` statement."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "The C `bool` and `Boolean` types and the Objective-C `BOOL` type are all bridged into Swift as `Bool`. The single `Bool` type in Swift guarantees that functions, methods, and properties imported from C and Objective-C have a consistent type interface."
          }
        ],
        "key.doc.full_as_xml" : "<Class><Name>Bool<\/Name><USR>s:Sb<\/USR><Declaration>struct Bool<\/Declaration><CommentParts><Abstract><Para>A value type whose instances are either <codeVoice>true<\/codeVoice> or <codeVoice>false<\/codeVoice>.<\/Para><\/Abstract><Discussion><Para><codeVoice>Bool<\/codeVoice> represents Boolean values in Swift. Create instances of <codeVoice>Bool<\/codeVoice> by using one of the Boolean literals <codeVoice>true<\/codeVoice> or <codeVoice>false<\/codeVoice>, or by assigning the result of a Boolean method or operation to a variable or constant.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var godotHasArrived = false]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let numbers = 1...5]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let containsTen = numbers.contains(10)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(containsTen)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"false\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let (a, b) = (100, 101)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let aFirst = a < b]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(aFirst)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"true\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Swift uses only simple Boolean values in conditional contexts to help avoid accidental programming errors and to help maintain the clarity of each control statement. Unlike in other programming languages, in Swift, integers and strings cannot be used where a Boolean value is required.<\/Para><Para>For example, the following code sample does not compile, because it attempts to use the integer <codeVoice>i<\/codeVoice> in a logical context:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var i = 5]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[while i {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(i)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    i -= 1]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ error: 'Int' is not convertible to 'Bool']]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The correct approach in Swift is to compare the <codeVoice>i<\/codeVoice> value with zero in the <codeVoice>while<\/codeVoice> statement.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[while i != 0 {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(i)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    i -= 1]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h1>]]><\/rawHTML>Using Imported Boolean values<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>The C <codeVoice>bool<\/codeVoice> and <codeVoice>Boolean<\/codeVoice> types and the Objective-C <codeVoice>BOOL<\/codeVoice> type are all bridged into Swift as <codeVoice>Bool<\/codeVoice>. The single <codeVoice>Bool<\/codeVoice> type in Swift guarantees that functions, methods, and properties imported from C and Objective-C have a consistent type interface.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.name" : "Bool",
        "key.doc.type" : "Class",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>Bool<\/decl.name><\/decl.struct>",
        "key.groupname" : "Bool",
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 115,
        "key.modulename" : "Swift",
        "key.name" : "Bool",
        "key.namelength" : 4,
        "key.nameoffset" : 17,
        "key.offset" : 7,
        "key.parsed_declaration" : "public extension Bool",
        "key.parsed_scope.end" : 5,
        "key.parsed_scope.start" : 1,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>init(from string: <Type usr=\"s:SS\">String<\/Type>)<\/Declaration>",
            "key.bodylength" : 64,
            "key.bodyoffset" : 55,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Bool.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>from<\/decl.var.parameter.argument_label> <decl.var.parameter.name>string<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.groupname" : "Bool",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 92,
            "key.name" : "init(from:)",
            "key.namelength" : 25,
            "key.nameoffset" : 28,
            "key.offset" : 28,
            "key.parsed_declaration" : "init(from string: String)",
            "key.parsed_scope.end" : 4,
            "key.parsed_scope.start" : 2,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:S2bycfc\">init()<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SbyS2bcfc\">init(_: Bool)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sb22_builtinBooleanLiteralSbBi1__tcfc\">init(_builtinBooleanLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sb14booleanLiteralS2b_tcfc\">init(booleanLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SbySbSgSScfc\">init?(_: String)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sb4fromSbs7Decoder_p_tKcfc\">init(from: Decoder) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sb10FoundationEySbSo8NSNumberChcfc\">init(_: __shared NSNumber)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sb10FoundationE10truncatingSbSo8NSNumberCh_tcfc\">init(truncating:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sb10FoundationE7exactlySbSgSo8NSNumberCh_tcfc\">init(exactly:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(Bool.Type) -> (String) -> Bool",
            "key.typeusr" : "$s4fromSbSS_tcD",
            "key.usr" : "s:Sb5SugarE4fromSbSS_tcfc"
          }
        ],
        "key.typename" : "Bool.Type",
        "key.typeusr" : "$sSbmD",
        "key.usr" : "s:Sb"
      }
    ]
  }
}, {
  "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/CommandConfig.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 190,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>struct CommandConfig : <Type usr=\"s:7ServiceAAP\">Service<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 14
          }
        ],
        "key.bodylength" : 142,
        "key.bodyoffset" : 46,
        "key.doc.declaration" : "struct CommandConfig : Service",
        "key.doc.discussion" : [
          {
            "CodeListing" : ""
          }
        ],
        "key.doc.full_as_xml" : "<Class><Name>CommandConfig<\/Name><USR>s:7Command0A6ConfigV<\/USR><Declaration>struct CommandConfig : Service<\/Declaration><CommentParts><Abstract><Para>Configures commands for a service container.<\/Para><\/Abstract><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var commandConfig = CommandConfig.default()]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/\/ You can register command types that will be lazily created]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[commandConfig.use(FooCommand.self, as: \"foo\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/\/ \u0010You can also register pre-initialized instances of a command]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[commandConfig.use(barCommand, as: \"bar\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[services.register(commandConfig)]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.name" : "CommandConfig",
        "key.doc.type" : "Class",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>CommandConfig<\/decl.name> : <ref.protocol usr=\"s:7ServiceAAP\">Service<\/ref.protocol><\/decl.struct>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 168,
        "key.modulename" : "Command",
        "key.name" : "CommandConfig",
        "key.namelength" : 13,
        "key.nameoffset" : 31,
        "key.offset" : 21,
        "key.parsed_declaration" : "public extension CommandConfig",
        "key.parsed_scope.end" : 9,
        "key.parsed_scope.start" : 3,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>mutating func use(_ list: [<Type usr=\"s:SS\">String<\/Type> : <Type usr=\"s:7CommandAAP\">Command<\/Type>])<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.mutating",
                "key.length" : 8,
                "key.offset" : 51
              }
            ],
            "key.bodylength" : 89,
            "key.bodyoffset" : 97,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/CommandConfig.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>mutating<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>use<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>list<\/decl.var.parameter.name>: <decl.var.parameter.type>[<ref.struct usr=\"s:SS\">String<\/ref.struct> : <ref.protocol usr=\"s:7CommandAAP\">Command<\/ref.protocol>]<\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 127,
            "key.name" : "use(_:)",
            "key.namelength" : 30,
            "key.nameoffset" : 65,
            "key.offset" : 60,
            "key.parsed_declaration" : "mutating func use(_ list: [String: Command])",
            "key.parsed_scope.end" : 8,
            "key.parsed_scope.start" : 4,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Command0A6ConfigV3use_2as9isDefaultyAA0A8Runnable_p_SSSbtF\">use(_: CommandRunnable, as: String, isDefault: Bool = false)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Command0A6ConfigV3use_2as9isDefaultyxm_SSSbtAA0A8RunnableRzlF\">use&lt;R&gt;(_: R.Type, as: String, isDefault: Bool = false) where R : CommandRunnable<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(inout CommandConfig) -> ([String : Command]) -> ()",
            "key.typeusr" : "$syySDySS7CommandAA_pGcD",
            "key.usr" : "s:7Command0A6ConfigV5SugarE3useyySDySSA2A_pGF"
          }
        ],
        "key.typename" : "CommandConfig.Type",
        "key.typeusr" : "$s7Command0A6ConfigVmD",
        "key.usr" : "s:7Command0A6ConfigV"
      }
    ]
  }
}, {
  "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Creatable.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 2465,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public protocol Creatable<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 852
          }
        ],
        "key.bodylength" : 522,
        "key.bodyoffset" : 879,
        "key.doc.column" : 17,
        "key.doc.comment" : "A protocol expressing the ability for types to be created via a related `Decodable` type.\n\nThis protocol is intended to be used with\n\n  `static func create(on req: Request) -> Future<Self>`\n\nas defined below. This combines the `preCreate`, decoding of the associated `Create` type and\ninitialization steps. By default the `preCreate` step does not do anything but it can be\noverloaded for use in validation, interrupting the creation process in case of invalid data.\n\nSometimes the `Creatable` type is the type that needs to be decoded. In those cases you can use\n`SelfCreatable` (see below). This makes it close to the situation of simply having a `Decodable`\ntype but you have the benefit of the `preCreate` step and being able to treat it in the same\nway as other `Creatable` types.",
        "key.doc.declaration" : "public protocol Creatable",
        "key.doc.discussion" : [
          {
            "Para" : "This protocol is intended to be used with"
          },
          {
            "Para" : "`static func create(on req: Request) -> Future<Self>`"
          },
          {
            "Para" : "as defined below. This combines the `preCreate`, decoding of the associated `Create` type and initialization steps. By default the `preCreate` step does not do anything but it can be overloaded for use in validation, interrupting the creation process in case of invalid data."
          },
          {
            "Para" : "Sometimes the `Creatable` type is the type that needs to be decoded. In those cases you can use `SelfCreatable` (see below). This makes it close to the situation of simply having a `Decodable` type but you have the benefit of the `preCreate` step and being able to treat it in the same way as other `Creatable` types."
          }
        ],
        "key.doc.file" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Creatable.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Creatable.swift\" line=\"17\" column=\"17\"><Name>Creatable<\/Name><USR>s:5Sugar9CreatableP<\/USR><Declaration>public protocol Creatable<\/Declaration><CommentParts><Abstract><Para>A protocol expressing the ability for types to be created via a related <codeVoice>Decodable<\/codeVoice> type.<\/Para><\/Abstract><Discussion><Para>This protocol is intended to be used with<\/Para><Para><codeVoice>static func create(on req: Request) -&gt; Future&lt;Self&gt;<\/codeVoice><\/Para><Para>as defined below. This combines the <codeVoice>preCreate<\/codeVoice>, decoding of the associated <codeVoice>Create<\/codeVoice> type and initialization steps. By default the <codeVoice>preCreate<\/codeVoice> step does not do anything but it can be overloaded for use in validation, interrupting the creation process in case of invalid data.<\/Para><Para>Sometimes the <codeVoice>Creatable<\/codeVoice> type is the type that needs to be decoded. In those cases you can use <codeVoice>SelfCreatable<\/codeVoice> (see below). This makes it close to the situation of simply having a <codeVoice>Decodable<\/codeVoice> type but you have the benefit of the <codeVoice>preCreate<\/codeVoice> step and being able to treat it in the same way as other <codeVoice>Creatable<\/codeVoice> types.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 17,
        "key.doc.name" : "Creatable",
        "key.doc.type" : "Class",
        "key.doclength" : 838,
        "key.docoffset" : 14,
        "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Creatable.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>Creatable<\/decl.name><\/decl.protocol>",
        "key.kind" : "source.lang.swift.decl.protocol",
        "key.length" : 543,
        "key.name" : "Creatable",
        "key.namelength" : 9,
        "key.nameoffset" : 868,
        "key.offset" : 859,
        "key.parsed_declaration" : "public protocol Creatable",
        "key.parsed_scope.end" : 31,
        "key.parsed_scope.start" : 17,
        "key.runtime_name" : "_TtP4main9Creatable_",
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>associatedtype Create : <Type usr=\"s:Se\">Decodable<\/Type><\/Declaration>",
            "key.doc.column" : 20,
            "key.doc.comment" : "Decodable Payload that can be used to initialize an instance.",
            "key.doc.declaration" : "associatedtype Create : Decodable",
            "key.doc.file" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Creatable.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Creatable.swift\" line=\"20\" column=\"20\"><Name>Create<\/Name><USR>s:5Sugar9CreatableP6CreateQa<\/USR><Declaration>associatedtype Create : Decodable<\/Declaration><CommentParts><Abstract><Para>Decodable Payload that can be used to initialize an instance.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 20,
            "key.doc.name" : "Create",
            "key.doc.type" : "Other",
            "key.doclength" : 66,
            "key.docoffset" : 885,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Creatable.swift",
            "key.fully_annotated_decl" : "<decl.associatedtype><syntaxtype.keyword>associatedtype<\/syntaxtype.keyword> <decl.name>Create<\/decl.name> : <ref.protocol usr=\"s:Se\">Decodable<\/ref.protocol><\/decl.associatedtype>",
            "key.kind" : "source.lang.swift.decl.associatedtype",
            "key.length" : 32,
            "key.name" : "Create",
            "key.namelength" : 6,
            "key.nameoffset" : 970,
            "key.offset" : 955,
            "key.parsed_declaration" : "associatedtype Create: Decodable",
            "key.parsed_scope.end" : 20,
            "key.parsed_scope.start" : 20,
            "key.typename" : "Self.Create.Type",
            "key.typeusr" : "$s6Create5Sugar9CreatablePQzmD",
            "key.usr" : "s:5Sugar9CreatableP6CreateQa"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>static func preCreate(on req: <Type usr=\"s:5Vapor7RequestC\">Request<\/Type>) -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:s4Voida\">Void<\/Type>&gt;<\/Declaration>",
            "key.doc.column" : 17,
            "key.doc.comment" : "A step that is to be performed during the actual creation. Can be used for validation.\n\n- Parameter req: the current `Request`.",
            "key.doc.declaration" : "static func preCreate(on req: Request) -> Future<Void>",
            "key.doc.file" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Creatable.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Creatable.swift\" line=\"25\" column=\"17\"><Name>preCreate(on:)<\/Name><USR>s:5Sugar9CreatableP9preCreate2on3NIO15EventLoopFutureCyytG5Vapor7RequestC_tFZ<\/USR><Declaration>static func preCreate(on req: Request) -&gt; Future&lt;Void&gt;<\/Declaration><CommentParts><Abstract><Para>A step that is to be performed during the actual creation. Can be used for validation.<\/Para><\/Abstract><Parameters><Parameter><Name>req<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>the current <codeVoice>Request<\/codeVoice>.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 25,
            "key.doc.name" : "preCreate(on:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "the current `Request`."
                  }
                ],
                "name" : "req"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 147,
            "key.docoffset" : 993,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Creatable.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>preCreate<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>on<\/decl.var.parameter.argument_label> <decl.var.parameter.name>req<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias>&gt;<\/decl.function.returntype><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 54,
            "key.name" : "preCreate(on:)",
            "key.namelength" : 26,
            "key.nameoffset" : 1156,
            "key.offset" : 1144,
            "key.parsed_declaration" : "static func preCreate(on req: Request) -> Future<Void>",
            "key.parsed_scope.end" : 25,
            "key.parsed_scope.start" : 25,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Sugar9CreatablePAAE9preCreate2on3NIO15EventLoopFutureCyytG5Vapor7RequestC_tFZ\">preCreate(on: Request) -&gt; Future&lt;Void&gt;<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : Creatable> (Self.Type) -> (Request) -> EventLoopFuture<()>",
            "key.typeusr" : "$s2on3NIO15EventLoopFutureCyytG5Vapor7RequestC_tcD",
            "key.usr" : "s:5Sugar9CreatableP9preCreate2on3NIO15EventLoopFutureCyytG5Vapor7RequestC_tFZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>init(_ create: <Type usr=\"s:5Sugar9CreatableP6CreateQa\">Create<\/Type>) throws<\/Declaration>",
            "key.doc.column" : 5,
            "key.doc.comment" : "Create a new instance of the conforming type based on the associated `Create` type.\n\n- Parameter create: the input for creating a new instance.",
            "key.doc.declaration" : "init(_ create: Create) throws",
            "key.doc.file" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Creatable.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Creatable.swift\" line=\"30\" column=\"5\"><Name>init(_:)<\/Name><USR>s:5Sugar9CreatablePyx6CreateQzKcfc<\/USR><Declaration>init(_ create: Create) throws<\/Declaration><CommentParts><Abstract><Para>Create a new instance of the conforming type based on the associated <codeVoice>Create<\/codeVoice> type.<\/Para><\/Abstract><Parameters><Parameter><Name>create<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>the input for creating a new instance.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 30,
            "key.doc.name" : "init(_:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "the input for creating a new instance."
                  }
                ],
                "name" : "create"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 163,
            "key.docoffset" : 1204,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Creatable.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>create<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.associatedtype usr=\"s:5Sugar9CreatableP6CreateQa\">Create<\/ref.associatedtype><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword><\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 29,
            "key.name" : "init(_:)",
            "key.namelength" : 22,
            "key.nameoffset" : 1371,
            "key.offset" : 1371,
            "key.parsed_declaration" : "init(_ create: Create) throws",
            "key.parsed_scope.end" : 30,
            "key.parsed_scope.start" : 30,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Sugar9CreatablePAA6CreateACQzRszrlEyxxKcfc\">init(_: Self) throws<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : Creatable> (Self.Type) -> (Self.Create) throws -> Self",
            "key.typeusr" : "$syx6CreateQzKcD",
            "key.usr" : "s:5Sugar9CreatablePyx6CreateQzKcfc"
          }
        ],
        "key.typename" : "Creatable.Protocol",
        "key.typeusr" : "$s5Sugar9Creatable_pmD",
        "key.usr" : "s:5Sugar9CreatableP"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.annotated_decl" : "<Declaration>public protocol Creatable<\/Declaration>",
        "key.bodylength" : 627,
        "key.bodyoffset" : 1425,
        "key.doc.column" : 17,
        "key.doc.declaration" : "public protocol Creatable",
        "key.doc.discussion" : [
          {
            "Para" : "This protocol is intended to be used with"
          },
          {
            "Para" : "`static func create(on req: Request) -> Future<Self>`"
          },
          {
            "Para" : "as defined below. This combines the `preCreate`, decoding of the associated `Create` type and initialization steps. By default the `preCreate` step does not do anything but it can be overloaded for use in validation, interrupting the creation process in case of invalid data."
          },
          {
            "Para" : "Sometimes the `Creatable` type is the type that needs to be decoded. In those cases you can use `SelfCreatable` (see below). This makes it close to the situation of simply having a `Decodable` type but you have the benefit of the `preCreate` step and being able to treat it in the same way as other `Creatable` types."
          }
        ],
        "key.doc.file" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Creatable.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Creatable.swift\" line=\"17\" column=\"17\"><Name>Creatable<\/Name><USR>s:5Sugar9CreatableP<\/USR><Declaration>public protocol Creatable<\/Declaration><CommentParts><Abstract><Para>A protocol expressing the ability for types to be created via a related <codeVoice>Decodable<\/codeVoice> type.<\/Para><\/Abstract><Discussion><Para>This protocol is intended to be used with<\/Para><Para><codeVoice>static func create(on req: Request) -&gt; Future&lt;Self&gt;<\/codeVoice><\/Para><Para>as defined below. This combines the <codeVoice>preCreate<\/codeVoice>, decoding of the associated <codeVoice>Create<\/codeVoice> type and initialization steps. By default the <codeVoice>preCreate<\/codeVoice> step does not do anything but it can be overloaded for use in validation, interrupting the creation process in case of invalid data.<\/Para><Para>Sometimes the <codeVoice>Creatable<\/codeVoice> type is the type that needs to be decoded. In those cases you can use <codeVoice>SelfCreatable<\/codeVoice> (see below). This makes it close to the situation of simply having a <codeVoice>Decodable<\/codeVoice> type but you have the benefit of the <codeVoice>preCreate<\/codeVoice> step and being able to treat it in the same way as other <codeVoice>Creatable<\/codeVoice> types.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 17,
        "key.doc.name" : "Creatable",
        "key.doc.type" : "Class",
        "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Creatable.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>Creatable<\/decl.name><\/decl.protocol>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 649,
        "key.name" : "Creatable",
        "key.namelength" : 9,
        "key.nameoffset" : 1414,
        "key.offset" : 1404,
        "key.parsed_declaration" : "extension Creatable",
        "key.parsed_scope.end" : 52,
        "key.parsed_scope.start" : 33,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static func preCreate(on req: <Type usr=\"s:5Vapor7RequestC\">Request<\/Type>) -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:s4Voida\">Void<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1500
              }
            ],
            "key.bodylength" : 33,
            "key.bodyoffset" : 1563,
            "key.doc.column" : 24,
            "key.doc.comment" : "See `Creatable`. A default implementation that does nothing.",
            "key.doc.declaration" : "public static func preCreate(on req: Request) -> Future<Void>",
            "key.doc.file" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Creatable.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Creatable.swift\" line=\"36\" column=\"24\"><Name>preCreate(on:)<\/Name><USR>s:5Sugar9CreatablePAAE9preCreate2on3NIO15EventLoopFutureCyytG5Vapor7RequestC_tFZ<\/USR><Declaration>public static func preCreate(on req: Request) -&gt; Future&lt;Void&gt;<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>Creatable<\/codeVoice>. A default implementation that does nothing.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 36,
            "key.doc.name" : "preCreate(on:)",
            "key.doc.type" : "Function",
            "key.doclength" : 65,
            "key.docoffset" : 1431,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Creatable.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>preCreate<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>on<\/decl.var.parameter.argument_label> <decl.var.parameter.name>req<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias>&gt;<\/decl.function.returntype><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 90,
            "key.name" : "preCreate(on:)",
            "key.namelength" : 26,
            "key.nameoffset" : 1519,
            "key.offset" : 1507,
            "key.parsed_declaration" : "public static func preCreate(on req: Request) -> Future<Void>",
            "key.parsed_scope.end" : 38,
            "key.parsed_scope.start" : 36,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Sugar9CreatableP9preCreate2on3NIO15EventLoopFutureCyytG5Vapor7RequestC_tFZ\">preCreate(on: Request) -&gt; Future&lt;Void&gt;<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : Creatable> (Self.Type) -> (Request) -> EventLoopFuture<()>",
            "key.typeusr" : "$s2on3NIO15EventLoopFutureCyytG5Vapor7RequestC_tcD",
            "key.usr" : "s:5Sugar9CreatablePAAE9preCreate2on3NIO15EventLoopFutureCyytG5Vapor7RequestC_tFZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static func create(on req: <Type usr=\"s:5Vapor7RequestC\">Request<\/Type>) -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:5Sugar9CreatablePAAE4Selfxmfp\">Self<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1834
              }
            ],
            "key.bodylength" : 156,
            "key.bodyoffset" : 1894,
            "key.doc.column" : 24,
            "key.doc.comment" : "The main \"interface\" of Creatable. This ties together the `preCreate`, decoding and\ninitializing steps.\n\n- Parameter req: the current `Request`.\n- Returns: a `Future` of the `Creatable` type.",
            "key.doc.declaration" : "public static func create(on req: Request) -> Future<Self>",
            "key.doc.file" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Creatable.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Creatable.swift\" line=\"45\" column=\"24\"><Name>create(on:)<\/Name><USR>s:5Sugar9CreatablePAAE6create2on3NIO15EventLoopFutureCyxG5Vapor7RequestC_tFZ<\/USR><Declaration>public static func create(on req: Request) -&gt; Future&lt;Self&gt;<\/Declaration><CommentParts><Abstract><Para>The main “interface” of Creatable. This ties together the <codeVoice>preCreate<\/codeVoice>, decoding and initializing steps.<\/Para><\/Abstract><Parameters><Parameter><Name>req<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>the current <codeVoice>Request<\/codeVoice>.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>a <codeVoice>Future<\/codeVoice> of the <codeVoice>Creatable<\/codeVoice> type.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 45,
            "key.doc.name" : "create(on:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "the current `Request`."
                  }
                ],
                "name" : "req"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "a `Future` of the `Creatable` type."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 227,
            "key.docoffset" : 1603,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Creatable.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>create<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>on<\/decl.var.parameter.argument_label> <decl.var.parameter.name>req<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.generic_type_param usr=\"s:5Sugar9CreatablePAAE4Selfxmfp\">Self<\/ref.generic_type_param>&gt;<\/decl.function.returntype><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 210,
            "key.name" : "create(on:)",
            "key.namelength" : 23,
            "key.nameoffset" : 1853,
            "key.offset" : 1841,
            "key.parsed_declaration" : "public static func create(on req: Request) -> Future<Self>",
            "key.parsed_scope.end" : 51,
            "key.parsed_scope.start" : 45,
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : Creatable> (Self.Type) -> (Request) -> EventLoopFuture<Self>",
            "key.typeusr" : "$s2on3NIO15EventLoopFutureCyxG5Vapor7RequestC_tcD",
            "key.usr" : "s:5Sugar9CreatablePAAE6create2on3NIO15EventLoopFutureCyxG5Vapor7RequestC_tFZ"
          }
        ],
        "key.typename" : "Creatable.Protocol",
        "key.typeusr" : "$s5Sugar9Creatable_pmD",
        "key.usr" : "s:5Sugar9CreatableP"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public protocol SelfCreatable : <Type usr=\"s:5Sugar9CreatableP\">Creatable<\/Type>, <Type usr=\"s:Se\">Decodable<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 2172
          }
        ],
        "key.bodylength" : 0,
        "key.bodyoffset" : 2225,
        "key.doc.column" : 17,
        "key.doc.comment" : "A special case of Creatable where the associated `Create` type is the type itself (see the\nextension below).",
        "key.doc.declaration" : "public protocol SelfCreatable : Creatable, Decodable",
        "key.doc.file" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Creatable.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Creatable.swift\" line=\"56\" column=\"17\"><Name>SelfCreatable<\/Name><USR>s:5Sugar13SelfCreatableP<\/USR><Declaration>public protocol SelfCreatable : Creatable, Decodable<\/Declaration><CommentParts><Abstract><Para>A special case of Creatable where the associated <codeVoice>Create<\/codeVoice> type is the type itself (see the extension below).<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 56,
        "key.doc.name" : "SelfCreatable",
        "key.doc.type" : "Class",
        "key.doclength" : 117,
        "key.docoffset" : 2055,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 9,
            "key.offset" : 2203
          },
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 9,
            "key.offset" : 2214
          }
        ],
        "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Creatable.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>SelfCreatable<\/decl.name> : <ref.protocol usr=\"s:5Sugar9CreatableP\">Creatable<\/ref.protocol>, <ref.protocol usr=\"s:Se\">Decodable<\/ref.protocol><\/decl.protocol>",
        "key.inheritedtypes" : [
          {
            "key.name" : "Creatable"
          },
          {
            "key.name" : "Decodable"
          }
        ],
        "key.kind" : "source.lang.swift.decl.protocol",
        "key.length" : 47,
        "key.name" : "SelfCreatable",
        "key.namelength" : 13,
        "key.nameoffset" : 2188,
        "key.offset" : 2179,
        "key.parsed_declaration" : "public protocol SelfCreatable: Creatable, Decodable",
        "key.parsed_scope.end" : 56,
        "key.parsed_scope.start" : 56,
        "key.runtime_name" : "_TtP4main13SelfCreatable_",
        "key.typename" : "SelfCreatable.Protocol",
        "key.typeusr" : "$s5Sugar13SelfCreatable_pmD",
        "key.usr" : "s:5Sugar13SelfCreatableP"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.annotated_decl" : "<Declaration>public protocol Creatable<\/Declaration>",
        "key.bodylength" : 193,
        "key.bodyoffset" : 2270,
        "key.doc.column" : 17,
        "key.doc.declaration" : "public protocol Creatable",
        "key.doc.discussion" : [
          {
            "Para" : "This protocol is intended to be used with"
          },
          {
            "Para" : "`static func create(on req: Request) -> Future<Self>`"
          },
          {
            "Para" : "as defined below. This combines the `preCreate`, decoding of the associated `Create` type and initialization steps. By default the `preCreate` step does not do anything but it can be overloaded for use in validation, interrupting the creation process in case of invalid data."
          },
          {
            "Para" : "Sometimes the `Creatable` type is the type that needs to be decoded. In those cases you can use `SelfCreatable` (see below). This makes it close to the situation of simply having a `Decodable` type but you have the benefit of the `preCreate` step and being able to treat it in the same way as other `Creatable` types."
          }
        ],
        "key.doc.file" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Creatable.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Creatable.swift\" line=\"17\" column=\"17\"><Name>Creatable<\/Name><USR>s:5Sugar9CreatableP<\/USR><Declaration>public protocol Creatable<\/Declaration><CommentParts><Abstract><Para>A protocol expressing the ability for types to be created via a related <codeVoice>Decodable<\/codeVoice> type.<\/Para><\/Abstract><Discussion><Para>This protocol is intended to be used with<\/Para><Para><codeVoice>static func create(on req: Request) -&gt; Future&lt;Self&gt;<\/codeVoice><\/Para><Para>as defined below. This combines the <codeVoice>preCreate<\/codeVoice>, decoding of the associated <codeVoice>Create<\/codeVoice> type and initialization steps. By default the <codeVoice>preCreate<\/codeVoice> step does not do anything but it can be overloaded for use in validation, interrupting the creation process in case of invalid data.<\/Para><Para>Sometimes the <codeVoice>Creatable<\/codeVoice> type is the type that needs to be decoded. In those cases you can use <codeVoice>SelfCreatable<\/codeVoice> (see below). This makes it close to the situation of simply having a <codeVoice>Decodable<\/codeVoice> type but you have the benefit of the <codeVoice>preCreate<\/codeVoice> step and being able to treat it in the same way as other <codeVoice>Creatable<\/codeVoice> types.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 17,
        "key.doc.name" : "Creatable",
        "key.doc.type" : "Class",
        "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Creatable.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>Creatable<\/decl.name><\/decl.protocol>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 236,
        "key.name" : "Creatable",
        "key.namelength" : 9,
        "key.nameoffset" : 2238,
        "key.offset" : 2228,
        "key.parsed_declaration" : "extension Creatable where Create == Self",
        "key.parsed_scope.end" : 65,
        "key.parsed_scope.start" : 58,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public init(_ create: <Type usr=\"s:5Sugar9CreatablePAA6CreateACQzRszrlE4Selfxmfp\">Self<\/Type>) throws<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2398
              }
            ],
            "key.bodylength" : 27,
            "key.bodyoffset" : 2434,
            "key.doc.column" : 12,
            "key.doc.comment" : "See `Creatable`. Default implementation of `init` where the created value is directly\nassigned to itself.",
            "key.doc.declaration" : "public init(_ create: Self) throws",
            "key.doc.file" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Creatable.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Creatable.swift\" line=\"62\" column=\"12\"><Name>init(_:)<\/Name><USR>s:5Sugar9CreatablePAA6CreateACQzRszrlEyxxKcfc<\/USR><Declaration>public init(_ create: Self) throws<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>Creatable<\/codeVoice>. Default implementation of <codeVoice>init<\/codeVoice> where the created value is directly assigned to itself.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 62,
            "key.doc.name" : "init(_:)",
            "key.doc.type" : "Function",
            "key.doclength" : 118,
            "key.docoffset" : 2276,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Creatable.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>create<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:5Sugar9CreatablePAA6CreateACQzRszrlE4Selfxmfp\">Self<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword><\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 57,
            "key.name" : "init(_:)",
            "key.namelength" : 20,
            "key.nameoffset" : 2405,
            "key.offset" : 2405,
            "key.parsed_declaration" : "public init(_ create: Self) throws",
            "key.parsed_scope.end" : 64,
            "key.parsed_scope.start" : 62,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Sugar9CreatablePyx6CreateQzKcfc\">init(_: Create) throws<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : Creatable, Self == Self.Create> (Self.Type) -> (Self) throws -> Self",
            "key.typeusr" : "$syxxKcD",
            "key.usr" : "s:5Sugar9CreatablePAA6CreateACQzRszrlEyxxKcfc"
          }
        ],
        "key.typename" : "Creatable.Protocol",
        "key.typeusr" : "$s5Sugar9Creatable_pmD",
        "key.usr" : "s:5Sugar9CreatableP"
      }
    ]
  }
}, {
  "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Date.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 2264,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>struct Date : <Type usr=\"s:10Foundation20ReferenceConvertibleP\">ReferenceConvertible<\/Type>, <Type usr=\"s:SL\">Comparable<\/Type>, <Type usr=\"s:SQ\">Equatable<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 19
          }
        ],
        "key.bodylength" : 2220,
        "key.bodyoffset" : 42,
        "key.doc.declaration" : "struct Date : ReferenceConvertible, Comparable, Equatable",
        "key.doc.discussion" : [
          {
            "Para" : "A `Date` is independent of a particular calendar or time zone. To represent a `Date` to a user, you must interpret it in the context of a `Calendar`."
          }
        ],
        "key.doc.full_as_xml" : "<Class><Name>Date<\/Name><USR>s:10Foundation4DateV<\/USR><Declaration>struct Date : ReferenceConvertible, Comparable, Equatable<\/Declaration><CommentParts><Abstract><Para><codeVoice>Date<\/codeVoice> represents a single point in time.<\/Para><\/Abstract><Discussion><Para>A <codeVoice>Date<\/codeVoice> is independent of a particular calendar or time zone. To represent a <codeVoice>Date<\/codeVoice> to a user, you must interpret it in the context of a <codeVoice>Calendar<\/codeVoice>.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.name" : "Date",
        "key.doc.type" : "Class",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>Date<\/decl.name> : <ref.protocol usr=\"s:10Foundation20ReferenceConvertibleP\">ReferenceConvertible<\/ref.protocol>, <ref.protocol usr=\"s:SL\">Comparable<\/ref.protocol>, <ref.protocol usr=\"s:SQ\">Equatable<\/ref.protocol><\/decl.struct>",
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 2237,
        "key.modulename" : "Foundation",
        "key.name" : "Date",
        "key.namelength" : 4,
        "key.nameoffset" : 36,
        "key.offset" : 26,
        "key.parsed_declaration" : "public extension Date",
        "key.parsed_scope.end" : 81,
        "key.parsed_scope.start" : 3,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>static let hourInSec: <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Date.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>hourInSec<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type><\/decl.var.static>",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 27,
            "key.name" : "hourInSec",
            "key.namelength" : 9,
            "key.nameoffset" : 59,
            "key.offset" : 48,
            "key.parsed_declaration" : "static let hourInSec = 3600",
            "key.parsed_scope.end" : 5,
            "key.parsed_scope.start" : 5,
            "key.typename" : "Int",
            "key.typeusr" : "$sSiD",
            "key.usr" : "s:10Foundation4DateV5SugarE9hourInSecSivpZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>static let minInSec: <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Date.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>minInSec<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type><\/decl.var.static>",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 24,
            "key.name" : "minInSec",
            "key.namelength" : 8,
            "key.nameoffset" : 91,
            "key.offset" : 80,
            "key.parsed_declaration" : "static let minInSec = 60",
            "key.parsed_scope.end" : 6,
            "key.parsed_scope.start" : 6,
            "key.typename" : "Int",
            "key.typeusr" : "$sSiD",
            "key.usr" : "s:10Foundation4DateV5SugarE8minInSecSivpZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>static func startOfMonth() -&gt; <Type usr=\"s:10Foundation4DateV\">Date<\/Type>?<\/Declaration>",
            "key.bodylength" : 42,
            "key.bodyoffset" : 147,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Date.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>startOfMonth<\/decl.name>() -&gt; <decl.function.returntype><ref.struct usr=\"s:10Foundation4DateV\">Date<\/ref.struct>?<\/decl.function.returntype><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 80,
            "key.name" : "startOfMonth()",
            "key.namelength" : 14,
            "key.nameoffset" : 122,
            "key.offset" : 110,
            "key.parsed_declaration" : "static func startOfMonth() -> Date?",
            "key.parsed_scope.end" : 10,
            "key.parsed_scope.start" : 8,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV5SugarE12startOfMonth8calendarACSgAA8CalendarV_tF\">startOfMonth(calendar:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(Date.Type) -> () -> Date?",
            "key.typeusr" : "$s10Foundation4DateVSgycD",
            "key.usr" : "s:10Foundation4DateV5SugarE12startOfMonthACSgyFZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>static func endOfMonth() -&gt; <Type usr=\"s:10Foundation4DateV\">Date<\/Type>?<\/Declaration>",
            "key.bodylength" : 40,
            "key.bodyoffset" : 231,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Date.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>endOfMonth<\/decl.name>() -&gt; <decl.function.returntype><ref.struct usr=\"s:10Foundation4DateV\">Date<\/ref.struct>?<\/decl.function.returntype><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 76,
            "key.name" : "endOfMonth()",
            "key.namelength" : 12,
            "key.nameoffset" : 208,
            "key.offset" : 196,
            "key.parsed_declaration" : "static func endOfMonth() -> Date?",
            "key.parsed_scope.end" : 14,
            "key.parsed_scope.start" : 12,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV5SugarE10endOfMonth8calendarACSgAA8CalendarV_tF\">endOfMonth(calendar:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(Date.Type) -> () -> Date?",
            "key.typeusr" : "$s10Foundation4DateVSgycD",
            "key.usr" : "s:10Foundation4DateV5SugarE10endOfMonthACSgyFZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>func startOfMonth(calendar: <Type usr=\"s:10Foundation8CalendarV\">Calendar<\/Type> = .current) -&gt; <Type usr=\"s:10Foundation4DateV\">Date<\/Type>?<\/Declaration>",
            "key.bodylength" : 154,
            "key.bodyoffset" : 337,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Date.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>startOfMonth<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>calendar<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:10Foundation8CalendarV\">Calendar<\/ref.struct><\/decl.var.parameter.type> = .current<\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:10Foundation4DateV\">Date<\/ref.struct>?<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 214,
            "key.name" : "startOfMonth(calendar:)",
            "key.namelength" : 43,
            "key.nameoffset" : 283,
            "key.offset" : 278,
            "key.parsed_declaration" : "func startOfMonth(calendar: Calendar = .current) -> Date?",
            "key.parsed_scope.end" : 21,
            "key.parsed_scope.start" : 16,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV5SugarE12startOfMonthACSgyFZ\">startOfMonth()<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(Date) -> (Calendar) -> Date?",
            "key.typeusr" : "$s8calendar10Foundation4DateVSgAB8CalendarV_tcD",
            "key.usr" : "s:10Foundation4DateV5SugarE12startOfMonth8calendarACSgAA8CalendarV_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>func endOfMonth(calendar: <Type usr=\"s:10Foundation8CalendarV\">Calendar<\/Type> = .current) -&gt; <Type usr=\"s:10Foundation4DateV\">Date<\/Type>?<\/Declaration>",
            "key.bodylength" : 204,
            "key.bodyoffset" : 555,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Date.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>endOfMonth<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>calendar<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:10Foundation8CalendarV\">Calendar<\/ref.struct><\/decl.var.parameter.type> = .current<\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:10Foundation4DateV\">Date<\/ref.struct>?<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 262,
            "key.name" : "endOfMonth(calendar:)",
            "key.namelength" : 41,
            "key.nameoffset" : 503,
            "key.offset" : 498,
            "key.parsed_declaration" : "func endOfMonth(calendar: Calendar = .current) -> Date?",
            "key.parsed_scope.end" : 29,
            "key.parsed_scope.start" : 23,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV5SugarE10endOfMonthACSgyFZ\">endOfMonth()<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(Date) -> (Calendar) -> Date?",
            "key.typeusr" : "$s8calendar10Foundation4DateVSgAB8CalendarV_tcD",
            "key.usr" : "s:10Foundation4DateV5SugarE10endOfMonth8calendarACSgAA8CalendarV_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>func add(days: <Type usr=\"s:Si\">Int<\/Type>, calendar: <Type usr=\"s:10Foundation8CalendarV\">Calendar<\/Type> = .current) -&gt; <Type usr=\"s:10Foundation4DateV\">Date<\/Type>?<\/Declaration>",
            "key.bodylength" : 115,
            "key.bodyoffset" : 827,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Date.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>add<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>days<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>calendar<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:10Foundation8CalendarV\">Calendar<\/ref.struct><\/decl.var.parameter.type> = .current<\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:10Foundation4DateV\">Date<\/ref.struct>?<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 177,
            "key.name" : "add(days:calendar:)",
            "key.namelength" : 45,
            "key.nameoffset" : 771,
            "key.offset" : 766,
            "key.parsed_declaration" : "func add(days: Int, calendar: Calendar = .current) -> Date?",
            "key.parsed_scope.end" : 36,
            "key.parsed_scope.start" : 31,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV5SugarE3add5hours8calendarACSgSi_AA8CalendarVtF\">add(hours:calendar:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(Date) -> (Int, Calendar) -> Date?",
            "key.typeusr" : "$s4days8calendar10Foundation4DateVSgSi_AC8CalendarVtcD",
            "key.usr" : "s:10Foundation4DateV5SugarE3add4days8calendarACSgSi_AA8CalendarVtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>func sub(days: <Type usr=\"s:Si\">Int<\/Type>, calendar: <Type usr=\"s:10Foundation8CalendarV\">Calendar<\/Type> = .current) -&gt; <Type usr=\"s:10Foundation4DateV\">Date<\/Type>?<\/Declaration>",
            "key.bodylength" : 116,
            "key.bodyoffset" : 1010,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Date.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>sub<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>days<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>calendar<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:10Foundation8CalendarV\">Calendar<\/ref.struct><\/decl.var.parameter.type> = .current<\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:10Foundation4DateV\">Date<\/ref.struct>?<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 178,
            "key.name" : "sub(days:calendar:)",
            "key.namelength" : 45,
            "key.nameoffset" : 954,
            "key.offset" : 949,
            "key.parsed_declaration" : "func sub(days: Int, calendar: Calendar = .current) -> Date?",
            "key.parsed_scope.end" : 43,
            "key.parsed_scope.start" : 38,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV5SugarE3sub5hours8calendarACSgSi_AA8CalendarVtF\">sub(hours:calendar:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(Date) -> (Int, Calendar) -> Date?",
            "key.typeusr" : "$s4days8calendar10Foundation4DateVSgSi_AC8CalendarVtcD",
            "key.usr" : "s:10Foundation4DateV5SugarE3sub4days8calendarACSgSi_AA8CalendarVtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>func add(hours: <Type usr=\"s:Si\">Int<\/Type>, calendar: <Type usr=\"s:10Foundation8CalendarV\">Calendar<\/Type> = .current) -&gt; <Type usr=\"s:10Foundation4DateV\">Date<\/Type>?<\/Declaration>",
            "key.bodylength" : 117,
            "key.bodyoffset" : 1195,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Date.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>add<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>hours<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>calendar<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:10Foundation8CalendarV\">Calendar<\/ref.struct><\/decl.var.parameter.type> = .current<\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:10Foundation4DateV\">Date<\/ref.struct>?<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 180,
            "key.name" : "add(hours:calendar:)",
            "key.namelength" : 46,
            "key.nameoffset" : 1138,
            "key.offset" : 1133,
            "key.parsed_declaration" : "func add(hours: Int, calendar: Calendar = .current) -> Date?",
            "key.parsed_scope.end" : 50,
            "key.parsed_scope.start" : 45,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV5SugarE3add4days8calendarACSgSi_AA8CalendarVtF\">add(days:calendar:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(Date) -> (Int, Calendar) -> Date?",
            "key.typeusr" : "$s5hours8calendar10Foundation4DateVSgSi_AC8CalendarVtcD",
            "key.usr" : "s:10Foundation4DateV5SugarE3add5hours8calendarACSgSi_AA8CalendarVtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>func sub(hours: <Type usr=\"s:Si\">Int<\/Type>, calendar: <Type usr=\"s:10Foundation8CalendarV\">Calendar<\/Type> = .current) -&gt; <Type usr=\"s:10Foundation4DateV\">Date<\/Type>?<\/Declaration>",
            "key.bodylength" : 118,
            "key.bodyoffset" : 1381,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Date.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>sub<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>hours<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>calendar<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:10Foundation8CalendarV\">Calendar<\/ref.struct><\/decl.var.parameter.type> = .current<\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:10Foundation4DateV\">Date<\/ref.struct>?<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 181,
            "key.name" : "sub(hours:calendar:)",
            "key.namelength" : 46,
            "key.nameoffset" : 1324,
            "key.offset" : 1319,
            "key.parsed_declaration" : "func sub(hours: Int, calendar: Calendar = .current) -> Date?",
            "key.parsed_scope.end" : 57,
            "key.parsed_scope.start" : 52,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV5SugarE3sub4days8calendarACSgSi_AA8CalendarVtF\">sub(days:calendar:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(Date) -> (Int, Calendar) -> Date?",
            "key.typeusr" : "$s5hours8calendar10Foundation4DateVSgSi_AC8CalendarVtcD",
            "key.usr" : "s:10Foundation4DateV5SugarE3sub5hours8calendarACSgSi_AA8CalendarVtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>func dateBySetting(hour: <Type usr=\"s:Si\">Int<\/Type>, minute: <Type usr=\"s:Si\">Int<\/Type>, second: <Type usr=\"s:Si\">Int<\/Type>, calendar: <Type usr=\"s:10Foundation8CalendarV\">Calendar<\/Type> = Calendar(identifier: .gregorian)) -&gt; <Type usr=\"s:10Foundation4DateV\">Date<\/Type>?<\/Declaration>",
            "key.bodylength" : 306,
            "key.bodyoffset" : 1954,
            "key.doc.column" : 10,
            "key.doc.comment" : "Set hour\/min\/sec of a date\n\nReplaces `Calendar().date(bySettingHour hour: Int, minute: Int, ...)` which is not\nrunning on Linux yet.\n\n- Parameters:\n  - hour: Int\n  - minute: Int\n  - second: Int\n- Returns: Date?",
            "key.doc.declaration" : "func dateBySetting(hour: Int, minute: Int, second: Int, calendar: Calendar = Calendar(identifier: .gregorian)) -> Date?",
            "key.doc.discussion" : [
              {
                "Para" : "Replaces `Calendar().date(bySettingHour hour: Int, minute: Int, ...)` which is not running on Linux yet."
              }
            ],
            "key.doc.file" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Date.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Date.swift\" line=\"69\" column=\"10\"><Name>dateBySetting(hour:minute:second:calendar:)<\/Name><USR>s:10Foundation4DateV5SugarE13dateBySetting4hour6minute6second8calendarACSgSi_S2iAA8CalendarVtF<\/USR><Declaration>func dateBySetting(hour: Int, minute: Int, second: Int, calendar: Calendar = Calendar(identifier: .gregorian)) -&gt; Date?<\/Declaration><CommentParts><Abstract><Para>Set hour\/min\/sec of a date<\/Para><\/Abstract><Parameters><Parameter><Name>hour<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Int<\/Para><\/Discussion><\/Parameter><Parameter><Name>minute<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Int<\/Para><\/Discussion><\/Parameter><Parameter><Name>second<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Int<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>Date?<\/Para><\/ResultDiscussion><Discussion><Para>Replaces <codeVoice>Calendar().date(bySettingHour hour: Int, minute: Int, ...)<\/codeVoice> which is not running on Linux yet.<\/Para><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 69,
            "key.doc.name" : "dateBySetting(hour:minute:second:calendar:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Int"
                  }
                ],
                "name" : "hour"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Int"
                  }
                ],
                "name" : "minute"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Int"
                  }
                ],
                "name" : "second"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "Date?"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 285,
            "key.docoffset" : 1506,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Date.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>dateBySetting<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>hour<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>minute<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>second<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>calendar<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:10Foundation8CalendarV\">Calendar<\/ref.struct><\/decl.var.parameter.type> = Calendar(identifier: .gregorian)<\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:10Foundation4DateV\">Date<\/ref.struct>?<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 466,
            "key.name" : "dateBySetting(hour:minute:second:calendar:)",
            "key.namelength" : 143,
            "key.nameoffset" : 1800,
            "key.offset" : 1795,
            "key.parsed_declaration" : "func dateBySetting(\n    hour: Int,\n    minute: Int,\n    second: Int,\n    calendar: Calendar = Calendar(identifier: .gregorian)\n) -> Date?",
            "key.parsed_scope.end" : 80,
            "key.parsed_scope.start" : 69,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let dateComponents: <Type usr=\"s:10Foundation14DateComponentsV\">DateComponents<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Date.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>dateComponents<\/decl.name>: <decl.var.type><ref.struct usr=\"s:10Foundation14DateComponentsV\">DateComponents<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 79,
                "key.name" : "dateComponents",
                "key.namelength" : 14,
                "key.nameoffset" : 1967,
                "key.offset" : 1963,
                "key.parsed_declaration" : "let dateComponents = calendar.dateComponents([.year, .month, .day], from: self)",
                "key.parsed_scope.end" : 75,
                "key.parsed_scope.start" : 75,
                "key.typename" : "DateComponents",
                "key.typeusr" : "$s10Foundation14DateComponentsVD",
                "key.usr" : "s:10Foundation4DateV5SugarE13dateBySetting4hour6minute6second8calendarACSgSi_S2iAA8CalendarVtF0D10ComponentsL_AA0bL0Vvp"
              }
            ],
            "key.typename" : "(Date) -> (Int, Int, Int, Calendar) -> Date?",
            "key.typeusr" : "$s4hour6minute6second8calendar10Foundation4DateVSgSi_S2iAE8CalendarVtcD",
            "key.usr" : "s:10Foundation4DateV5SugarE13dateBySetting4hour6minute6second8calendarACSgSi_S2iAA8CalendarVtF"
          }
        ],
        "key.typename" : "Date.Type",
        "key.typeusr" : "$s10Foundation4DateVmD",
        "key.usr" : "s:10Foundation4DateV"
      }
    ]
  }
}, {
  "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Either.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 1541,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public enum Either&lt;L, R&gt;<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 52
          }
        ],
        "key.bodylength" : 36,
        "key.bodyoffset" : 78,
        "key.doc.column" : 13,
        "key.doc.comment" : "A value that can one of two types",
        "key.doc.declaration" : "public enum Either<L, R>",
        "key.doc.file" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Either.swift",
        "key.doc.full_as_xml" : "<Other file=\"\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Either.swift\" line=\"4\" column=\"13\"><Name>Either<\/Name><USR>s:5Sugar6EitherO<\/USR><Declaration>public enum Either&lt;L, R&gt;<\/Declaration><CommentParts><Abstract><Para>A value that can one of two types<\/Para><\/Abstract><\/CommentParts><\/Other>",
        "key.doc.line" : 4,
        "key.doc.name" : "Either",
        "key.doc.type" : "Other",
        "key.doclength" : 38,
        "key.docoffset" : 14,
        "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Either.swift",
        "key.fully_annotated_decl" : "<decl.enum><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>enum<\/syntaxtype.keyword> <decl.name>Either<\/decl.name>&lt;<decl.generic_type_param usr=\"s:5Sugar6EitherO1Lxmfp\"><decl.generic_type_param.name>L<\/decl.generic_type_param.name><\/decl.generic_type_param>, <decl.generic_type_param usr=\"s:5Sugar6EitherO1Rq_mfp\"><decl.generic_type_param.name>R<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;<\/decl.enum>",
        "key.kind" : "source.lang.swift.decl.enum",
        "key.length" : 56,
        "key.name" : "Either",
        "key.namelength" : 6,
        "key.nameoffset" : 64,
        "key.offset" : 59,
        "key.parsed_declaration" : "public enum Either<L, R>",
        "key.parsed_scope.end" : 7,
        "key.parsed_scope.start" : 4,
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>L<\/Declaration>",
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Either.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>L<\/decl.generic_type_param.name><\/decl.generic_type_param>",
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 1,
            "key.name" : "L",
            "key.namelength" : 1,
            "key.nameoffset" : 71,
            "key.offset" : 71,
            "key.parsed_declaration" : "public enum Either<L, R>",
            "key.parsed_scope.end" : 4,
            "key.parsed_scope.start" : 4,
            "key.typename" : "L.Type",
            "key.typeusr" : "$sxmD",
            "key.usr" : "s:5Sugar6EitherO1Lxmfp"
          },
          {
            "key.annotated_decl" : "<Declaration>R<\/Declaration>",
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Either.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>R<\/decl.generic_type_param.name><\/decl.generic_type_param>",
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 1,
            "key.name" : "R",
            "key.namelength" : 1,
            "key.nameoffset" : 74,
            "key.offset" : 74,
            "key.parsed_declaration" : "public enum Either<L, R>",
            "key.parsed_scope.end" : 4,
            "key.parsed_scope.start" : 4,
            "key.typename" : "R.Type",
            "key.typeusr" : "$sq_mD",
            "key.usr" : "s:5Sugar6EitherO1Rq_mfp"
          },
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.length" : 12,
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 83,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>case left(<Type usr=\"s:5Sugar6EitherO1Lxmfp\">L<\/Type>)<\/Declaration>",
                "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Either.swift",
                "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>left<\/decl.name>(<decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:5Sugar6EitherO1Lxmfp\">L<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.enumelement>",
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.length" : 7,
                "key.name" : "left(_:)",
                "key.namelength" : 7,
                "key.nameoffset" : 88,
                "key.offset" : 88,
                "key.parsed_declaration" : "case left(L)",
                "key.parsed_scope.end" : 5,
                "key.parsed_scope.start" : 5,
                "key.typename" : "<L, R> (Either<L, R>.Type) -> (L) -> Either<L, R>",
                "key.typeusr" : "$sy5Sugar6EitherOyxq_GxcADmcr0_luD",
                "key.usr" : "s:5Sugar6EitherO4leftyACyxq_GxcAEmr0_lF"
              }
            ]
          },
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.length" : 13,
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 100,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>case right(<Type usr=\"s:5Sugar6EitherO1Rq_mfp\">R<\/Type>)<\/Declaration>",
                "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Either.swift",
                "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>right<\/decl.name>(<decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:5Sugar6EitherO1Rq_mfp\">R<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.enumelement>",
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.length" : 8,
                "key.name" : "right(_:)",
                "key.namelength" : 8,
                "key.nameoffset" : 105,
                "key.offset" : 105,
                "key.parsed_declaration" : "case right(R)",
                "key.parsed_scope.end" : 6,
                "key.parsed_scope.start" : 6,
                "key.typename" : "<L, R> (Either<L, R>.Type) -> (R) -> Either<L, R>",
                "key.typeusr" : "$sy5Sugar6EitherOyxq_Gq_cADmcr0_luD",
                "key.usr" : "s:5Sugar6EitherO5rightyACyxq_Gq_cAEmr0_lF"
              }
            ]
          }
        ],
        "key.typename" : "Either<L, R>.Type",
        "key.typeusr" : "$s5Sugar6EitherOyxq_GmD",
        "key.usr" : "s:5Sugar6EitherO"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.annotated_decl" : "<Declaration>public enum Either&lt;L, R&gt;<\/Declaration>",
        "key.bodylength" : 277,
        "key.bodyoffset" : 203,
        "key.doc.column" : 13,
        "key.doc.declaration" : "public enum Either<L, R>",
        "key.doc.file" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Either.swift",
        "key.doc.full_as_xml" : "<Other file=\"\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Either.swift\" line=\"4\" column=\"13\"><Name>Either<\/Name><USR>s:5Sugar6EitherO<\/USR><Declaration>public enum Either&lt;L, R&gt;<\/Declaration><CommentParts><Abstract><Para>A value that can one of two types<\/Para><\/Abstract><\/CommentParts><\/Other>",
        "key.doc.line" : 4,
        "key.doc.name" : "Either",
        "key.doc.type" : "Other",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 17,
            "key.offset" : 135
          }
        ],
        "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Either.swift",
        "key.fully_annotated_decl" : "<decl.enum><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>enum<\/syntaxtype.keyword> <decl.name>Either<\/decl.name>&lt;<decl.generic_type_param usr=\"s:5Sugar6EitherO1Lxmfp\"><decl.generic_type_param.name>L<\/decl.generic_type_param.name><\/decl.generic_type_param>, <decl.generic_type_param usr=\"s:5Sugar6EitherO1Rq_mfp\"><decl.generic_type_param.name>R<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;<\/decl.enum>",
        "key.inheritedtypes" : [
          {
            "key.name" : "ResponseEncodable"
          }
        ],
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 364,
        "key.name" : "Either",
        "key.namelength" : 6,
        "key.nameoffset" : 127,
        "key.offset" : 117,
        "key.parsed_declaration" : "extension Either: ResponseEncodable where L: ResponseEncodable, R: ResponseEncodable",
        "key.parsed_scope.end" : 17,
        "key.parsed_scope.start" : 9,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func encode(for req: <Type usr=\"s:5Vapor7RequestC\">Request<\/Type>) throws -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:5Vapor8ResponseC\">Response<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 247
              }
            ],
            "key.bodylength" : 166,
            "key.bodyoffset" : 312,
            "key.doc.column" : 17,
            "key.doc.comment" : "See `ResponseEncodable.encode`",
            "key.doc.declaration" : "public func encode(for req: Request) throws -> Future<Response>",
            "key.doc.file" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Either.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Either.swift\" line=\"11\" column=\"17\"><Name>encode(for:)<\/Name><USR>s:5Sugar6EitherOAA5Vapor17ResponseEncodableRzAdER_rlE6encode3for3NIO15EventLoopFutureCyAD0D0CGAD7RequestC_tKF<\/USR><Declaration>public func encode(for req: Request) throws -&gt; Future&lt;Response&gt;<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>ResponseEncodable.encode<\/codeVoice><\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 11,
            "key.doc.name" : "encode(for:)",
            "key.doc.type" : "Function",
            "key.doclength" : 35,
            "key.docoffset" : 208,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Either.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>encode<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>for<\/decl.var.parameter.argument_label> <decl.var.parameter.name>req<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.class usr=\"s:5Vapor8ResponseC\">Response<\/ref.class>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 225,
            "key.name" : "encode(for:)",
            "key.namelength" : 24,
            "key.nameoffset" : 259,
            "key.offset" : 254,
            "key.overrides" : [
              {
                "key.usr" : "s:5Vapor17ResponseEncodableP6encode3for3NIO15EventLoopFutureCyAA0B0CGAA7RequestC_tKF"
              }
            ],
            "key.parsed_declaration" : "public func encode(for req: Request) throws -> Future<Response>",
            "key.parsed_scope.end" : 16,
            "key.parsed_scope.start" : 11,
            "key.substructure" : [

            ],
            "key.typename" : "<L, R where L : ResponseEncodable, R : ResponseEncodable> (Either<L, R>) -> (Request) throws -> EventLoopFuture<Response>",
            "key.typeusr" : "$s3for3NIO15EventLoopFutureCy5Vapor8ResponseCGAE7RequestC_tKcD",
            "key.usr" : "s:5Sugar6EitherOAA5Vapor17ResponseEncodableRzAdER_rlE6encode3for3NIO15EventLoopFutureCyAD0D0CGAD7RequestC_tKF"
          }
        ],
        "key.typename" : "Either<L, R>.Type",
        "key.typeusr" : "$s5Sugar6EitherOyxq_GmD",
        "key.usr" : "s:5Sugar6EitherO"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.annotated_decl" : "<Declaration>typealias Future = <Type usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/Type><\/Declaration>",
        "key.bodylength" : 541,
        "key.bodyoffset" : 501,
        "key.doc.declaration" : "typealias Future = NIO.EventLoopFuture",
        "key.doc.full_as_xml" : "<Other><Name>Future<\/Name><USR>s:5Async6Futurea<\/USR><Declaration>typealias Future = NIO.EventLoopFuture<\/Declaration><CommentParts><Abstract><Para>Convenience shorthand for <codeVoice>EventLoopFuture<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
        "key.doc.name" : "Future",
        "key.doc.type" : "Other",
        "key.fully_annotated_decl" : "<decl.typealias><syntaxtype.keyword>typealias<\/syntaxtype.keyword> <decl.name>Future<\/decl.name> = <ref.class usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/ref.class><\/decl.typealias>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 560,
        "key.modulename" : "Async",
        "key.name" : "Future",
        "key.namelength" : 6,
        "key.nameoffset" : 493,
        "key.offset" : 483,
        "key.parsed_declaration" : "extension Future",
        "key.parsed_scope.end" : 33,
        "key.parsed_scope.start" : 19,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func promoteErrors&lt;E&gt;(ofType type: <Type usr=\"s:3NIO15EventLoopFutureC5SugarE13promoteErrors6ofTypeACyAD6EitherOyxqd__GGqd__m_ts5ErrorRd__lF1EL_qd__mfp\">E<\/Type>.Type = E.self) -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:5Sugar6EitherO\">Either<\/Type>&lt;<Type usr=\"s:3NIO15EventLoopFutureC5SugarE1Txmfp\">T<\/Type>, <Type usr=\"s:3NIO15EventLoopFutureC5SugarE13promoteErrors6ofTypeACyAD6EitherOyxqd__GGqd__m_ts5ErrorRd__lF1EL_qd__mfp\">E<\/Type>&gt;&gt; where E : <Type usr=\"s:s5ErrorP\">Error<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 740
              }
            ],
            "key.bodylength" : 209,
            "key.bodyoffset" : 831,
            "key.doc.column" : 17,
            "key.doc.comment" : "Transforms a `Future` into one that can be either the value or an error of a given type.\n\n- Parameter type: The `Error` type to be promoted.\n- Returns: A `Future` that yields either a value or an error.",
            "key.doc.declaration" : "public func promoteErrors<E>(ofType type: E.Type = E.self) -> Future<Either<T, E>> where E : Error",
            "key.doc.file" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Either.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Either.swift\" line=\"24\" column=\"17\"><Name>promoteErrors(ofType:)<\/Name><USR>s:3NIO15EventLoopFutureC5SugarE13promoteErrors6ofTypeACyAD6EitherOyxqd__GGqd__m_ts5ErrorRd__lF<\/USR><Declaration>public func promoteErrors&lt;E&gt;(ofType type: E.Type = E.self) -&gt; Future&lt;Either&lt;T, E&gt;&gt; where E : Error<\/Declaration><CommentParts><Abstract><Para>Transforms a <codeVoice>Future<\/codeVoice> into one that can be either the value or an error of a given type.<\/Para><\/Abstract><Parameters><Parameter><Name>type<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The <codeVoice>Error<\/codeVoice> type to be promoted.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>A <codeVoice>Future<\/codeVoice> that yields either a value or an error.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 24,
            "key.doc.name" : "promoteErrors(ofType:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "The `Error` type to be promoted."
                  }
                ],
                "name" : "type"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "A `Future` that yields either a value or an error."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 230,
            "key.docoffset" : 506,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Either.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>promoteErrors<\/decl.name>&lt;<decl.generic_type_param usr=\"s:3NIO15EventLoopFutureC5SugarE13promoteErrors6ofTypeACyAD6EitherOyxqd__GGqd__m_ts5ErrorRd__lF1EL_qd__mfp\"><decl.generic_type_param.name>E<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>ofType<\/decl.var.parameter.argument_label> <decl.var.parameter.name>type<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:3NIO15EventLoopFutureC5SugarE13promoteErrors6ofTypeACyAD6EitherOyxqd__GGqd__m_ts5ErrorRd__lF1EL_qd__mfp\">E<\/ref.generic_type_param>.Type<\/decl.var.parameter.type> = E.self<\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.enum usr=\"s:5Sugar6EitherO\">Either<\/ref.enum>&lt;<ref.generic_type_param usr=\"s:3NIO15EventLoopFutureC5SugarE1Txmfp\">T<\/ref.generic_type_param>, <ref.generic_type_param usr=\"s:3NIO15EventLoopFutureC5SugarE13promoteErrors6ofTypeACyAD6EitherOyxqd__GGqd__m_ts5ErrorRd__lF1EL_qd__mfp\">E<\/ref.generic_type_param>&gt;&gt;<\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>E : <ref.protocol usr=\"s:s5ErrorP\">Error<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 294,
            "key.name" : "promoteErrors(ofType:)",
            "key.namelength" : 53,
            "key.nameoffset" : 752,
            "key.offset" : 747,
            "key.parsed_declaration" : "public func promoteErrors<E: Error>(ofType type: E.Type = E.self) -> Future<Either<T, E>>",
            "key.parsed_scope.end" : 32,
            "key.parsed_scope.start" : 24,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>E : <Type usr=\"s:s5ErrorP\">Error<\/Type><\/Declaration>",
                "key.elements" : [
                  {
                    "key.kind" : "source.lang.swift.structure.elem.typeref",
                    "key.length" : 5,
                    "key.offset" : 769
                  }
                ],
                "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Either.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>E<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:s5ErrorP\">Error<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
                "key.inheritedtypes" : [
                  {
                    "key.name" : "Error"
                  }
                ],
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 8,
                "key.name" : "E",
                "key.namelength" : 1,
                "key.nameoffset" : 766,
                "key.offset" : 766,
                "key.parsed_declaration" : "public func promoteErrors<E: Error>(ofType type: E.Type = E.self) -> Future<Either<T, E>>",
                "key.parsed_scope.end" : 24,
                "key.parsed_scope.start" : 24,
                "key.typename" : "E.Type",
                "key.typeusr" : "$sqd__mD",
                "key.usr" : "s:3NIO15EventLoopFutureC5SugarE13promoteErrors6ofTypeACyAD6EitherOyxqd__GGqd__m_ts5ErrorRd__lF1EL_qd__mfp"
              }
            ],
            "key.typename" : "<T, E where E : Error> (EventLoopFuture<T>) -> (E.Type) -> EventLoopFuture<Either<T, E>>",
            "key.typeusr" : "$s6ofType3NIO15EventLoopFutureCy5Sugar6EitherOyxqd__GGqd__m_tcs5ErrorRd__luD",
            "key.usr" : "s:3NIO15EventLoopFutureC5SugarE13promoteErrors6ofTypeACyAD6EitherOyxqd__GGqd__m_ts5ErrorRd__lF"
          }
        ],
        "key.typename" : "EventLoopFuture.Type",
        "key.typeusr" : "$s3NIO15EventLoopFutureCmD",
        "key.usr" : "s:5Async6Futurea"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.annotated_decl" : "<Declaration>public enum Either&lt;L, R&gt;<\/Declaration>",
        "key.bodylength" : 432,
        "key.bodyoffset" : 1107,
        "key.doc.column" : 13,
        "key.doc.declaration" : "public enum Either<L, R>",
        "key.doc.file" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Either.swift",
        "key.doc.full_as_xml" : "<Other file=\"\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Either.swift\" line=\"4\" column=\"13\"><Name>Either<\/Name><USR>s:5Sugar6EitherO<\/USR><Declaration>public enum Either&lt;L, R&gt;<\/Declaration><CommentParts><Abstract><Para>A value that can one of two types<\/Para><\/Abstract><\/CommentParts><\/Other>",
        "key.doc.line" : 4,
        "key.doc.name" : "Either",
        "key.doc.type" : "Other",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 9,
            "key.offset" : 1063
          }
        ],
        "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Either.swift",
        "key.fully_annotated_decl" : "<decl.enum><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>enum<\/syntaxtype.keyword> <decl.name>Either<\/decl.name>&lt;<decl.generic_type_param usr=\"s:5Sugar6EitherO1Lxmfp\"><decl.generic_type_param.name>L<\/decl.generic_type_param.name><\/decl.generic_type_param>, <decl.generic_type_param usr=\"s:5Sugar6EitherO1Rq_mfp\"><decl.generic_type_param.name>R<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;<\/decl.enum>",
        "key.inheritedtypes" : [
          {
            "key.name" : "Equatable"
          }
        ],
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 495,
        "key.name" : "Either",
        "key.namelength" : 6,
        "key.nameoffset" : 1055,
        "key.offset" : 1045,
        "key.parsed_declaration" : "extension Either: Equatable where L: Equatable, R: Equatable",
        "key.parsed_scope.end" : 50,
        "key.parsed_scope.start" : 35,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static func == (lhs: <Type usr=\"s:5Sugar6EitherO\">Either<\/Type>&lt;<Type usr=\"s:5Sugar6EitherOAASQRzSQR_rlE1Lxmfp\">L<\/Type>, <Type usr=\"s:5Sugar6EitherOAASQRzSQR_rlE1Rq_mfp\">R<\/Type>&gt;, rhs: <Type usr=\"s:5Sugar6EitherO\">Either<\/Type>&lt;<Type usr=\"s:5Sugar6EitherOAASQRzSQR_rlE1Lxmfp\">L<\/Type>, <Type usr=\"s:5Sugar6EitherOAASQRzSQR_rlE1Rq_mfp\">R<\/Type>&gt;) -&gt; <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1193
              }
            ],
            "key.bodylength" : 263,
            "key.bodyoffset" : 1263,
            "key.doc.declaration" : "static func == (lhs: Self, rhs: Self) -> Bool",
            "key.doc.discussion" : [
              {
                "Para" : "Equality is the inverse of inequality. For any values `a` and `b`, `a == b` implies that `a != b` is `false`."
              }
            ],
            "key.doc.full_as_xml" : "<Function><Name>==(_:_:)<\/Name><USR>s:SQ2eeoiySbx_xtFZ<\/USR><Declaration>static func == (lhs: Self, rhs: Self) -&gt; Bool<\/Declaration><CommentParts><Abstract><Para>Returns a Boolean value indicating whether two values are equal.<\/Para><\/Abstract><Parameters><Parameter><Name>lhs<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>A value to compare.<\/Para><\/Discussion><\/Parameter><Parameter><Name>rhs<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Another value to compare.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Para>Equality is the inverse of inequality. For any values <codeVoice>a<\/codeVoice> and <codeVoice>b<\/codeVoice>, <codeVoice>a == b<\/codeVoice> implies that <codeVoice>a != b<\/codeVoice> is <codeVoice>false<\/codeVoice>.<\/Para><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.name" : "==(_:_:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "A value to compare."
                  }
                ],
                "name" : "lhs"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Another value to compare."
                  }
                ],
                "name" : "rhs"
              }
            ],
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Either.swift",
            "key.fully_annotated_decl" : "<decl.function.operator.infix><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>== <\/decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.enum usr=\"s:5Sugar6EitherO\">Either<\/ref.enum>&lt;<ref.generic_type_param usr=\"s:5Sugar6EitherOAASQRzSQR_rlE1Lxmfp\">L<\/ref.generic_type_param>, <ref.generic_type_param usr=\"s:5Sugar6EitherOAASQRzSQR_rlE1Rq_mfp\">R<\/ref.generic_type_param>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.enum usr=\"s:5Sugar6EitherO\">Either<\/ref.enum>&lt;<ref.generic_type_param usr=\"s:5Sugar6EitherOAASQRzSQR_rlE1Lxmfp\">L<\/ref.generic_type_param>, <ref.generic_type_param usr=\"s:5Sugar6EitherOAASQRzSQR_rlE1Rq_mfp\">R<\/ref.generic_type_param>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype><\/decl.function.operator.infix>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 327,
            "key.name" : "==(_:_:)",
            "key.namelength" : 41,
            "key.nameoffset" : 1212,
            "key.offset" : 1200,
            "key.overrides" : [
              {
                "key.usr" : "s:SQ2eeoiySbx_xtFZ"
              }
            ],
            "key.parsed_declaration" : "public static func == (lhs: Either<L, R>, rhs: Either<L, R>) -> Bool",
            "key.parsed_scope.end" : 48,
            "key.parsed_scope.start" : 39,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbypXpSg_ABtF\">== (_: Any.Type?, _: Any.Type?) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbx_xtSYRzSQ8RawValueRpzlF\">== &lt;T&gt;(_: T, _: T) -&gt; Bool where T : RawRepresentable, T.RawValue : Equatable<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbyt_yttF\">== (_: (), _: ()) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbx_q_t_x_q_ttSQRzSQR_r0_lF\">== &lt;A, B&gt;(_: (A, B), _: (A, B)) -&gt; Bool where A : Equatable, B : Equatable<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbx_q_q0_t_x_q_q0_ttSQRzSQR_SQR0_r1_lF\">== &lt;A, B, C&gt;(_: (A, B, C), _: (A, B, C)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbx_q_q0_q1_t_x_q_q0_q1_ttSQRzSQR_SQR0_SQR1_r2_lF\">== &lt;A, B, C, D&gt;(_: (A, B, C, D), _: (A, B, C, D)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable, D : Equatable<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbx_q_q0_q1_q2_t_x_q_q0_q1_q2_ttSQRzSQR_SQR0_SQR1_SQR2_r3_lF\">== &lt;A, B, C, D, E&gt;(_: (A, B, C, D, E), _: (A, B, C, D, E)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable, D : Equatable, E : Equatable<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbx_q_q0_q1_q2_q3_t_x_q_q0_q1_q2_q3_ttSQRzSQR_SQR0_SQR1_SQR2_SQR3_r4_lF\">== &lt;A, B, C, D, E, F&gt;(_: (A, B, C, D, E, F), _: (A, B, C, D, E, F)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable, D : Equatable, E : Equatable, F : Equatable<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SasSQRzlE2eeoiySbSayxG_ABtFZ\">== (_: Array&lt;Element&gt;, _: Array&lt;Element&gt;) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s10ArraySliceVsSQRzlE2eeoiySbAByxG_ADtFZ\">== (_: ArraySlice&lt;Element&gt;, _: ArraySlice&lt;Element&gt;) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sb2eeoiyS2b_SbtFZ\">== (_: Bool, _: Bool) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SJ2eeoiySbSJ_SJtFZ\">== (_: Character, _: Character) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s17CodingUserInfoKeyV2eeoiySbAB_ABtFZ\">== (_: CodingUserInfoKey, _: CodingUserInfoKey) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s15ContiguousArrayVsSQRzlE2eeoiySbAByxG_ADtFZ\">== (_: ContiguousArray&lt;Element&gt;, _: ContiguousArray&lt;Element&gt;) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SNsSxRzSZ6StrideRpzrlE5IndexO2eeoiySbADyx_G_AFtFZ\">== (_: ClosedRange&lt;Bound&gt;.Index, _: ClosedRange&lt;Bound&gt;.Index) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SN2eeoiySbSNyxG_ABtFZ\">== (_: ClosedRange&lt;Bound&gt;, _: ClosedRange&lt;Bound&gt;) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s13OpaquePointerV2eeoiySbAB_ABtFZ\">== (_: OpaquePointer, _: OpaquePointer) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SD4KeysV2eeoiySbAByxq__G_ADtFZ\">== (_: Dictionary&lt;Key, Value&gt;.Keys, _: Dictionary&lt;Key, Value&gt;.Keys) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SDsSQR_rlE2eeoiySbSDyxq_G_ABtFZ\">== (_: [Key : Value], _: [Key : Value]) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SD5IndexV2eeoiySbAByxq__G_ADtFZ\">== (_: Dictionary&lt;Key, Value&gt;.Index, _: Dictionary&lt;Key, Value&gt;.Index) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s15EmptyCollectionV2eeoiySbAByxG_ADtFZ\">== (_: EmptyCollection&lt;Element&gt;, _: EmptyCollection&lt;Element&gt;) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SQ2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s15FlattenSequenceVsSlRzSl7ElementRpzrlE5IndexV2eeoiySbAFyx_G_AHtFZ\">== (_: FlattenCollection&lt;Base&gt;.Index, _: FlattenCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s17FloatingPointSignO2eeoiySbAB_ABtFZ\">== (_: FloatingPointSign, _: FloatingPointSign) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s27FloatingPointClassificationO2eeoiySbAB_ABtFZ\">== (_: FloatingPointClassification, _: FloatingPointClassification) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s25FloatingPointRoundingRuleO2eeoiySbAB_ABtFZ\">== (_: FloatingPointRoundingRule, _: FloatingPointRoundingRule) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SFsE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s11AnyHashableV2eeoiySbAB_ABtFZ\">== (_: AnyHashable, _: AnyHashable) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SzsE2eeoiySbx_qd__tSzRd__lFZ\">== &lt;Other&gt;(_: Self, _: Other) -&gt; Bool where Other : BinaryInteger<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s5UInt8V2eeoiySbAB_ABtFZ\">== (_: UInt8, _: UInt8) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s4Int8V2eeoiySbAB_ABtFZ\">== (_: Int8, _: Int8) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt16V2eeoiySbAB_ABtFZ\">== (_: UInt16, _: UInt16) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s5Int16V2eeoiySbAB_ABtFZ\">== (_: Int16, _: Int16) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt32V2eeoiySbAB_ABtFZ\">== (_: UInt32, _: UInt32) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s5Int32V2eeoiySbAB_ABtFZ\">== (_: Int32, _: Int32) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt64V2eeoiySbAB_ABtFZ\">== (_: UInt64, _: UInt64) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s5Int64V2eeoiySbAB_ABtFZ\">== (_: Int64, _: Int64) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Su2eeoiySbSu_SutFZ\">== (_: UInt, _: UInt) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Si2eeoiySbSi_SitFZ\">== (_: Int, _: Int) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s10AnyKeyPathC2eeoiySbAB_ABtFZ\">== (_: AnyKeyPath, _: AnyKeyPath) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s20ManagedBufferPointerV2eeoiySbAByxq_G_ADtFZ\">== (_: ManagedBufferPointer&lt;Header, Element&gt;, _: ManagedBufferPointer&lt;Header, Element&gt;) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s7UnicodeO6ScalarV2eeoiySbAD_ADtFZ\">== (_: Unicode.Scalar, _: Unicode.Scalar) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SO2eeoiySbSO_SOtFZ\">== (_: ObjectIdentifier, _: ObjectIdentifier) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SqsSQRzlE2eeoiySbxSg_ABtFZ\">== (_: Wrapped?, _: Wrapped?) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sq2eeoiySbxSg_s26_OptionalNilComparisonTypeVtFZ\">== (_: Wrapped?, _: _OptionalNilComparisonType) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sq2eeoiySbs26_OptionalNilComparisonTypeV_xSgtFZ\">== (_: _OptionalNilComparisonType, _: Wrapped?) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s8_PointerPsE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s5NeverO2eeoiySbAB_ABtFZ\">== (_: Never, _: Never) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s23LazyPrefixWhileSequenceVsSlRzrlE5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: LazyPrefixWhileCollection&lt;Base&gt;.Index, _: LazyPrefixWhileCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sn2eeoiySbSnyxG_ABtFZ\">== (_: Range&lt;Bound&gt;, _: Range&lt;Bound&gt;) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s6ResultOsSQRzSQR_rlE2eeoiySbAByxq_G_ADtFZ\">== (_: Result&lt;Success, Failure&gt;, _: Result&lt;Success, Failure&gt;) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s18ReversedCollectionV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: ReversedCollection&lt;Base&gt;.Index, _: ReversedCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sh2eeoiySbShyxG_ABtFZ\">== (_: Set&lt;Element&gt;, _: Set&lt;Element&gt;) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sh5IndexV2eeoiySbAByx_G_ADtFZ\">== (_: Set&lt;Element&gt;.Index, _: Set&lt;Element&gt;.Index) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SxsE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SysE2eeoiySbx_qd__tSyRd__lFZ\">== &lt;RHS&gt;(_: Self, _: RHS) -&gt; Bool where RHS : StringProtocol<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS2eeoiySbSS_SStFZ\">== (_: String, _: String) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS5IndexV2eeoiySbAB_ABtFZ\">== (_: String.Index, _: String.Index) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s11_UIntBufferV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: _UIntBuffer&lt;Element&gt;.Index, _: _UIntBuffer&lt;Element&gt;.Index) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s7UnicodeO15GeneralCategoryO2eeoiySbAD_ADtFZ\">== (_: Unicode.GeneralCategory, _: Unicode.GeneralCategory) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s7UnicodeO23CanonicalCombiningClassV2eeoiySbAD_ADtFZ\">== (_: Unicode.CanonicalCombiningClass, _: Unicode.CanonicalCombiningClass) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s7UnicodeO11NumericTypeO2eeoiySbAD_ADtFZ\">== (_: Unicode.NumericType, _: Unicode.NumericType) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s7UnicodeO5UTF32O2eeoiySbAD_ADtFZ\">== (_: Unicode.UTF32, _: Unicode.UTF32) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s21UnicodeDecodingResultO2eeoiySbAB_ABtFZ\">== (_: UnicodeDecodingResult, _: UnicodeDecodingResult) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s16_ValidUTF8BufferV5IndexV2eeoiySbAD_ADtFZ\">== (_: _ValidUTF8Buffer.Index, _: _ValidUTF8Buffer.Index) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s8AnyIndexV2eeoiySbAB_ABtFZ\">== (_: AnyIndex, _: AnyIndex) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s6MirrorV12DisplayStyleO2eeoiySbAD_ADtFZ\">== (_: Mirror.DisplayStyle, _: Mirror.DisplayStyle) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s4SIMDPsE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:3NIO10ByteBufferV2eeoiySbAC_ACtFZ\">== (_: ByteBuffer, _: ByteBuffer) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:3NIO12ChannelErrorO2eeoiySbAC_ACtFZ\">== (_: ChannelError, _: ChannelError) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:3NIO21EmbeddedScheduledTask33_BFA43AB9ECCF44969C8FBE08DC7CA7DELLC2eeoiySbAD_ADtFZ\">== (_: EmbeddedScheduledTask, _: EmbeddedScheduledTask) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:3NIO10TimeAmountV2eeoiySbAC_ACtFZ\">== (_: TimeAmount, _: TimeAmount) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:3NIO13ScheduledTask33_D5D78C61B22284700B9BD1ACFBC25157LLC2eeoiySbAD_ADtFZ\">== (_: ScheduledTask, _: ScheduledTask) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:3NIO15EventLoopFutureC2eeoiySbACyxG_AEtFZ\">== (_: EventLoopFuture&lt;T&gt;, _: EventLoopFuture&lt;T&gt;) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:3NIO10FileRegionV2eeoiySbAC_ACtFZ\">== (_: FileRegion, _: FileRegion) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:3NIO8IOResultO2eeoiySbACyxG_AEtFZ\">== (_: IOResult&lt;T&gt;, _: IOResult&lt;T&gt;) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:3NIO6IODataO2eeoiySbAC_ACtFZ\">== (_: IOData, _: IOData) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:3NIO19NIONetworkInterfaceC2eeoiySbAC_ACtFZ\">== (_: NIONetworkInterface, _: NIONetworkInterface) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:3NIO13PriorityQueueV2eeoiySbACyxG_AEtFZ\">== (_: PriorityQueue&lt;Element&gt;, _: PriorityQueue&lt;Element&gt;) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:3NIO13SocketAddressO2eeoiySbAC_ACtFZ\">== (_: SocketAddress, _: SocketAddress) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:3NIO6ThreadC2eeoiySbAC_ACtFZ\">== (_: Thread, _: Thread) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:6Darwin0A7BooleanV2eeoiySbAC_ACtFZ\">== (_: DarwinBoolean, _: DarwinBoolean) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:4Core21CaseInsensitiveStringV2eeoiySbAC_ACtFZ\">== (_: CaseInsensitiveString, _: CaseInsensitiveString) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:4Core9MediaTypeV2eeoiySbAC_ACtFZ\">== (_: MediaType, _: MediaType) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation15AffineTransformV2eeoiySbAC_ACtFZ\">== (_: AffineTransform, _: AffineTransform) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation8CalendarV10IdentifierO2eeoiySbAE_AEtFZ\">== (_: Calendar.Identifier, _: Calendar.Identifier) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation8CalendarV9ComponentO2eeoiySbAE_AEtFZ\">== (_: Calendar.Component, _: Calendar.Component) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation8CalendarV15SearchDirectionO2eeoiySbAE_AEtFZ\">== (_: Calendar.SearchDirection, _: Calendar.SearchDirection) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation8CalendarV18RepeatedTimePolicyO2eeoiySbAE_AEtFZ\">== (_: Calendar.RepeatedTimePolicy, _: Calendar.RepeatedTimePolicy) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation8CalendarV14MatchingPolicyO2eeoiySbAE_AEtFZ\">== (_: Calendar.MatchingPolicy, _: Calendar.MatchingPolicy) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation8CalendarV2eeoiySbAC_ACtFZ\">== (_: Calendar, _: Calendar) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation12CharacterSetV2eeoiySbAC_ACtFZ\">== (_: CharacterSet, _: CharacterSet) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DataV2eeoiySbAC_ACtFZ\">== (_: Data, _: Data) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV2eeoiySbAC_ACtFZ\">== (_: Date, _: Date) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation14DateComponentsV2eeoiySbAC_ACtFZ\">== (_: DateComponents, _: DateComponents) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation12DateIntervalV2eeoiySbAC_ACtFZ\">== (_: DateInterval, _: DateInterval) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:So9NSDecimala10FoundationE2eeoiySbAB_ABtFZ\">== (_: Decimal, _: Decimal) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation9IndexPathV2eeoiySbAC_ACtFZ\">== (_: IndexPath, _: IndexPath) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation8IndexSetV0B0V2eeoiySbAE_AEtFZ\">== (_: IndexSet.Index, _: IndexSet.Index) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation8IndexSetV9RangeViewV2eeoiySbAE_AEtFZ\">== (_: IndexSet.RangeView, _: IndexSet.RangeView) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation8IndexSetV2eeoiySbAC_ACtFZ\">== (_: IndexSet, _: IndexSet) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation6LocaleV2eeoiySbAC_ACtFZ\">== (_: Locale, _: Locale) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation11MeasurementV2eeoiySbACyqd__G_ACyqd_0_GtSo6NSUnitCRbd__AHRbd_0_r0_lFZ\">== &lt;LeftHandSideType, RightHandSideType&gt;(_: Measurement&lt;LeftHandSideType&gt;, _: Measurement&lt;RightHandSideType&gt;) -&gt; Bool where LeftHandSideType : Unit, RightHandSideType : Unit<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation12NotificationV2eeoiySbAC_ACtFZ\">== (_: Notification, _: Notification) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation21_BridgedStoredNSErrorPAAE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:So8_NSRangeV10FoundationE2eeoiySbAB_ABtFZ\">== (_: NSRange, _: NSRange) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS10FoundationE8EncodingV2eeoiySbAC_ACtFZ\">== (_: String.Encoding, _: String.Encoding) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation20PersonNameComponentsV2eeoiySbAC_ACtFZ\">== (_: PersonNameComponents, _: PersonNameComponents) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation8TimeZoneV2eeoiySbAC_ACtFZ\">== (_: TimeZone, _: TimeZone) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation3URLV2eeoiySbAC_ACtFZ\">== (_: URL, _: URL) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation13URLComponentsV2eeoiySbAC_ACtFZ\">== (_: URLComponents, _: URLComponents) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation12URLQueryItemV2eeoiySbAC_ACtFZ\">== (_: URLQueryItem, _: URLQueryItem) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation10URLRequestV2eeoiySbAC_ACtFZ\">== (_: URLRequest, _: URLRequest) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4UUIDV2eeoiySbAC_ACtFZ\">== (_: UUID, _: UUID) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14CoreFoundation9_CFObjectPAAE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:8Dispatch0A3QoSV0B6SClassO2eeoiySbAE_AEtFZ\">== (_: DispatchQoS.QoSClass, _: DispatchQoS.QoSClass) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:8Dispatch0A3QoSV2eeoiySbAC_ACtFZ\">== (_: DispatchQoS, _: DispatchQoS) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:8Dispatch0A13TimeoutResultO2eeoiySbAC_ACtFZ\">== (_: DispatchTimeoutResult, _: DispatchTimeoutResult) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:So17OS_dispatch_queueC8DispatchE19GlobalQueuePriorityO2eeoiySbAE_AEtFZ\">== (_: DispatchQueue.GlobalQueuePriority, _: DispatchQueue.GlobalQueuePriority) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:So17OS_dispatch_queueC8DispatchE20AutoreleaseFrequencyO2eeoiySbAE_AEtFZ\">== (_: DispatchQueue.AutoreleaseFrequency, _: DispatchQueue.AutoreleaseFrequency) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:8Dispatch0A4TimeV2eeoiySbAC_ACtFZ\">== (_: DispatchTime, _: DispatchTime) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:8Dispatch0A8WallTimeV2eeoiySbAC_ACtFZ\">== (_: DispatchWallTime, _: DispatchWallTime) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:8Dispatch0A12TimeIntervalO2eeoiySbAC_ACtFZ\">== (_: DispatchTimeInterval, _: DispatchTimeInterval) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10ObjectiveC8SelectorV2eeoiySbAC_ACtFZ\">== (_: Selector, _: Selector) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:So8NSObjectC10ObjectiveCE2eeoiySbAB_ABtFZ\">== (_: NSObject, _: NSObject) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:So17CGAffineTransformV12CoreGraphicsE2eeoiySbAB_ABtFZ\">== (_: CGAffineTransform, _: CGAffineTransform) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:So7CGPointV12CoreGraphicsE2eeoiySbAB_ABtFZ\">== (_: CGPoint, _: CGPoint) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:So6CGSizeV12CoreGraphicsE2eeoiySbAB_ABtFZ\">== (_: CGSize, _: CGSize) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:So8CGVectorV12CoreGraphicsE2eeoiySbAB_ABtFZ\">== (_: CGVector, _: CGVector) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:So6CGRectV12CoreGraphicsE2eeoiySbAB_ABtFZ\">== (_: CGRect, _: CGRect) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Service11EnvironmentV2eeoiySbAC_ACtFZ\">== (_: Environment, _: Environment) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:4HTTP14HTTPHeaderNameV2eeoiySbAC_ACtFZ\">== (_: HTTPHeaderName, _: HTTPHeaderName) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:8NIOHTTP115HTTPRequestHeadV2eeoiySbAC_ACtFZ\">== (_: HTTPRequestHead, _: HTTPRequestHead) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:8NIOHTTP18HTTPPartO2eeoiySbACyxq_G_AEtFZ\">== (_: HTTPPart&lt;HeadT, BodyT&gt;, _: HTTPPart&lt;HeadT, BodyT&gt;) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:8NIOHTTP116HTTPResponseHeadV2eeoiySbAC_ACtFZ\">== (_: HTTPResponseHead, _: HTTPResponseHead) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:8NIOHTTP111HTTPHeadersV2eeoiySbAC_ACtFZ\">== (_: HTTPHeaders, _: HTTPHeaders) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:8NIOHTTP110HTTPMethodO2eeoiySbAC_ACtFZ\">== (_: HTTPMethod, _: HTTPMethod) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:8NIOHTTP111HTTPVersionV2eeoiySbAC_ACtFZ\">== (_: HTTPVersion, _: HTTPVersion) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:8NIOHTTP118HTTPResponseStatusO2eeoiySbAC_ACtFZ\">== (_: HTTPResponseStatus, _: HTTPResponseStatus) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10NIOOpenSSL2eeoiySbAA12OpenSSLErrorO_ADtF\">== (_: OpenSSLError, _: OpenSSLError) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10NIOOpenSSL18OpenSSLCertificateC2eeoiySbAC_ACtFZ\">== (_: OpenSSLCertificate, _: OpenSSLCertificate) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10NIOOpenSSL20OpenSSLInternalErrorV2eeoiySbAC_ACtFZ\">== (_: OpenSSLInternalError, _: OpenSSLInternalError) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10NIOOpenSSL0A8SSLErrorO2eeoiySbAC_ACtFZ\">== (_: NIOOpenSSLError, _: NIOOpenSSLError) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10NIOOpenSSL17OpenSSLPrivateKeyC2eeoiySbAC_ACtFZ\">== (_: OpenSSLPrivateKey, _: OpenSSLPrivateKey) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11TemplateKit0A4DataV2eeoiySbAC_ACtFZ\">== (_: TemplateData, _: TemplateData) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:12NIOWebSocket03WebB9ErrorCodeO2eeoiySbAC_ACtFZ\">== (_: WebSocketErrorCode, _: WebSocketErrorCode) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:12NIOWebSocket03WebB10MaskingKeyV2eeoiySbAC_ACtFZ\">== (_: WebSocketMaskingKey, _: WebSocketMaskingKey) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:12NIOWebSocket03WebB5FrameV2eeoiySbAC_ACtFZ\">== (_: WebSocketFrame, _: WebSocketFrame) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:12NIOWebSocket03WebB6OpcodeO2eeoiySbAC_ACtFZ\">== (_: WebSocketOpcode, _: WebSocketOpcode) -&gt; Bool<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<L, R where L : Equatable, R : Equatable> (Either<L, R>.Type) -> (Either<L, R>, Either<L, R>) -> Bool",
            "key.typeusr" : "$sySb5Sugar6EitherOyxq_G_ADtcD",
            "key.usr" : "s:SQ2eeoiySbx_xtFZ"
          }
        ],
        "key.typename" : "Either<L, R>.Type",
        "key.typeusr" : "$s5Sugar6EitherOyxq_GmD",
        "key.usr" : "s:5Sugar6EitherO"
      }
    ]
  }
}, {
  "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Environment.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 777,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>struct Environment : <Type usr=\"s:SQ\">Equatable<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 14
          }
        ],
        "key.bodylength" : 443,
        "key.bodyoffset" : 44,
        "key.doc.declaration" : "struct Environment : Equatable",
        "key.doc.discussion" : [
          {
            "CodeListing" : ""
          },
          {
            "Para" : "The `Environment` can also be used to retrieve variables from the Process’s ENV."
          },
          {
            "CodeListing" : ""
          }
        ],
        "key.doc.full_as_xml" : "<Class><Name>Environment<\/Name><USR>s:7Service11EnvironmentV<\/USR><Declaration>struct Environment : Equatable<\/Declaration><CommentParts><Abstract><Para>The environment the application is running in, i.e., production, dev, etc. All <codeVoice>Container<\/codeVoice>’s will have an <codeVoice>Environment<\/codeVoice> that can be used to dynamically register and configure services.<\/Para><\/Abstract><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[switch env {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[case .production: config.prefer(ProductionLogger.self, for: Logger.self)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[default: config.prefer(DebugLogger.self, for: Logger.self)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The <codeVoice>Environment<\/codeVoice> can also be used to retrieve variables from the Process’s ENV.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(Environment.get(\"DB_PASSWORD\"))]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.name" : "Environment",
        "key.doc.type" : "Class",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>Environment<\/decl.name> : <ref.protocol usr=\"s:SQ\">Equatable<\/ref.protocol><\/decl.struct>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 467,
        "key.modulename" : "Service",
        "key.name" : "Environment",
        "key.namelength" : 11,
        "key.nameoffset" : 31,
        "key.offset" : 21,
        "key.parsed_declaration" : "public extension Environment",
        "key.parsed_scope.end" : 18,
        "key.parsed_scope.start" : 3,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>enum EnvironmentError : <Type usr=\"s:s5ErrorP\">Error<\/Type><\/Declaration>",
            "key.bodylength" : 43,
            "key.bodyoffset" : 79,
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 5,
                "key.offset" : 72
              }
            ],
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Environment.swift",
            "key.fully_annotated_decl" : "<decl.enum><syntaxtype.keyword>enum<\/syntaxtype.keyword> <decl.name>EnvironmentError<\/decl.name> : <ref.protocol usr=\"s:s5ErrorP\">Error<\/ref.protocol><\/decl.enum>",
            "key.inheritedtypes" : [
              {
                "key.name" : "Error"
              }
            ],
            "key.kind" : "source.lang.swift.decl.enum",
            "key.length" : 74,
            "key.name" : "EnvironmentError",
            "key.namelength" : 16,
            "key.nameoffset" : 54,
            "key.offset" : 49,
            "key.parsed_declaration" : "enum EnvironmentError: Error",
            "key.parsed_scope.end" : 6,
            "key.parsed_scope.start" : 4,
            "key.substructure" : [
              {
                "key.kind" : "source.lang.swift.decl.enumcase",
                "key.length" : 29,
                "key.namelength" : 0,
                "key.nameoffset" : 0,
                "key.offset" : 88,
                "key.substructure" : [
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.public",
                    "key.annotated_decl" : "<Declaration>case keyNotFound(key: <Type usr=\"s:SS\">String<\/Type>)<\/Declaration>",
                    "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Environment.swift",
                    "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>keyNotFound<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>key<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.enumelement>",
                    "key.kind" : "source.lang.swift.decl.enumelement",
                    "key.length" : 24,
                    "key.name" : "keyNotFound(key:)",
                    "key.namelength" : 24,
                    "key.nameoffset" : 93,
                    "key.offset" : 93,
                    "key.parsed_declaration" : "case keyNotFound(key: String)",
                    "key.parsed_scope.end" : 5,
                    "key.parsed_scope.start" : 5,
                    "key.typename" : "(Environment.EnvironmentError.Type) -> (String) -> Environment.EnvironmentError",
                    "key.typeusr" : "$sy7Service11EnvironmentV5SugarE0B5ErrorOSS_tcAFmcD",
                    "key.usr" : "s:7Service11EnvironmentV5SugarE0B5ErrorO11keyNotFoundyAFSS_tcAFmF"
                  }
                ]
              }
            ],
            "key.typename" : "Environment.EnvironmentError.Type",
            "key.typeusr" : "$s7Service11EnvironmentV5SugarE0B5ErrorOmD",
            "key.usr" : "s:7Service11EnvironmentV5SugarE0B5ErrorO"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>static func get(_ key: <Type usr=\"s:SS\">String<\/Type>, _ fallback: <Type usr=\"s:SS\">String<\/Type>) -&gt; <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
            "key.bodylength" : 73,
            "key.bodyoffset" : 191,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Environment.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>get<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>fallback<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.function.returntype><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 136,
            "key.name" : "get(_:_:)",
            "key.namelength" : 38,
            "key.nameoffset" : 141,
            "key.offset" : 129,
            "key.parsed_declaration" : "static func get(_ key: String, _ fallback: String) -> String",
            "key.parsed_scope.end" : 10,
            "key.parsed_scope.start" : 8,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Service11EnvironmentV3getySSSgSSFZ\">get(_:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(Environment.Type) -> (String, String) -> String",
            "key.typeusr" : "$syS2S_SStcD",
            "key.usr" : "s:7Service11EnvironmentV5SugarE3getyS2S_SStFZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>static func assertGet(_ key: <Type usr=\"s:SS\">String<\/Type>) throws -&gt; <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
            "key.bodylength" : 159,
            "key.bodyoffset" : 326,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Environment.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>assertGet<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.function.returntype><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 215,
            "key.name" : "assertGet(_:)",
            "key.namelength" : 24,
            "key.nameoffset" : 283,
            "key.offset" : 271,
            "key.parsed_declaration" : "static func assertGet(_ key: String) throws -> String",
            "key.parsed_scope.end" : 17,
            "key.parsed_scope.start" : 12,
            "key.substructure" : [

            ],
            "key.typename" : "(Environment.Type) -> (String) throws -> String",
            "key.typeusr" : "$syS2SKcD",
            "key.usr" : "s:7Service11EnvironmentV5SugarE9assertGetyS2SKFZ"
          }
        ],
        "key.typename" : "Environment.Type",
        "key.typeusr" : "$s7Service11EnvironmentVmD",
        "key.usr" : "s:7Service11EnvironmentV"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public func env(_ key: <Type usr=\"s:SS\">String<\/Type>, _ fallback: <Type usr=\"s:SS\">String<\/Type>) -&gt; <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 490
          }
        ],
        "key.bodylength" : 43,
        "key.bodyoffset" : 552,
        "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Environment.swift",
        "key.fully_annotated_decl" : "<decl.function.free><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>env<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>fallback<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.function.returntype><\/decl.function.free>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 99,
        "key.name" : "env(_:_:)",
        "key.namelength" : 38,
        "key.nameoffset" : 502,
        "key.offset" : 497,
        "key.parsed_declaration" : "public func env(_ key: String, _ fallback: String) -> String",
        "key.parsed_scope.end" : 22,
        "key.parsed_scope.start" : 20,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:5Sugar3envySSSgSSF\">env(_:)<\/RelatedName>"
          }
        ],
        "key.substructure" : [

        ],
        "key.typename" : "(String, String) -> String",
        "key.typeusr" : "$syS2S_SStcD",
        "key.usr" : "s:5Sugar3envyS2S_SStF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public func env(_ key: <Type usr=\"s:SS\">String<\/Type>) -&gt; <Type usr=\"s:SS\">String<\/Type>?<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 598
          }
        ],
        "key.bodylength" : 33,
        "key.bodyoffset" : 641,
        "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Environment.swift",
        "key.fully_annotated_decl" : "<decl.function.free><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>env<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:SS\">String<\/ref.struct>?<\/decl.function.returntype><\/decl.function.free>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 70,
        "key.name" : "env(_:)",
        "key.namelength" : 18,
        "key.nameoffset" : 610,
        "key.offset" : 605,
        "key.parsed_declaration" : "public func env(_ key: String) -> String?",
        "key.parsed_scope.end" : 26,
        "key.parsed_scope.start" : 24,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:5Sugar3envyS2S_SStF\">env(_:_:)<\/RelatedName>"
          }
        ],
        "key.substructure" : [

        ],
        "key.typename" : "(String) -> String?",
        "key.typeusr" : "$sySSSgSScD",
        "key.usr" : "s:5Sugar3envySSSgSSF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public func assertEnv(_ key: <Type usr=\"s:SS\">String<\/Type>) throws -&gt; <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 677
          }
        ],
        "key.bodylength" : 43,
        "key.bodyoffset" : 732,
        "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Environment.swift",
        "key.fully_annotated_decl" : "<decl.function.free><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>assertEnv<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.function.returntype><\/decl.function.free>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 92,
        "key.name" : "assertEnv(_:)",
        "key.namelength" : 24,
        "key.nameoffset" : 689,
        "key.offset" : 684,
        "key.parsed_declaration" : "public func assertEnv(_ key: String) throws -> String",
        "key.parsed_scope.end" : 30,
        "key.parsed_scope.start" : 28,
        "key.substructure" : [

        ],
        "key.typename" : "(String) throws -> String",
        "key.typeusr" : "$syS2SKcD",
        "key.usr" : "s:5Sugar9assertEnvyS2SKF"
      }
    ]
  }
}, {
  "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Future.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 1899,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>typealias Future = <Type usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 14
          }
        ],
        "key.bodylength" : 383,
        "key.bodyoffset" : 39,
        "key.doc.declaration" : "typealias Future = NIO.EventLoopFuture",
        "key.doc.full_as_xml" : "<Other><Name>Future<\/Name><USR>s:5Async6Futurea<\/USR><Declaration>typealias Future = NIO.EventLoopFuture<\/Declaration><CommentParts><Abstract><Para>Convenience shorthand for <codeVoice>EventLoopFuture<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
        "key.doc.name" : "Future",
        "key.doc.type" : "Other",
        "key.fully_annotated_decl" : "<decl.typealias><syntaxtype.keyword>typealias<\/syntaxtype.keyword> <decl.name>Future<\/decl.name> = <ref.class usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/ref.class><\/decl.typealias>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 402,
        "key.modulename" : "Async",
        "key.name" : "Future",
        "key.namelength" : 6,
        "key.nameoffset" : 31,
        "key.offset" : 21,
        "key.parsed_declaration" : "public extension Future",
        "key.parsed_scope.end" : 16,
        "key.parsed_scope.start" : 3,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>func `try`(_ callback: @escaping (<Type usr=\"s:3NIO15EventLoopFutureC5AsyncE11Expectationa\">Expectation<\/Type>) throws -&gt; <Type usr=\"s:s4Voida\">Void<\/Type>) -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:3NIO15EventLoopFutureC5SugarE1Txmfp\">T<\/Type>&gt;<\/Declaration>",
            "key.bodylength" : 87,
            "key.bodyoffset" : 121,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Future.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>`try`<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>callback<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.typealias usr=\"s:3NIO15EventLoopFutureC5AsyncE11Expectationa\">Expectation<\/ref.typealias><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias><\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.generic_type_param usr=\"s:3NIO15EventLoopFutureC5SugarE1Txmfp\">T<\/ref.generic_type_param>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 165,
            "key.name" : "try(_:)",
            "key.namelength" : 57,
            "key.nameoffset" : 49,
            "key.offset" : 44,
            "key.parsed_declaration" : "func `try`(_ callback: @escaping (Expectation) throws -> Void) -> Future<T>",
            "key.parsed_scope.end" : 9,
            "key.parsed_scope.start" : 4,
            "key.substructure" : [

            ],
            "key.typename" : "<T> (EventLoopFuture<T>) -> (@escaping (T) throws -> ()) -> EventLoopFuture<T>",
            "key.typeusr" : "$sy3NIO15EventLoopFutureCyxGyxKccD",
            "key.usr" : "s:3NIO15EventLoopFutureC5SugarE3tryyACyxGyxKcF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>func flatTry(_ callback: @escaping (<Type usr=\"s:3NIO15EventLoopFutureC5AsyncE11Expectationa\">Expectation<\/Type>) throws -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:s4Voida\">Void<\/Type>&gt;) -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:3NIO15EventLoopFutureC5SugarE1Txmfp\">T<\/Type>&gt;<\/Declaration>",
            "key.bodylength" : 118,
            "key.bodyoffset" : 302,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Future.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>flatTry<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>callback<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.typealias usr=\"s:3NIO15EventLoopFutureC5AsyncE11Expectationa\">Expectation<\/ref.typealias><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias>&gt;<\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.generic_type_param usr=\"s:3NIO15EventLoopFutureC5SugarE1Txmfp\">T<\/ref.generic_type_param>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 206,
            "key.name" : "flatTry(_:)",
            "key.namelength" : 67,
            "key.nameoffset" : 220,
            "key.offset" : 215,
            "key.parsed_declaration" : "func flatTry(_ callback: @escaping (Expectation) throws -> Future<Void>) -> Future<T>",
            "key.parsed_scope.end" : 15,
            "key.parsed_scope.start" : 11,
            "key.substructure" : [

            ],
            "key.typename" : "<T> (EventLoopFuture<T>) -> (@escaping (T) throws -> EventLoopFuture<()>) -> EventLoopFuture<T>",
            "key.typeusr" : "$sy3NIO15EventLoopFutureCyxGACyytGxKccD",
            "key.usr" : "s:3NIO15EventLoopFutureC5SugarE7flatTryyACyxGACyytGxKcF"
          }
        ],
        "key.typename" : "EventLoopFuture.Type",
        "key.typeusr" : "$s3NIO15EventLoopFutureCmD",
        "key.usr" : "s:5Async6Futurea"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>typealias Future = <Type usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 425
          }
        ],
        "key.bodylength" : 237,
        "key.bodyoffset" : 482,
        "key.doc.declaration" : "typealias Future = NIO.EventLoopFuture",
        "key.doc.full_as_xml" : "<Other><Name>Future<\/Name><USR>s:5Async6Futurea<\/USR><Declaration>typealias Future = NIO.EventLoopFuture<\/Declaration><CommentParts><Abstract><Para>Convenience shorthand for <codeVoice>EventLoopFuture<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
        "key.doc.name" : "Future",
        "key.doc.type" : "Other",
        "key.fully_annotated_decl" : "<decl.typealias><syntaxtype.keyword>typealias<\/syntaxtype.keyword> <decl.name>Future<\/decl.name> = <ref.class usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/ref.class><\/decl.typealias>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 288,
        "key.modulename" : "Async",
        "key.name" : "Future",
        "key.namelength" : 6,
        "key.nameoffset" : 442,
        "key.offset" : 432,
        "key.parsed_declaration" : "public extension Future where Expectation: OptionalType",
        "key.parsed_scope.end" : 26,
        "key.parsed_scope.start" : 18,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>func `nil`(or error: @autoclosure @escaping () -&gt; <Type usr=\"s:s5ErrorP\">Error<\/Type>) -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:s4Voida\">Void<\/Type>&gt;<\/Declaration>",
            "key.bodylength" : 156,
            "key.bodyoffset" : 561,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Future.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>`nil`<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>or<\/decl.var.parameter.argument_label> <decl.var.parameter.name>error<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@autoclosure<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> () -&gt; <decl.function.returntype><ref.protocol usr=\"s:s5ErrorP\">Error<\/ref.protocol><\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 231,
            "key.name" : "nil(or:)",
            "key.namelength" : 51,
            "key.nameoffset" : 492,
            "key.offset" : 487,
            "key.parsed_declaration" : "func `nil`(or error: @autoclosure @escaping () -> Error) -> Future<Void>",
            "key.parsed_scope.end" : 25,
            "key.parsed_scope.start" : 19,
            "key.substructure" : [

            ],
            "key.typename" : "<T where T : OptionalType> (EventLoopFuture<T>) -> (@autoclosure @escaping () -> Error) -> EventLoopFuture<()>",
            "key.typeusr" : "$s2or3NIO15EventLoopFutureCyytGs5Error_pyXA_tcD",
            "key.usr" : "s:3NIO15EventLoopFutureC5Sugar4Core12OptionalTypeRzlE3nil2orACyytGs5Error_pyXA_tF"
          }
        ],
        "key.typename" : "EventLoopFuture.Type",
        "key.typeusr" : "$s3NIO15EventLoopFutureCmD",
        "key.usr" : "s:5Async6Futurea"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>typealias Future = <Type usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 722
          }
        ],
        "key.bodylength" : 275,
        "key.bodyoffset" : 776,
        "key.doc.declaration" : "typealias Future = NIO.EventLoopFuture",
        "key.doc.full_as_xml" : "<Other><Name>Future<\/Name><USR>s:5Async6Futurea<\/USR><Declaration>typealias Future = NIO.EventLoopFuture<\/Declaration><CommentParts><Abstract><Para>Convenience shorthand for <codeVoice>EventLoopFuture<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
        "key.doc.name" : "Future",
        "key.doc.type" : "Other",
        "key.fully_annotated_decl" : "<decl.typealias><syntaxtype.keyword>typealias<\/syntaxtype.keyword> <decl.name>Future<\/decl.name> = <ref.class usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/ref.class><\/decl.typealias>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 323,
        "key.modulename" : "Async",
        "key.name" : "Future",
        "key.namelength" : 6,
        "key.nameoffset" : 739,
        "key.offset" : 729,
        "key.parsed_declaration" : "public extension Future where Expectation: Equatable",
        "key.parsed_scope.end" : 39,
        "key.parsed_scope.start" : 28,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>func equal(_ expected: <Type usr=\"s:3NIO15EventLoopFutureC5AsyncE11Expectationa\">Expectation<\/Type>, or error: @autoclosure @escaping () -&gt; <Type usr=\"s:s5ErrorP\">Error<\/Type>) -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:s4Voida\">Void<\/Type>&gt;<\/Declaration>",
            "key.bodylength" : 147,
            "key.bodyoffset" : 902,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Future.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>equal<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>expected<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:3NIO15EventLoopFutureC5AsyncE11Expectationa\">Expectation<\/ref.typealias><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>or<\/decl.var.parameter.argument_label> <decl.var.parameter.name>error<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@autoclosure<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> () -&gt; <decl.function.returntype><ref.protocol usr=\"s:s5ErrorP\">Error<\/ref.protocol><\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 269,
            "key.name" : "equal(_:or:)",
            "key.namelength" : 98,
            "key.nameoffset" : 786,
            "key.offset" : 781,
            "key.parsed_declaration" : "func equal(\n    _ expected: Expectation,\n    or error: @autoclosure @escaping () -> Error\n) -> Future<Void>",
            "key.parsed_scope.end" : 38,
            "key.parsed_scope.start" : 29,
            "key.substructure" : [

            ],
            "key.typename" : "<T where T : Equatable> (EventLoopFuture<T>) -> (T, @autoclosure @escaping () -> Error) -> EventLoopFuture<()>",
            "key.typeusr" : "$s_2or3NIO15EventLoopFutureCyytGx_s5Error_pyXAtcD",
            "key.usr" : "s:3NIO15EventLoopFutureC5SugarSQRzlE5equal_2orACyytGx_s5Error_pyXAtF"
          }
        ],
        "key.typename" : "EventLoopFuture.Type",
        "key.typeusr" : "$s3NIO15EventLoopFutureCmD",
        "key.usr" : "s:5Async6Futurea"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public func syncFlatten&lt;T&gt;(futures: [<Type usr=\"s:5Async10LazyFuturea\">LazyFuture<\/Type>&lt;<Type usr=\"s:5Sugar11syncFlatten7futures2on3NIO15EventLoopFutureCySayxGGSayAGyxGyKcG_AE0gH5Group_ptlF1TL_xmfp\">T<\/Type>&gt;], on worker: <Type usr=\"s:5Async6Workera\">Worker<\/Type>) -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;[<Type usr=\"s:5Sugar11syncFlatten7futures2on3NIO15EventLoopFutureCySayxGGSayAGyxGyKcG_AE0gH5Group_ptlF1TL_xmfp\">T<\/Type>]&gt;<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 1054
          }
        ],
        "key.bodylength" : 755,
        "key.bodyoffset" : 1142,
        "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Future.swift",
        "key.fully_annotated_decl" : "<decl.function.free><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>syncFlatten<\/decl.name>&lt;<decl.generic_type_param usr=\"s:5Sugar11syncFlatten7futures2on3NIO15EventLoopFutureCySayxGGSayAGyxGyKcG_AE0gH5Group_ptlF1TL_xmfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>futures<\/decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.typealias usr=\"s:5Async10LazyFuturea\">LazyFuture<\/ref.typealias>&lt;<ref.generic_type_param usr=\"s:5Sugar11syncFlatten7futures2on3NIO15EventLoopFutureCySayxGGSayAGyxGyKcG_AE0gH5Group_ptlF1TL_xmfp\">T<\/ref.generic_type_param>&gt;]<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>on<\/decl.var.parameter.argument_label> <decl.var.parameter.name>worker<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:5Async6Workera\">Worker<\/ref.typealias><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;[<ref.generic_type_param usr=\"s:5Sugar11syncFlatten7futures2on3NIO15EventLoopFutureCySayxGGSayAGyxGyKcG_AE0gH5Group_ptlF1TL_xmfp\">T<\/ref.generic_type_param>]&gt;<\/decl.function.returntype><\/decl.function.free>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 837,
        "key.name" : "syncFlatten(futures:on:)",
        "key.namelength" : 59,
        "key.nameoffset" : 1066,
        "key.offset" : 1061,
        "key.parsed_declaration" : "public func syncFlatten<T>(futures: [LazyFuture<T>], on worker: Worker) -> Future<[T]>",
        "key.parsed_scope.end" : 71,
        "key.parsed_scope.start" : 41,
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>T<\/Declaration>",
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Future.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>",
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 1,
            "key.name" : "T",
            "key.namelength" : 1,
            "key.nameoffset" : 1078,
            "key.offset" : 1078,
            "key.parsed_declaration" : "public func syncFlatten<T>(futures: [LazyFuture<T>], on worker: Worker) -> Future<[T]>",
            "key.parsed_scope.end" : 41,
            "key.parsed_scope.start" : 41,
            "key.typename" : "T.Type",
            "key.typeusr" : "$sxmD",
            "key.usr" : "s:5Sugar11syncFlatten7futures2on3NIO15EventLoopFutureCySayxGGSayAGyxGyKcG_AE0gH5Group_ptlF1TL_xmfp"
          },
          {
            "key.annotated_decl" : "<Declaration>let promise: <Type usr=\"s:3NIO16EventLoopPromiseV\">EventLoopPromise<\/Type>&lt;[T]&gt;<\/Declaration>",
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Future.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>promise<\/decl.name>: <decl.var.type><ref.struct usr=\"s:3NIO16EventLoopPromiseV\">EventLoopPromise<\/ref.struct>&lt;[T]&gt;<\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 51,
            "key.name" : "promise",
            "key.namelength" : 7,
            "key.nameoffset" : 1151,
            "key.offset" : 1147,
            "key.parsed_declaration" : "let promise = worker.eventLoop.newPromise([T].self)",
            "key.parsed_scope.end" : 42,
            "key.parsed_scope.start" : 42,
            "key.typename" : "EventLoopPromise<[T]>",
            "key.typeusr" : "$s3NIO16EventLoopPromiseVySayxGGD",
            "key.usr" : "s:5Sugar11syncFlatten7futures2on3NIO15EventLoopFutureCySayxGGSayAGyxGyKcG_AE0gH5Group_ptlF7promiseL_AE0gH7PromiseVyAHGvp"
          },
          {
            "key.annotated_decl" : "<Declaration>var results: [T]<\/Declaration>",
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Future.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>results<\/decl.name>: <decl.var.type>[T]<\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 21,
            "key.name" : "results",
            "key.namelength" : 7,
            "key.nameoffset" : 1208,
            "key.offset" : 1204,
            "key.parsed_declaration" : "var results: [T] = []",
            "key.parsed_scope.end" : 44,
            "key.parsed_scope.start" : 44,
            "key.typename" : "[T]",
            "key.typeusr" : "$sSayxGD",
            "key.usr" : "s:5Sugar11syncFlatten7futures2on3NIO15EventLoopFutureCySayxGGSayAGyxGyKcG_AE0gH5Group_ptlF7resultsL_AHvp"
          },
          {
            "key.annotated_decl" : "<Declaration>var iterator: <Type usr=\"s:s16IndexingIteratorV\">IndexingIterator<\/Type>&lt;[() throws -&gt; <Type usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/Type>&lt;T&gt;]&gt;<\/Declaration>",
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Future.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>iterator<\/decl.name>: <decl.var.type><ref.struct usr=\"s:s16IndexingIteratorV\">IndexingIterator<\/ref.struct>&lt;[() <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.class usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/ref.class>&lt;T&gt;<\/decl.function.returntype>]&gt;<\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 37,
            "key.name" : "iterator",
            "key.namelength" : 8,
            "key.nameoffset" : 1235,
            "key.offset" : 1231,
            "key.parsed_declaration" : "var iterator = futures.makeIterator()",
            "key.parsed_scope.end" : 46,
            "key.parsed_scope.start" : 46,
            "key.typename" : "IndexingIterator<[() throws -> EventLoopFuture<T>]>",
            "key.typeusr" : "$ss16IndexingIteratorVySay3NIO15EventLoopFutureCyxGyKcGGD",
            "key.usr" : "s:5Sugar11syncFlatten7futures2on3NIO15EventLoopFutureCySayxGGSayAGyxGyKcG_AE0gH5Group_ptlF8iteratorL_s16IndexingIteratorVyAKGvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>func handle(_ future: <Type usr=\"s:5Async10LazyFuturea\">LazyFuture<\/Type>&lt;<Type usr=\"s:5Sugar11syncFlatten7futures2on3NIO15EventLoopFutureCySayxGGSayAGyxGyKcG_AE0gH5Group_ptlF1TL_xmfp\">T<\/Type>&gt;)<\/Declaration>",
            "key.bodylength" : 431,
            "key.bodyoffset" : 1311,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Future.swift",
            "key.fully_annotated_decl" : "<decl.function.free><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>handle<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>future<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:5Async10LazyFuturea\">LazyFuture<\/ref.typealias>&lt;<ref.generic_type_param usr=\"s:5Sugar11syncFlatten7futures2on3NIO15EventLoopFutureCySayxGGSayAGyxGyKcG_AE0gH5Group_ptlF1TL_xmfp\">T<\/ref.generic_type_param>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.free>",
            "key.kind" : "source.lang.swift.decl.function.free",
            "key.length" : 470,
            "key.name" : "handle(_:)",
            "key.namelength" : 31,
            "key.nameoffset" : 1278,
            "key.offset" : 1273,
            "key.parsed_declaration" : "func handle(_ future: LazyFuture<T>)",
            "key.parsed_scope.end" : 62,
            "key.parsed_scope.start" : 47,
            "key.substructure" : [

            ],
            "key.typename" : "<T> (() throws -> EventLoopFuture<T>) -> ()",
            "key.typeusr" : "$syy3NIO15EventLoopFutureCyxGyKXEcluD",
            "key.usr" : "s:5Sugar11syncFlatten7futures2on3NIO15EventLoopFutureCySayxGGSayAGyxGyKcG_AE0gH5Group_ptlF6handleL_yyAJyKXElF"
          }
        ],
        "key.typename" : "<T> (futures: [() throws -> EventLoopFuture<T>], on: EventLoopGroup) -> EventLoopFuture<[T]>",
        "key.typeusr" : "$s7futures2on3NIO15EventLoopFutureCySayxGGSayAEyxGyKcG_AC0dE5Group_ptcluD",
        "key.usr" : "s:5Sugar11syncFlatten7futures2on3NIO15EventLoopFutureCySayxGGSayAGyxGyKcG_AE0gH5Group_ptlF"
      }
    ]
  }
}, {
  "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Leaf\/LeafTagConfig.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 311,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>struct LeafTagConfig : <Type usr=\"s:7ServiceAAP\">Service<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 13
          }
        ],
        "key.bodylength" : 264,
        "key.bodyoffset" : 45,
        "key.doc.declaration" : "struct LeafTagConfig : Service",
        "key.doc.discussion" : [
          {
            "CodeListing" : ""
          },
          {
            "Para" : "See `TagRenderer` protocol for more information about creating custom tags."
          }
        ],
        "key.doc.full_as_xml" : "<Class><Name>LeafTagConfig<\/Name><USR>s:4Leaf0A9TagConfigV<\/USR><Declaration>struct LeafTagConfig : Service<\/Declaration><CommentParts><Abstract><Para>Used to configure available Leaf tags.<\/Para><\/Abstract><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var leaf = LeafTagConfig.default()]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[leaf.use(DateTag(), as: \"date\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[services.register(leaf)]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>See <codeVoice>TagRenderer<\/codeVoice> protocol for more information about creating custom tags.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.name" : "LeafTagConfig",
        "key.doc.type" : "Class",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>LeafTagConfig<\/decl.name> : <ref.protocol usr=\"s:7ServiceAAP\">Service<\/ref.protocol><\/decl.struct>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 290,
        "key.modulename" : "Leaf",
        "key.name" : "LeafTagConfig",
        "key.namelength" : 13,
        "key.nameoffset" : 30,
        "key.offset" : 20,
        "key.parsed_declaration" : "public extension LeafTagConfig",
        "key.parsed_scope.end" : 12,
        "key.parsed_scope.start" : 3,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>mutating func use(_ list: [<Type usr=\"s:SS\">String<\/Type> : <Type usr=\"s:11TemplateKit11TagRendererP\">TagRenderer<\/Type>])<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.mutating",
                "key.length" : 8,
                "key.offset" : 168
              }
            ],
            "key.bodylength" : 89,
            "key.bodyoffset" : 218,
            "key.doc.column" : 19,
            "key.doc.comment" : "Register multiple tags using the keys as their names.\n\n- Parameter list: Map of names to tags.",
            "key.doc.declaration" : "mutating func use(_ list: [String : TagRenderer])",
            "key.doc.file" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Leaf\/LeafTagConfig.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Leaf\/LeafTagConfig.swift\" line=\"7\" column=\"19\"><Name>use(_:)<\/Name><USR>s:4Leaf0A9TagConfigV5SugarE3useyySDySS11TemplateKit0B8Renderer_pGF<\/USR><Declaration>mutating func use(_ list: [String : TagRenderer])<\/Declaration><CommentParts><Abstract><Para>Register multiple tags using the keys as their names.<\/Para><\/Abstract><Parameters><Parameter><Name>list<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Map of names to tags.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 7,
            "key.doc.name" : "use(_:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Map of names to tags."
                  }
                ],
                "name" : "list"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 114,
            "key.docoffset" : 50,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Leaf\/LeafTagConfig.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>mutating<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>use<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>list<\/decl.var.parameter.name>: <decl.var.parameter.type>[<ref.struct usr=\"s:SS\">String<\/ref.struct> : <ref.protocol usr=\"s:11TemplateKit11TagRendererP\">TagRenderer<\/ref.protocol>]<\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 131,
            "key.name" : "use(_:)",
            "key.namelength" : 34,
            "key.nameoffset" : 182,
            "key.offset" : 177,
            "key.parsed_declaration" : "mutating func use(_ list: [String: TagRenderer])",
            "key.parsed_scope.end" : 11,
            "key.parsed_scope.start" : 7,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:4Leaf0A9TagConfigV3use_2asy11TemplateKit0B8Renderer_p_SStF\">use(_:as:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(inout LeafTagConfig) -> ([String : TagRenderer]) -> ()",
            "key.typeusr" : "$syySDySS11TemplateKit11TagRenderer_pGcD",
            "key.usr" : "s:4Leaf0A9TagConfigV5SugarE3useyySDySS11TemplateKit0B8Renderer_pGF"
          }
        ],
        "key.typename" : "LeafTagConfig.Type",
        "key.typeusr" : "$s4Leaf0A9TagConfigVmD",
        "key.usr" : "s:4Leaf0A9TagConfigV"
      }
    ]
  }
}, {
  "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Model.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 2638,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>protocol Model : <Type usr=\"s:4Core11ReflectableP\">Reflectable<\/Type>, <Type usr=\"s:6Fluent8AnyModelP\">AnyModel<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 28
          }
        ],
        "key.bodylength" : 1193,
        "key.bodyoffset" : 52,
        "key.doc.declaration" : "protocol Model : Reflectable, AnyModel",
        "key.doc.discussion" : [
          {
            "Para" : "Models can also conform to `Migration` to provide prepare and revert methods for performing actions on the database before the application boots."
          },
          {
            "Para" : "Both `struct`s and `class`es can be models. Since Fluent is closure-based, copied `struct`s will be returned by any methods that must mutate the model."
          },
          {
            "Para" : "Here is an example of a simple `User` model."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Most of the time, you should use the Fluent driver’s sub-protocols for conforming to `Model` instead of using the protocol directly."
          },
          {
            "Para" : "To create a `QueryBuilder` for a model, use the `query(on:)` method."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "You can also create `QueryBuilder`s for any `Decodable` type. However, `QueryBuilder`s created for `Model`s have some extra methods and functionality."
          },
          {
            "Para" : "Models can implement optional lifecycle methods to hook into Fluent actions."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Models are capable of storing timestamps representing when this model was first created and when it was last updated. If you decide to store timestamps on your model, Fluent will automatically update them whenever changes to the database are made."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Add timestamp keys pointing to the properties on your model to let Fluent automatically update the values. You can set key paths for one or both of the keys per model."
          },
          {
            "Para" : "Instead of actually deleting rows from the database, soft deleted models can have a “deleted at” property set."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "You can add `SoftDeletable` to existing models that have an optional `Date` property for storing the deleted at date."
          },
          {
            "Note" : ""
          },
          {
            "Para" : "Use `softDelete(on:)` to soft-delete a `SoftDeletable` model from the database. Use `restore(on:)` to restore a soft-deleted model."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Use `excludeSoftDeleted()` on `QueryBuilder` to exclude soft-deleted results (included by default)."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "`SoftDeletable` models have extra lifecycle events:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "See `Model` to learn more about Fluent lifecycle hooks."
          }
        ],
        "key.doc.full_as_xml" : "<Class><Name>Model<\/Name><USR>s:6Fluent5ModelP<\/USR><Declaration>protocol Model : Reflectable, AnyModel<\/Declaration><CommentParts><Abstract><Para>Represents a single table \/ collection in a Fluent database. Models are the basis for querying databases (create, read, update, and delete).<\/Para><\/Abstract><Discussion><Para>Models can also conform to <codeVoice>Migration<\/codeVoice> to provide prepare and revert methods for performing actions on the database before the application boots.<\/Para><Para>Both <codeVoice>struct<\/codeVoice>s and <codeVoice>class<\/codeVoice>es can be models. Since Fluent is closure-based, copied <codeVoice>struct<\/codeVoice>s will be returned by any methods that must mutate the model.<\/Para><Para>Here is an example of a simple <codeVoice>User<\/codeVoice> model.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[final class User: Model {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    typealias Database = PostgreSQLDatabase]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    static let idKey: WritableKeyPath<User, UUID?> = \\.id]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    var id: UUID?]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    var name: String]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    init(id: UUID? = nil, name: String) {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        self.id = id]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        self.name = name]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    }]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Most of the time, you should use the Fluent driver’s sub-protocols for conforming to <codeVoice>Model<\/codeVoice> instead of using the protocol directly.<\/Para><rawHTML><![CDATA[<h2>]]><\/rawHTML>Query<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><Para>To create a <codeVoice>QueryBuilder<\/codeVoice> for a model, use the <codeVoice>query(on:)<\/codeVoice> method.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let users = try User.query(on: req).filter(\\.name == \"Vapor\").all()]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>You can also create <codeVoice>QueryBuilder<\/codeVoice>s for any <codeVoice>Decodable<\/codeVoice> type. However, <codeVoice>QueryBuilder<\/codeVoice>s created for <codeVoice>Model<\/codeVoice>s have some extra methods and functionality.<\/Para><rawHTML><![CDATA[<h2>]]><\/rawHTML>Lifecycle<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><Para>Models can implement optional lifecycle methods to hook into Fluent actions.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[final class User: Model {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    ...]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    func willDelete(on conn: PostgreSQLConnection) throws -> Future<User> {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        print(\"Deleting user: \\(id)\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        return conn.future(self)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    }]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h2>]]><\/rawHTML>Timestamps<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><Para>Models are capable of storing timestamps representing when this model was first created and when it was last updated. If you decide to store timestamps on your model, Fluent will automatically update them whenever changes to the database are made.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[final class User: Model {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    static let createdAtKey: TimestampKey? = \\User.createdAt]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    static let updatedAtKey: TimestampKey? = \\User.updatedAt]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    ...]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    var createdAt: Date?]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    var updatedAt: Date?]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Add timestamp keys pointing to the properties on your model to let Fluent automatically update the values. You can set key paths for one or both of the keys per model.<\/Para><rawHTML><![CDATA[<h2>]]><\/rawHTML>Soft Delete<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><Para>Instead of actually deleting rows from the database, soft deleted models can have a “deleted at” property set.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[final class User: Model {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    ...]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    var deletedAt: Date?]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[extension User: SoftDeletable {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    static let deletedAtKey: TimestampKey? = \\.deletedAt]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>You can add <codeVoice>SoftDeletable<\/codeVoice> to existing models that have an optional <codeVoice>Date<\/codeVoice> property for storing the deleted at date.<\/Para><Note><Para>The deleted at date may be set in the future. The model will continue to be included in queries until the deleted at date passes.<\/Para><\/Note><Para>Use <codeVoice>softDelete(on:)<\/codeVoice> to soft-delete a <codeVoice>SoftDeletable<\/codeVoice> model from the database. Use <codeVoice>restore(on:)<\/codeVoice> to restore a soft-deleted model.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let user: User]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[try user.softDelete(on: conn)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ later ...]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[try user.restore(on: conn)]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Use <codeVoice>excludeSoftDeleted()<\/codeVoice> on <codeVoice>QueryBuilder<\/codeVoice> to exclude soft-deleted results (included by default).<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[User.query(on: conn).excludeSoftDeleted().count()]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para><codeVoice>SoftDeletable<\/codeVoice> models have extra lifecycle events:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[- `willRestore`.]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[- `didRestore`.]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[- `willSoftDelete`.]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[- `didSoftDelete`.]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>See <codeVoice>Model<\/codeVoice> to learn more about Fluent lifecycle hooks.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.name" : "Model",
        "key.doc.type" : "Class",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>Model<\/decl.name> : <ref.protocol usr=\"s:4Core11ReflectableP\">Reflectable<\/ref.protocol>, <ref.protocol usr=\"s:6Fluent8AnyModelP\">AnyModel<\/ref.protocol><\/decl.protocol>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 1211,
        "key.modulename" : "Fluent",
        "key.name" : "Model",
        "key.namelength" : 5,
        "key.nameoffset" : 45,
        "key.offset" : 35,
        "key.parsed_declaration" : "public extension Model",
        "key.parsed_scope.end" : 45,
        "key.parsed_scope.start" : 4,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>static func requireFind(_ id: <Type usr=\"s:6Fluent5ModelP2IDQa\">ID<\/Type>, on worker: <Type usr=\"s:11DatabaseKit0A11ConnectableP\">DatabaseConnectable<\/Type>) -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:6Fluent5ModelP5SugarE4Selfxmfp\">Self<\/Type>&gt;<\/Declaration>",
            "key.bodylength" : 149,
            "key.bodyoffset" : 162,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Model.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>requireFind<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>id<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.associatedtype usr=\"s:6Fluent5ModelP2IDQa\">ID<\/ref.associatedtype><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>on<\/decl.var.parameter.argument_label> <decl.var.parameter.name>worker<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:11DatabaseKit0A11ConnectableP\">DatabaseConnectable<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.generic_type_param usr=\"s:6Fluent5ModelP5SugarE4Selfxmfp\">Self<\/ref.generic_type_param>&gt;<\/decl.function.returntype><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 255,
            "key.name" : "requireFind(_:on:)",
            "key.namelength" : 75,
            "key.nameoffset" : 69,
            "key.offset" : 57,
            "key.parsed_declaration" : "static func requireFind(\n    _ id: ID,\n    on worker: DatabaseConnectable\n) -> Future<Self>",
            "key.parsed_scope.end" : 12,
            "key.parsed_scope.start" : 5,
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : Model> (Self.Type) -> (Self.ID, DatabaseConnectable) -> EventLoopFuture<Self>",
            "key.typeusr" : "$s_2on3NIO15EventLoopFutureCyxG2IDQz_11DatabaseKit0G11Connectable_ptcD",
            "key.usr" : "s:6Fluent5ModelP5SugarE11requireFind_2on3NIO15EventLoopFutureCyxG2IDQz_11DatabaseKit0L11Connectable_ptFZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>func saveOrUpdate(given filters: [<Type usr=\"s:6Fluent14FilterOperatorV\">FilterOperator<\/Type>&lt;<Type usr=\"s:6Fluent5ModelP5SugarE4Selfxmfp\">Self<\/Type>.<Type usr=\"s:6Fluent5ModelP8DatabaseQa\">Database<\/Type>, <Type usr=\"s:6Fluent5ModelP5SugarE4Selfxmfp\">Self<\/Type>&gt;], withSoftDeleted: <Type usr=\"s:Sb\">Bool<\/Type> = false, restore: <Type usr=\"s:Sb\">Bool<\/Type> = false, on db: <Type usr=\"s:11DatabaseKit0A11ConnectableP\">DatabaseConnectable<\/Type>) throws -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:6Fluent5ModelP5SugarE4Selfxmfp\">Self<\/Type>&gt;<\/Declaration>",
            "key.bodylength" : 708,
            "key.bodyoffset" : 535,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Model.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>saveOrUpdate<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>given<\/decl.var.parameter.argument_label> <decl.var.parameter.name>filters<\/decl.var.parameter.name>: <decl.var.parameter.type>[<ref.struct usr=\"s:6Fluent14FilterOperatorV\">FilterOperator<\/ref.struct>&lt;<ref.generic_type_param usr=\"s:6Fluent5ModelP5SugarE4Selfxmfp\">Self<\/ref.generic_type_param>.<ref.associatedtype usr=\"s:6Fluent5ModelP8DatabaseQa\">Database<\/ref.associatedtype>, <ref.generic_type_param usr=\"s:6Fluent5ModelP5SugarE4Selfxmfp\">Self<\/ref.generic_type_param>&gt;]<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>withSoftDeleted<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.parameter.type> = false<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>restore<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.parameter.type> = false<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>on<\/decl.var.parameter.argument_label> <decl.var.parameter.name>db<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:11DatabaseKit0A11ConnectableP\">DatabaseConnectable<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.generic_type_param usr=\"s:6Fluent5ModelP5SugarE4Selfxmfp\">Self<\/ref.generic_type_param>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 926,
            "key.name" : "saveOrUpdate(given:withSoftDeleted:restore:on:)",
            "key.namelength" : 187,
            "key.nameoffset" : 323,
            "key.offset" : 318,
            "key.parsed_declaration" : "func saveOrUpdate (\n    given filters: [FilterOperator<Self.Database, Self>],\n    withSoftDeleted: Bool = false,\n    restore: Bool = false,\n    on db: DatabaseConnectable\n) throws -> Future<Self>",
            "key.parsed_scope.end" : 44,
            "key.parsed_scope.start" : 14,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>var query: <Type usr=\"s:6Fluent12QueryBuilderC\">QueryBuilder<\/Type>&lt;<Type usr=\"s:6Fluent5ModelP4Selfxmfp\">Self<\/Type>.Database, <Type usr=\"s:6Fluent5ModelP4Selfxmfp\">Self<\/Type>&gt;<\/Declaration>",
                "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Model.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>query<\/decl.name>: <decl.var.type><ref.class usr=\"s:6Fluent12QueryBuilderC\">QueryBuilder<\/ref.class>&lt;<ref.generic_type_param usr=\"s:6Fluent5ModelP4Selfxmfp\">Self<\/ref.generic_type_param>.Database, <ref.generic_type_param usr=\"s:6Fluent5ModelP4Selfxmfp\">Self<\/ref.generic_type_param>&gt;<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 64,
                "key.name" : "query",
                "key.namelength" : 5,
                "key.nameoffset" : 548,
                "key.offset" : 544,
                "key.parsed_declaration" : "var query = Self.query(on: db, withSoftDeleted: withSoftDeleted)",
                "key.parsed_scope.end" : 20,
                "key.parsed_scope.start" : 20,
                "key.related_decls" : [
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:6Fluent5ModelPAAE5query2on15withSoftDeletedAA12QueryBuilderCy8DatabaseQzxG0J3Kit0J11Connectable_p_SbtFZ\">query(on:withSoftDeleted:)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:Se6FluentE5query_2onAA12QueryBuilderCy8DatabaseQyd__xGSS_qd__t0F3Kit0F10ConnectionRd__AA0D10SupportingAGRQlFZ\">query(_:on:)<\/RelatedName>"
                  }
                ],
                "key.typename" : "QueryBuilder<Self.Database, Self>",
                "key.typeusr" : "$s6Fluent12QueryBuilderCy8DatabaseAA5ModelPQzxGD",
                "key.usr" : "s:6Fluent5ModelP5SugarE12saveOrUpdate5given15withSoftDeleted7restore2on3NIO15EventLoopFutureCyxGSayAA14FilterOperatorVy8DatabaseQzxGG_S2b0S3Kit0S11Connectable_ptKF5queryL_AA12QueryBuilderCyAQxGvp"
              }
            ],
            "key.typename" : "<Self where Self : Model> (Self) -> ([FilterOperator<Self.Database, Self>], Bool, Bool, DatabaseConnectable) throws -> EventLoopFuture<Self>",
            "key.typeusr" : "$s5given15withSoftDeleted7restore2on3NIO15EventLoopFutureCyxGSay6Fluent14FilterOperatorVy8DatabaseQzxGG_S2b0N3Kit0N11Connectable_ptKcD",
            "key.usr" : "s:6Fluent5ModelP5SugarE12saveOrUpdate5given15withSoftDeleted7restore2on3NIO15EventLoopFutureCyxGSayAA14FilterOperatorVy8DatabaseQzxGG_S2b0S3Kit0S11Connectable_ptKF"
          }
        ],
        "key.typename" : "Model.Protocol",
        "key.typeusr" : "$s6Fluent5Model_pmD",
        "key.usr" : "s:6Fluent5ModelP"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.annotated_decl" : "<Declaration>protocol Model : <Type usr=\"s:4Core11ReflectableP\">Reflectable<\/Type>, <Type usr=\"s:6Fluent8AnyModelP\">AnyModel<\/Type><\/Declaration>",
        "key.bodylength" : 1338,
        "key.bodyoffset" : 1298,
        "key.doc.declaration" : "protocol Model : Reflectable, AnyModel",
        "key.doc.discussion" : [
          {
            "Para" : "Models can also conform to `Migration` to provide prepare and revert methods for performing actions on the database before the application boots."
          },
          {
            "Para" : "Both `struct`s and `class`es can be models. Since Fluent is closure-based, copied `struct`s will be returned by any methods that must mutate the model."
          },
          {
            "Para" : "Here is an example of a simple `User` model."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Most of the time, you should use the Fluent driver’s sub-protocols for conforming to `Model` instead of using the protocol directly."
          },
          {
            "Para" : "To create a `QueryBuilder` for a model, use the `query(on:)` method."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "You can also create `QueryBuilder`s for any `Decodable` type. However, `QueryBuilder`s created for `Model`s have some extra methods and functionality."
          },
          {
            "Para" : "Models can implement optional lifecycle methods to hook into Fluent actions."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Models are capable of storing timestamps representing when this model was first created and when it was last updated. If you decide to store timestamps on your model, Fluent will automatically update them whenever changes to the database are made."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Add timestamp keys pointing to the properties on your model to let Fluent automatically update the values. You can set key paths for one or both of the keys per model."
          },
          {
            "Para" : "Instead of actually deleting rows from the database, soft deleted models can have a “deleted at” property set."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "You can add `SoftDeletable` to existing models that have an optional `Date` property for storing the deleted at date."
          },
          {
            "Note" : ""
          },
          {
            "Para" : "Use `softDelete(on:)` to soft-delete a `SoftDeletable` model from the database. Use `restore(on:)` to restore a soft-deleted model."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Use `excludeSoftDeleted()` on `QueryBuilder` to exclude soft-deleted results (included by default)."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "`SoftDeletable` models have extra lifecycle events:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "See `Model` to learn more about Fluent lifecycle hooks."
          }
        ],
        "key.doc.full_as_xml" : "<Class><Name>Model<\/Name><USR>s:6Fluent5ModelP<\/USR><Declaration>protocol Model : Reflectable, AnyModel<\/Declaration><CommentParts><Abstract><Para>Represents a single table \/ collection in a Fluent database. Models are the basis for querying databases (create, read, update, and delete).<\/Para><\/Abstract><Discussion><Para>Models can also conform to <codeVoice>Migration<\/codeVoice> to provide prepare and revert methods for performing actions on the database before the application boots.<\/Para><Para>Both <codeVoice>struct<\/codeVoice>s and <codeVoice>class<\/codeVoice>es can be models. Since Fluent is closure-based, copied <codeVoice>struct<\/codeVoice>s will be returned by any methods that must mutate the model.<\/Para><Para>Here is an example of a simple <codeVoice>User<\/codeVoice> model.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[final class User: Model {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    typealias Database = PostgreSQLDatabase]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    static let idKey: WritableKeyPath<User, UUID?> = \\.id]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    var id: UUID?]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    var name: String]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    init(id: UUID? = nil, name: String) {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        self.id = id]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        self.name = name]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    }]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Most of the time, you should use the Fluent driver’s sub-protocols for conforming to <codeVoice>Model<\/codeVoice> instead of using the protocol directly.<\/Para><rawHTML><![CDATA[<h2>]]><\/rawHTML>Query<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><Para>To create a <codeVoice>QueryBuilder<\/codeVoice> for a model, use the <codeVoice>query(on:)<\/codeVoice> method.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let users = try User.query(on: req).filter(\\.name == \"Vapor\").all()]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>You can also create <codeVoice>QueryBuilder<\/codeVoice>s for any <codeVoice>Decodable<\/codeVoice> type. However, <codeVoice>QueryBuilder<\/codeVoice>s created for <codeVoice>Model<\/codeVoice>s have some extra methods and functionality.<\/Para><rawHTML><![CDATA[<h2>]]><\/rawHTML>Lifecycle<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><Para>Models can implement optional lifecycle methods to hook into Fluent actions.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[final class User: Model {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    ...]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    func willDelete(on conn: PostgreSQLConnection) throws -> Future<User> {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        print(\"Deleting user: \\(id)\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        return conn.future(self)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    }]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h2>]]><\/rawHTML>Timestamps<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><Para>Models are capable of storing timestamps representing when this model was first created and when it was last updated. If you decide to store timestamps on your model, Fluent will automatically update them whenever changes to the database are made.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[final class User: Model {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    static let createdAtKey: TimestampKey? = \\User.createdAt]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    static let updatedAtKey: TimestampKey? = \\User.updatedAt]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    ...]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    var createdAt: Date?]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    var updatedAt: Date?]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Add timestamp keys pointing to the properties on your model to let Fluent automatically update the values. You can set key paths for one or both of the keys per model.<\/Para><rawHTML><![CDATA[<h2>]]><\/rawHTML>Soft Delete<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><Para>Instead of actually deleting rows from the database, soft deleted models can have a “deleted at” property set.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[final class User: Model {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    ...]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    var deletedAt: Date?]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[extension User: SoftDeletable {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    static let deletedAtKey: TimestampKey? = \\.deletedAt]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>You can add <codeVoice>SoftDeletable<\/codeVoice> to existing models that have an optional <codeVoice>Date<\/codeVoice> property for storing the deleted at date.<\/Para><Note><Para>The deleted at date may be set in the future. The model will continue to be included in queries until the deleted at date passes.<\/Para><\/Note><Para>Use <codeVoice>softDelete(on:)<\/codeVoice> to soft-delete a <codeVoice>SoftDeletable<\/codeVoice> model from the database. Use <codeVoice>restore(on:)<\/codeVoice> to restore a soft-deleted model.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let user: User]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[try user.softDelete(on: conn)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ later ...]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[try user.restore(on: conn)]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Use <codeVoice>excludeSoftDeleted()<\/codeVoice> on <codeVoice>QueryBuilder<\/codeVoice> to exclude soft-deleted results (included by default).<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[User.query(on: conn).excludeSoftDeleted().count()]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para><codeVoice>SoftDeletable<\/codeVoice> models have extra lifecycle events:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[- `willRestore`.]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[- `didRestore`.]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[- `willSoftDelete`.]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[- `didSoftDelete`.]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>See <codeVoice>Model<\/codeVoice> to learn more about Fluent lifecycle hooks.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.name" : "Model",
        "key.doc.type" : "Class",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>Model<\/decl.name> : <ref.protocol usr=\"s:4Core11ReflectableP\">Reflectable<\/ref.protocol>, <ref.protocol usr=\"s:6Fluent8AnyModelP\">AnyModel<\/ref.protocol><\/decl.protocol>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 1389,
        "key.modulename" : "Fluent",
        "key.name" : "Model",
        "key.namelength" : 5,
        "key.nameoffset" : 1258,
        "key.offset" : 1248,
        "key.parsed_declaration" : "extension Model where Database: SchemaSupporting",
        "key.parsed_scope.end" : 84,
        "key.parsed_scope.start" : 47,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static func addProperties(to builder: <Type usr=\"s:6Fluent13SchemaCreatorC\">SchemaCreator<\/Type>&lt;<Type usr=\"s:6Fluent5ModelP5SugarAA16SchemaSupporting8DatabaseRpzrlE4Selfxmfp\">Self<\/Type>&gt;, excluding excludedProperties: [<Type usr=\"s:4Core17ReflectedPropertyV\">ReflectedProperty<\/Type>?]) throws<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1303
              }
            ],
            "key.bodylength" : 832,
            "key.bodyoffset" : 1451,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Model.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>addProperties<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>to<\/decl.var.parameter.argument_label> <decl.var.parameter.name>builder<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:6Fluent13SchemaCreatorC\">SchemaCreator<\/ref.class>&lt;<ref.generic_type_param usr=\"s:6Fluent5ModelP5SugarAA16SchemaSupporting8DatabaseRpzrlE4Selfxmfp\">Self<\/ref.generic_type_param>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>excluding<\/decl.var.parameter.argument_label> <decl.var.parameter.name>excludedProperties<\/decl.var.parameter.name>: <decl.var.parameter.type>[<ref.struct usr=\"s:4Core17ReflectedPropertyV\">ReflectedProperty<\/ref.struct>?]<\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 974,
            "key.name" : "addProperties(to:excluding:)",
            "key.namelength" : 120,
            "key.nameoffset" : 1322,
            "key.offset" : 1310,
            "key.parsed_declaration" : "public static func addProperties(\n    to builder: SchemaCreator<Self>,\n    excluding excludedProperties: [ReflectedProperty?]\n) throws",
            "key.parsed_scope.end" : 73,
            "key.parsed_scope.start" : 48,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:6Fluent5ModelPA2A16SchemaSupporting8DatabaseRpzrlE13addProperties2toyAA0C7CreatorCyxG_tKFZ\">addProperties(to:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:6Fluent5ModelP5SugarAA16SchemaSupporting8DatabaseRpzrlE13addProperties2to9excludingyAA0D7CreatorCyxG_Says7KeyPathCyxqd__GGtKlFZ\">addProperties&lt;T&gt;(to: SchemaCreator&lt;Self&gt;, excluding: [KeyPath&lt;Self, T&gt;]) throws<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let properties: [<Type usr=\"s:4Core17ReflectedPropertyV\">ReflectedProperty<\/Type>]<\/Declaration>",
                "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Model.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>properties<\/decl.name>: <decl.var.type>[<ref.struct usr=\"s:4Core17ReflectedPropertyV\">ReflectedProperty<\/ref.struct>]<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 217,
                "key.name" : "properties",
                "key.namelength" : 10,
                "key.nameoffset" : 1716,
                "key.offset" : 1712,
                "key.parsed_declaration" : "let properties = try Self.reflectProperties(depth: 0).filter { property in",
                "key.parsed_scope.end" : 59,
                "key.parsed_scope.start" : 59,
                "key.typename" : "[ReflectedProperty]",
                "key.typeusr" : "$sSay4Core17ReflectedPropertyVGD",
                "key.usr" : "s:6Fluent5ModelP5SugarAA16SchemaSupporting8DatabaseRpzrlE13addProperties2to9excludingyAA0D7CreatorCyxG_Say4Core17ReflectedPropertyVSgGtKFZ10propertiesL_SayAPGvp"
              }
            ],
            "key.typename" : "<Self where Self : Model, Self.Database : SchemaSupporting> (Self.Type) -> (SchemaCreator<Self>, [ReflectedProperty?]) throws -> ()",
            "key.typeusr" : "$s2to9excludingy6Fluent13SchemaCreatorCyxG_Say4Core17ReflectedPropertyVSgGtKcD",
            "key.usr" : "s:6Fluent5ModelP5SugarAA16SchemaSupporting8DatabaseRpzrlE13addProperties2to9excludingyAA0D7CreatorCyxG_Say4Core17ReflectedPropertyVSgGtKFZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static func addProperties&lt;T&gt;(to builder: <Type usr=\"s:6Fluent13SchemaCreatorC\">SchemaCreator<\/Type>&lt;<Type usr=\"s:6Fluent5ModelP5SugarAA16SchemaSupporting8DatabaseRpzrlE4Selfxmfp\">Self<\/Type>&gt;, excluding excludedKeyPaths: [<Type usr=\"s:s7KeyPathC\">KeyPath<\/Type>&lt;<Type usr=\"s:6Fluent5ModelP5SugarAA16SchemaSupporting8DatabaseRpzrlE4Selfxmfp\">Self<\/Type>, <Type usr=\"s:6Fluent5ModelP5SugarAA16SchemaSupporting8DatabaseRpzrlE13addProperties2to9excludingyAA0D7CreatorCyxG_Says7KeyPathCyxqd__GGtKlFZ1TL_qd__mfp\">T<\/Type>&gt;]) throws<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2290
              }
            ],
            "key.bodylength" : 192,
            "key.bodyoffset" : 2442,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Model.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>addProperties<\/decl.name>&lt;<decl.generic_type_param usr=\"s:6Fluent5ModelP5SugarAA16SchemaSupporting8DatabaseRpzrlE13addProperties2to9excludingyAA0D7CreatorCyxG_Says7KeyPathCyxqd__GGtKlFZ1TL_qd__mfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>to<\/decl.var.parameter.argument_label> <decl.var.parameter.name>builder<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:6Fluent13SchemaCreatorC\">SchemaCreator<\/ref.class>&lt;<ref.generic_type_param usr=\"s:6Fluent5ModelP5SugarAA16SchemaSupporting8DatabaseRpzrlE4Selfxmfp\">Self<\/ref.generic_type_param>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>excluding<\/decl.var.parameter.argument_label> <decl.var.parameter.name>excludedKeyPaths<\/decl.var.parameter.name>: <decl.var.parameter.type>[<ref.class usr=\"s:s7KeyPathC\">KeyPath<\/ref.class>&lt;<ref.generic_type_param usr=\"s:6Fluent5ModelP5SugarAA16SchemaSupporting8DatabaseRpzrlE4Selfxmfp\">Self<\/ref.generic_type_param>, <ref.generic_type_param usr=\"s:6Fluent5ModelP5SugarAA16SchemaSupporting8DatabaseRpzrlE13addProperties2to9excludingyAA0D7CreatorCyxG_Says7KeyPathCyxqd__GGtKlFZ1TL_qd__mfp\">T<\/ref.generic_type_param>&gt;]<\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 338,
            "key.name" : "addProperties(to:excluding:)",
            "key.namelength" : 124,
            "key.nameoffset" : 2309,
            "key.offset" : 2297,
            "key.parsed_declaration" : "public static func addProperties<T: Any>(\n    to builder: SchemaCreator<Self>,\n    excluding excludedKeyPaths: [KeyPath<Self, T>]\n) throws",
            "key.parsed_scope.end" : 83,
            "key.parsed_scope.start" : 75,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:6Fluent5ModelPA2A16SchemaSupporting8DatabaseRpzrlE13addProperties2toyAA0C7CreatorCyxG_tKFZ\">addProperties(to:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:6Fluent5ModelP5SugarAA16SchemaSupporting8DatabaseRpzrlE13addProperties2to9excludingyAA0D7CreatorCyxG_Say4Core17ReflectedPropertyVSgGtKFZ\">addProperties(to: SchemaCreator&lt;Self&gt;, excluding: [ReflectedProperty?]) throws<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>T : Any<\/Declaration>",
                "key.elements" : [
                  {
                    "key.kind" : "source.lang.swift.structure.elem.typeref",
                    "key.length" : 3,
                    "key.offset" : 2326
                  }
                ],
                "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Model.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint>Any<\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
                "key.inheritedtypes" : [
                  {
                    "key.name" : "Any"
                  }
                ],
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 6,
                "key.name" : "T",
                "key.namelength" : 1,
                "key.nameoffset" : 2323,
                "key.offset" : 2323,
                "key.parsed_declaration" : "public static func addProperties<T: Any>(",
                "key.parsed_scope.end" : 75,
                "key.parsed_scope.start" : 75,
                "key.typename" : "T.Type",
                "key.typeusr" : "$sqd__mD",
                "key.usr" : "s:6Fluent5ModelP5SugarAA16SchemaSupporting8DatabaseRpzrlE13addProperties2to9excludingyAA0D7CreatorCyxG_Says7KeyPathCyxqd__GGtKlFZ1TL_qd__mfp"
              },
              {
                "key.annotated_decl" : "<Declaration>let excludedProperties: [<Type usr=\"s:4Core17ReflectedPropertyV\">ReflectedProperty<\/Type>?]<\/Declaration>",
                "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Model.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>excludedProperties<\/decl.name>: <decl.var.type>[<ref.struct usr=\"s:4Core17ReflectedPropertyV\">ReflectedProperty<\/ref.struct>?]<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 107,
                "key.name" : "excludedProperties",
                "key.namelength" : 18,
                "key.nameoffset" : 2455,
                "key.offset" : 2451,
                "key.parsed_declaration" : "let excludedProperties = excludedKeyPaths",
                "key.parsed_scope.end" : 79,
                "key.parsed_scope.start" : 79,
                "key.typename" : "[ReflectedProperty?]",
                "key.typeusr" : "$sSay4Core17ReflectedPropertyVSgGD",
                "key.usr" : "s:6Fluent5ModelP5SugarAA16SchemaSupporting8DatabaseRpzrlE13addProperties2to9excludingyAA0D7CreatorCyxG_Says7KeyPathCyxqd__GGtKlFZ08excludedH0L_Say4Core17ReflectedPropertyVSgGvp"
              }
            ],
            "key.typename" : "<Self, T where Self : Model, Self.Database : SchemaSupporting> (Self.Type) -> (SchemaCreator<Self>, [KeyPath<Self, T>]) throws -> ()",
            "key.typeusr" : "$s2to9excludingy6Fluent13SchemaCreatorCyxG_Says7KeyPathCyxqd__GGtKcluD",
            "key.usr" : "s:6Fluent5ModelP5SugarAA16SchemaSupporting8DatabaseRpzrlE13addProperties2to9excludingyAA0D7CreatorCyxG_Says7KeyPathCyxqd__GGtKlFZ"
          }
        ],
        "key.typename" : "Model.Protocol",
        "key.typeusr" : "$s6Fluent5Model_pmD",
        "key.usr" : "s:6Fluent5ModelP"
      }
    ]
  }
}, {
  "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/NumberFormatTag.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 765,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public final class NumberFormatTag : <Type usr=\"s:11TemplateKit11TagRendererP\">TagRenderer<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.final",
            "key.length" : 5,
            "key.offset" : 325
          },
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 318
          }
        ],
        "key.bodylength" : 396,
        "key.bodyoffset" : 367,
        "key.doc.column" : 20,
        "key.doc.comment" : "A custom leaf tag to format a number to a fixed amount of decimals\nREGISTER TAG: \n  tags.use(NumberFormatTag(), as: \"numberformat\")\n\nUSAGE: \n  #numberformat(100.3333333333, \"2\")\n  = 100.33\n\n- Parameters:\n  - number: Double\n  - decimals: Int (default: 2 decimals)",
        "key.doc.declaration" : "public final class NumberFormatTag : TagRenderer",
        "key.doc.discussion" : [
          {
            "Para" : "USAGE: #numberformat(100.3333333333, “2”) = 100.33"
          }
        ],
        "key.doc.file" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/NumberFormatTag.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/NumberFormatTag.swift\" line=\"14\" column=\"20\"><Name>NumberFormatTag<\/Name><USR>s:5Sugar15NumberFormatTagC<\/USR><Declaration>public final class NumberFormatTag : TagRenderer<\/Declaration><CommentParts><Abstract><Para>A custom leaf tag to format a number to a fixed amount of decimals REGISTER TAG: tags.use(NumberFormatTag(), as: “numberformat”)<\/Para><\/Abstract><Parameters><Parameter><Name>number<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Double<\/Para><\/Discussion><\/Parameter><Parameter><Name>decimals<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Int (default: 2 decimals)<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Para>USAGE: #numberformat(100.3333333333, “2”) = 100.33<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 14,
        "key.doc.name" : "NumberFormatTag",
        "key.doc.parameters" : [
          {
            "discussion" : [
              {
                "Para" : "Double"
              }
            ],
            "name" : "number"
          },
          {
            "discussion" : [
              {
                "Para" : "Int (default: 2 decimals)"
              }
            ],
            "name" : "decimals"
          }
        ],
        "key.doc.type" : "Class",
        "key.doclength" : 305,
        "key.docoffset" : 13,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 11,
            "key.offset" : 354
          }
        ],
        "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/NumberFormatTag.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>final<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>NumberFormatTag<\/decl.name> : <ref.protocol usr=\"s:11TemplateKit11TagRendererP\">TagRenderer<\/ref.protocol><\/decl.class>",
        "key.inheritedtypes" : [
          {
            "key.name" : "TagRenderer"
          }
        ],
        "key.kind" : "source.lang.swift.decl.class",
        "key.length" : 433,
        "key.name" : "NumberFormatTag",
        "key.namelength" : 15,
        "key.nameoffset" : 337,
        "key.offset" : 331,
        "key.parsed_declaration" : "public final class NumberFormatTag: TagRenderer",
        "key.parsed_scope.end" : 26,
        "key.parsed_scope.start" : 14,
        "key.runtime_name" : "_TtC4main15NumberFormatTag",
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func render(tag: <Type usr=\"s:11TemplateKit10TagContextC\">TagContext<\/Type>) throws -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:11TemplateKit0A4DataV\">TemplateData<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 372
              }
            ],
            "key.bodylength" : 321,
            "key.bodyoffset" : 440,
            "key.doc.declaration" : "func render(tag: TemplateKit.TagContext) throws -> NIO.EventLoopFuture<TemplateKit.TemplateData>",
            "key.doc.full_as_xml" : "<Function><Name>render(tag:)<\/Name><USR>s:11TemplateKit11TagRendererP6render3tag3NIO15EventLoopFutureCyAA0A4DataVGAA0C7ContextC_tKF<\/USR><Declaration>func render(tag: TemplateKit.TagContext) throws -&gt; NIO.EventLoopFuture&lt;TemplateKit.TemplateData&gt;<\/Declaration><CommentParts><Abstract><Para>Renders a <codeVoice>TemplateData<\/codeVoice> to return to the <codeVoice>TemplateSerializer<\/codeVoice> for serialization.<\/Para><\/Abstract><Parameters><Parameter><Name>tag<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The <codeVoice>TagContext<\/codeVoice> containing information about the invocation of this tag.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>Serialized <codeVoice>TemplateData<\/codeVoice>.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
            "key.doc.name" : "render(tag:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "The `TagContext` containing information about the invocation of this tag."
                  }
                ],
                "name" : "tag"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "Serialized `TemplateData`."
              }
            ],
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/NumberFormatTag.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>render<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>tag<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:11TemplateKit10TagContextC\">TagContext<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.struct usr=\"s:11TemplateKit0A4DataV\">TemplateData<\/ref.struct>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 383,
            "key.name" : "render(tag:)",
            "key.namelength" : 23,
            "key.nameoffset" : 384,
            "key.offset" : 379,
            "key.overrides" : [
              {
                "key.usr" : "s:11TemplateKit11TagRendererP6render3tag3NIO15EventLoopFutureCyAA0A4DataVGAA0C7ContextC_tKF"
              }
            ],
            "key.parsed_declaration" : "public func render(tag: TagContext) throws -> Future<TemplateData>",
            "key.parsed_scope.end" : 25,
            "key.parsed_scope.start" : 15,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let decimals: <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/NumberFormatTag.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>decimals<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 48,
                "key.name" : "decimals",
                "key.namelength" : 8,
                "key.nameoffset" : 587,
                "key.offset" : 583,
                "key.parsed_declaration" : "let decimals = tag.parameters[safe: 1]?.int ?? 2",
                "key.parsed_scope.end" : 20,
                "key.parsed_scope.start" : 20,
                "key.typename" : "Int",
                "key.typeusr" : "$sSiD",
                "key.usr" : "s:5Sugar15NumberFormatTagC6render3tag3NIO15EventLoopFutureCy11TemplateKit0K4DataVGAI0D7ContextC_tKF8decimalsL_Sivp"
              },
              {
                "key.annotated_decl" : "<Declaration>let formattedNumber: <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/NumberFormatTag.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>formattedNumber<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 62,
                "key.name" : "formattedNumber",
                "key.namelength" : 15,
                "key.nameoffset" : 645,
                "key.offset" : 641,
                "key.parsed_declaration" : "let formattedNumber = String(format: \"%.*f\", decimals, number)",
                "key.parsed_scope.end" : 22,
                "key.parsed_scope.start" : 22,
                "key.typename" : "String",
                "key.typeusr" : "$sSSD",
                "key.usr" : "s:5Sugar15NumberFormatTagC6render3tag3NIO15EventLoopFutureCy11TemplateKit0K4DataVGAI0D7ContextC_tKF09formattedB0L_SSvp"
              }
            ],
            "key.typename" : "(NumberFormatTag) -> (TagContext) throws -> EventLoopFuture<TemplateData>",
            "key.typeusr" : "$s3tag3NIO15EventLoopFutureCy11TemplateKit0F4DataVGAE10TagContextC_tKcD",
            "key.usr" : "s:11TemplateKit11TagRendererP6render3tag3NIO15EventLoopFutureCyAA0A4DataVGAA0C7ContextC_tKF"
          }
        ],
        "key.typename" : "NumberFormatTag.Type",
        "key.typeusr" : "$s5Sugar15NumberFormatTagCmD",
        "key.usr" : "s:5Sugar15NumberFormatTagC"
      }
    ]
  }
}, {
  "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/PublicRepresentable.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 156,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public protocol PublicRepresentable<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 14
          }
        ],
        "key.bodylength" : 103,
        "key.bodyoffset" : 51,
        "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/PublicRepresentable.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>PublicRepresentable<\/decl.name><\/decl.protocol>",
        "key.kind" : "source.lang.swift.decl.protocol",
        "key.length" : 134,
        "key.name" : "PublicRepresentable",
        "key.namelength" : 19,
        "key.nameoffset" : 30,
        "key.offset" : 21,
        "key.parsed_declaration" : "public protocol PublicRepresentable",
        "key.parsed_scope.end" : 6,
        "key.parsed_scope.start" : 3,
        "key.runtime_name" : "_TtP4main19PublicRepresentable_",
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>associatedtype Public : <Type usr=\"s:5Vapor7ContentP\">Content<\/Type><\/Declaration>",
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/PublicRepresentable.swift",
            "key.fully_annotated_decl" : "<decl.associatedtype><syntaxtype.keyword>associatedtype<\/syntaxtype.keyword> <decl.name>Public<\/decl.name> : <ref.protocol usr=\"s:5Vapor7ContentP\">Content<\/ref.protocol><\/decl.associatedtype>",
            "key.kind" : "source.lang.swift.decl.associatedtype",
            "key.length" : 30,
            "key.name" : "Public",
            "key.namelength" : 6,
            "key.nameoffset" : 71,
            "key.offset" : 56,
            "key.parsed_declaration" : "associatedtype Public: Content",
            "key.parsed_scope.end" : 4,
            "key.parsed_scope.start" : 4,
            "key.typename" : "Self.Public.Type",
            "key.typeusr" : "$s6Public5Sugar0A13RepresentablePQzmD",
            "key.usr" : "s:5Sugar19PublicRepresentableP0B0Qa"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>func convertToPublic(on req: <Type usr=\"s:5Vapor7RequestC\">Request<\/Type>) throws -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:5Sugar19PublicRepresentableP0B0Qa\">Public<\/Type>&gt;<\/Declaration>",
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/PublicRepresentable.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>convertToPublic<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>on<\/decl.var.parameter.argument_label> <decl.var.parameter.name>req<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.associatedtype usr=\"s:5Sugar19PublicRepresentableP0B0Qa\">Public<\/ref.associatedtype>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 62,
            "key.name" : "convertToPublic(on:)",
            "key.namelength" : 32,
            "key.nameoffset" : 96,
            "key.offset" : 91,
            "key.parsed_declaration" : "func convertToPublic(on req: Request) throws -> Future<Public>",
            "key.parsed_scope.end" : 5,
            "key.parsed_scope.start" : 5,
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : PublicRepresentable> (Self) -> (Request) throws -> EventLoopFuture<Self.Public>",
            "key.typeusr" : "$s2on3NIO15EventLoopFutureCy6PublicQzG5Vapor7RequestC_tKcD",
            "key.usr" : "s:5Sugar19PublicRepresentableP09convertToB02on3NIO15EventLoopFutureCy0B0QzG5Vapor7RequestC_tKF"
          }
        ],
        "key.typename" : "PublicRepresentable.Protocol",
        "key.typeusr" : "$s5Sugar19PublicRepresentable_pmD",
        "key.usr" : "s:5Sugar19PublicRepresentableP"
      }
    ]
  }
}, {
  "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Redis.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 1176,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.annotated_decl" : "<Declaration>final class RedisClient : <Type usr=\"s:11DatabaseKit0A10ConnectionP\">DatabaseConnection<\/Type>, <Type usr=\"s:5Async11BasicWorkerP\">BasicWorker<\/Type><\/Declaration>",
        "key.bodylength" : 1137,
        "key.bodyoffset" : 37,
        "key.doc.declaration" : "final class RedisClient : DatabaseConnection, BasicWorker",
        "key.doc.full_as_xml" : "<Class><Name>RedisClient<\/Name><USR>s:5Redis0A6ClientC<\/USR><Declaration>final class RedisClient : DatabaseConnection, BasicWorker<\/Declaration><CommentParts><Abstract><Para>A Redis client.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.name" : "RedisClient",
        "key.doc.type" : "Class",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>final<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>RedisClient<\/decl.name> : <ref.protocol usr=\"s:11DatabaseKit0A10ConnectionP\">DatabaseConnection<\/ref.protocol>, <ref.protocol usr=\"s:5Async11BasicWorkerP\">BasicWorker<\/ref.protocol><\/decl.class>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 1161,
        "key.modulename" : "Redis",
        "key.name" : "RedisClient",
        "key.namelength" : 11,
        "key.nameoffset" : 24,
        "key.offset" : 14,
        "key.parsed_declaration" : "extension RedisClient",
        "key.parsed_scope.end" : 43,
        "key.parsed_scope.start" : 3,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func expire(_ key: <Type usr=\"s:SS\">String<\/Type>, after deadline: <Type usr=\"s:Si\">Int<\/Type>) -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:Si\">Int<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 42
              }
            ],
            "key.bodylength" : 365,
            "key.bodyoffset" : 113,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Redis.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>expire<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>after<\/decl.var.parameter.argument_label> <decl.var.parameter.name>deadline<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.struct usr=\"s:Si\">Int<\/ref.struct>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 430,
            "key.name" : "expire(_:after:)",
            "key.namelength" : 42,
            "key.nameoffset" : 54,
            "key.offset" : 49,
            "key.parsed_declaration" : "public func expire(_ key: String, after deadline: Int) -> Future<Int>",
            "key.parsed_scope.end" : 16,
            "key.parsed_scope.start" : 4,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let resp: <Type usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/Type>&lt;<Type usr=\"s:Si\">Int<\/Type>&gt;<\/Declaration>",
                "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Redis.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>resp<\/decl.name>: <decl.var.type><ref.class usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/ref.class>&lt;<ref.struct usr=\"s:Si\">Int<\/ref.struct>&gt;<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 330,
                "key.name" : "resp",
                "key.namelength" : 4,
                "key.nameoffset" : 126,
                "key.offset" : 122,
                "key.parsed_declaration" : "let resp = command(",
                "key.parsed_scope.end" : 5,
                "key.parsed_scope.start" : 5,
                "key.typename" : "EventLoopFuture<Int>",
                "key.typeusr" : "$s3NIO15EventLoopFutureCySiGD",
                "key.usr" : "s:5Redis0A6ClientC5SugarE6expire_5after3NIO15EventLoopFutureCySiGSS_SitF4respL_AJvp"
              }
            ],
            "key.typename" : "(RedisClient) -> (String, Int) -> EventLoopFuture<Int>",
            "key.typeusr" : "$s_5after3NIO15EventLoopFutureCySiGSS_SitcD",
            "key.usr" : "s:5Redis0A6ClientC5SugarE6expire_5after3NIO15EventLoopFutureCySiGSS_SitF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func set&lt;E&gt;(_ key: <Type usr=\"s:SS\">String<\/Type>, to data: <Type usr=\"s:5Redis0A6ClientC5SugarE3set_2to10expiration3NIO15EventLoopFutureCySiGSS_xSitAA0A15DataConvertibleRzlF1EL_xmfp\">E<\/Type>, expiration: <Type usr=\"s:Si\">Int<\/Type>) -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:Si\">Int<\/Type>&gt; where E : <Type usr=\"s:5Redis0A15DataConvertibleP\">RedisDataConvertible<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 485
              }
            ],
            "key.bodylength" : 128,
            "key.bodyoffset" : 624,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Redis.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>set<\/decl.name>&lt;<decl.generic_type_param usr=\"s:5Redis0A6ClientC5SugarE3set_2to10expiration3NIO15EventLoopFutureCySiGSS_xSitAA0A15DataConvertibleRzlF1EL_xmfp\"><decl.generic_type_param.name>E<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>to<\/decl.var.parameter.argument_label> <decl.var.parameter.name>data<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:5Redis0A6ClientC5SugarE3set_2to10expiration3NIO15EventLoopFutureCySiGSS_xSitAA0A15DataConvertibleRzlF1EL_xmfp\">E<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>expiration<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.struct usr=\"s:Si\">Int<\/ref.struct>&gt;<\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>E : <ref.protocol usr=\"s:5Redis0A15DataConvertibleP\">RedisDataConvertible<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 261,
            "key.name" : "set(_:to:expiration:)",
            "key.namelength" : 80,
            "key.nameoffset" : 497,
            "key.offset" : 492,
            "key.parsed_declaration" : "public func set<E>(\n    _ key: String,\n    to data: E,\n    expiration: Int\n) -> Future<Int> where E: RedisDataConvertible",
            "key.parsed_scope.end" : 27,
            "key.parsed_scope.start" : 18,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Redis0A6ClientC3set_2to3NIO15EventLoopFutureCyytGSS_xtAA0A15DataConvertibleRzlF\">set(_:to:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>E<\/Declaration>",
                "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Redis.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>E<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 1,
                "key.name" : "E",
                "key.namelength" : 1,
                "key.nameoffset" : 501,
                "key.offset" : 501,
                "key.parsed_declaration" : "public func set<E>(",
                "key.parsed_scope.end" : 18,
                "key.parsed_scope.start" : 18,
                "key.typename" : "E.Type",
                "key.typeusr" : "$sxmD",
                "key.usr" : "s:5Redis0A6ClientC5SugarE3set_2to10expiration3NIO15EventLoopFutureCySiGSS_xSitAA0A15DataConvertibleRzlF1EL_xmfp"
              }
            ],
            "key.typename" : "<E where E : RedisDataConvertible> (RedisClient) -> (String, E, Int) -> EventLoopFuture<Int>",
            "key.typeusr" : "$s_2to10expiration3NIO15EventLoopFutureCySiGSS_xSitc5Redis0G15DataConvertibleRzluD",
            "key.usr" : "s:5Redis0A6ClientC5SugarE3set_2to10expiration3NIO15EventLoopFutureCySiGSS_xSitAA0A15DataConvertibleRzlF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func jsonSet&lt;E&gt;(_ key: <Type usr=\"s:SS\">String<\/Type>, to entity: <Type usr=\"s:5Redis0A6ClientC5SugarE7jsonSet_2to10expiration3NIO15EventLoopFutureCySiGSS_xSitSERzlF1EL_xmfp\">E<\/Type>, expiration: <Type usr=\"s:Si\">Int<\/Type>) -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:Si\">Int<\/Type>&gt; where E : <Type usr=\"s:SE\">Encodable<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 759
              }
            ],
            "key.bodylength" : 279,
            "key.bodyoffset" : 893,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Redis.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>jsonSet<\/decl.name>&lt;<decl.generic_type_param usr=\"s:5Redis0A6ClientC5SugarE7jsonSet_2to10expiration3NIO15EventLoopFutureCySiGSS_xSitSERzlF1EL_xmfp\"><decl.generic_type_param.name>E<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>to<\/decl.var.parameter.argument_label> <decl.var.parameter.name>entity<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:5Redis0A6ClientC5SugarE7jsonSet_2to10expiration3NIO15EventLoopFutureCySiGSS_xSitSERzlF1EL_xmfp\">E<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>expiration<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.struct usr=\"s:Si\">Int<\/ref.struct>&gt;<\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>E : <ref.protocol usr=\"s:SE\">Encodable<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 407,
            "key.name" : "jsonSet(_:to:expiration:)",
            "key.namelength" : 86,
            "key.nameoffset" : 771,
            "key.offset" : 766,
            "key.parsed_declaration" : "public func jsonSet<E>(\n    _ key: String,\n    to entity: E,\n    expiration: Int\n) -> Future<Int> where E: Encodable",
            "key.parsed_scope.end" : 42,
            "key.parsed_scope.start" : 29,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Redis0A6ClientC7jsonSet_2to3NIO15EventLoopFutureCyytGSS_xtSERzlF\">jsonSet(_:to:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>E<\/Declaration>",
                "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Redis.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>E<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 1,
                "key.name" : "E",
                "key.namelength" : 1,
                "key.nameoffset" : 779,
                "key.offset" : 779,
                "key.parsed_declaration" : "public func jsonSet<E>(",
                "key.parsed_scope.end" : 29,
                "key.parsed_scope.start" : 29,
                "key.typename" : "E.Type",
                "key.typeusr" : "$sxmD",
                "key.usr" : "s:5Redis0A6ClientC5SugarE7jsonSet_2to10expiration3NIO15EventLoopFutureCySiGSS_xSitSERzlF1EL_xmfp"
              }
            ],
            "key.typename" : "<E where E : Encodable> (RedisClient) -> (String, E, Int) -> EventLoopFuture<Int>",
            "key.typeusr" : "$s_2to10expiration3NIO15EventLoopFutureCySiGSS_xSitcSERzluD",
            "key.usr" : "s:5Redis0A6ClientC5SugarE7jsonSet_2to10expiration3NIO15EventLoopFutureCySiGSS_xSitSERzlF"
          }
        ],
        "key.typename" : "RedisClient.Type",
        "key.typeusr" : "$s5Redis0A6ClientCmD",
        "key.usr" : "s:5Redis0A6ClientC"
      }
    ]
  }
}, {
  "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Render+userInfo.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 2823,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.annotated_decl" : "<Declaration>protocol ViewRenderer : AnyObject<\/Declaration>",
        "key.bodylength" : 1509,
        "key.bodyoffset" : 38,
        "key.doc.declaration" : "protocol ViewRenderer : AnyObject",
        "key.doc.full_as_xml" : "<Class><Name>ViewRenderer<\/Name><USR>s:11TemplateKit12ViewRendererP<\/USR><Declaration>protocol ViewRenderer : AnyObject<\/Declaration><CommentParts><Abstract><Para>Renders an Encodable object into a <codeVoice>View<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.name" : "ViewRenderer",
        "key.doc.type" : "Class",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>ViewRenderer<\/decl.name> : AnyObject<\/decl.protocol>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 1534,
        "key.modulename" : "TemplateKit",
        "key.name" : "ViewRenderer",
        "key.namelength" : 12,
        "key.nameoffset" : 24,
        "key.offset" : 14,
        "key.parsed_declaration" : "extension ViewRenderer",
        "key.parsed_scope.end" : 41,
        "key.parsed_scope.start" : 3,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func render&lt;E&gt;(_ path: <Type usr=\"s:SS\">String<\/Type>, _ context: <Type usr=\"s:11TemplateKit12ViewRendererP5SugarE6render__8userInfo2on3NIO15EventLoopFutureCyAA0C0VGSS_qd__SDys11AnyHashableVypG5Vapor7RequestCtSERd__lF1EL_qd__mfp\">E<\/Type>, userInfo: [<Type usr=\"s:s11AnyHashableV\">AnyHashable<\/Type> : Any] = [:], on req: <Type usr=\"s:5Vapor7RequestC\">Request<\/Type>) -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:11TemplateKit4ViewV\">View<\/Type>&gt; where E : <Type usr=\"s:SE\">Encodable<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 587
              }
            ],
            "key.bodylength" : 137,
            "key.bodyoffset" : 766,
            "key.doc.column" : 17,
            "key.doc.comment" : "Renders the template bytes into a view using the supplied `Encodable` object as context and\nmakes the `Request` available to the tags by including it in the `userInfo` value.\n\n- Parameters:\n    - path: Path to file contianing raw template bytes.\n    - context: `Encodable` item that will be encoded to `TemplateData` and used as template\n        context.\n    - userInfo: User-defined storage.\n    - req: Request\n- Returns: `Future` containing the rendered `View`.",
            "key.doc.declaration" : "public func render<E>(_ path: String, _ context: E, userInfo: [AnyHashable : Any] = [:], on req: Request) -> Future<View> where E : Encodable",
            "key.doc.file" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Render+userInfo.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Render+userInfo.swift\" line=\"15\" column=\"17\"><Name>render(_:_:userInfo:on:)<\/Name><USR>s:11TemplateKit12ViewRendererP5SugarE6render__8userInfo2on3NIO15EventLoopFutureCyAA0C0VGSS_qd__SDys11AnyHashableVypG5Vapor7RequestCtSERd__lF<\/USR><Declaration>public func render&lt;E&gt;(_ path: String, _ context: E, userInfo: [AnyHashable : Any] = [:], on req: Request) -&gt; Future&lt;View&gt; where E : Encodable<\/Declaration><CommentParts><Abstract><Para>Renders the template bytes into a view using the supplied <codeVoice>Encodable<\/codeVoice> object as context and makes the <codeVoice>Request<\/codeVoice> available to the tags by including it in the <codeVoice>userInfo<\/codeVoice> value.<\/Para><\/Abstract><Parameters><Parameter><Name>path<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Path to file contianing raw template bytes.<\/Para><\/Discussion><\/Parameter><Parameter><Name>context<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para><codeVoice>Encodable<\/codeVoice> item that will be encoded to <codeVoice>TemplateData<\/codeVoice> and used as template context.<\/Para><\/Discussion><\/Parameter><Parameter><Name>userInfo<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>User-defined storage.<\/Para><\/Discussion><\/Parameter><Parameter><Name>req<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Request<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para><codeVoice>Future<\/codeVoice> containing the rendered <codeVoice>View<\/codeVoice>.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 15,
            "key.doc.name" : "render(_:_:userInfo:on:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Path to file contianing raw template bytes."
                  }
                ],
                "name" : "path"
              },
              {
                "discussion" : [
                  {
                    "Para" : "`Encodable` item that will be encoded to `TemplateData` and used as template context."
                  }
                ],
                "name" : "context"
              },
              {
                "discussion" : [
                  {
                    "Para" : "User-defined storage."
                  }
                ],
                "name" : "userInfo"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Request"
                  }
                ],
                "name" : "req"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "`Future` containing the rendered `View`."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 539,
            "key.docoffset" : 44,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Render+userInfo.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>render<\/decl.name>&lt;<decl.generic_type_param usr=\"s:11TemplateKit12ViewRendererP5SugarE6render__8userInfo2on3NIO15EventLoopFutureCyAA0C0VGSS_qd__SDys11AnyHashableVypG5Vapor7RequestCtSERd__lF1EL_qd__mfp\"><decl.generic_type_param.name>E<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>path<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>context<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:11TemplateKit12ViewRendererP5SugarE6render__8userInfo2on3NIO15EventLoopFutureCyAA0C0VGSS_qd__SDys11AnyHashableVypG5Vapor7RequestCtSERd__lF1EL_qd__mfp\">E<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>userInfo<\/decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:s11AnyHashableV\">AnyHashable<\/ref.struct> : Any]<\/decl.var.parameter.type> = [:]<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>on<\/decl.var.parameter.argument_label> <decl.var.parameter.name>req<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.struct usr=\"s:11TemplateKit4ViewV\">View<\/ref.struct>&gt;<\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>E : <ref.protocol usr=\"s:SE\">Encodable<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 310,
            "key.name" : "render(_:_:userInfo:on:)",
            "key.namelength" : 130,
            "key.nameoffset" : 599,
            "key.offset" : 594,
            "key.parsed_declaration" : "public func render<E>(\n    _ path: String,\n    _ context: E,\n    userInfo: [AnyHashable: Any] = [:],\n    on req: Request\n) -> Future<View> where E: Encodable",
            "key.parsed_scope.end" : 24,
            "key.parsed_scope.start" : 15,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11TemplateKit12ViewRendererP6render__8userInfo3NIO15EventLoopFutureCyAA0C0VGSS_qd__SDys11AnyHashableVypGtSERd__lF\">render(_:_:userInfo:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11TemplateKit12ViewRendererP5SugarE6render_8userInfo2on3NIO15EventLoopFutureCyAA0C0VGSS_SDys11AnyHashableVypG5Vapor7RequestCtF\">render(_:userInfo:on:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11TemplateKit12ViewRendererPAAE6rendery3NIO15EventLoopFutureCyAA0C0VGSS_qd__tSERd__lF\">render(_:_:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11TemplateKit12ViewRendererPAAE6render_8userInfo3NIO15EventLoopFutureCyAA0C0VGSS_SDys11AnyHashableVypGtF\">render(_:userInfo:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11TemplateKit12ViewRendererP5VaporE6rendery3NIO15EventLoopFutureCyAA0C0VGSSF\">render(_:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>E<\/Declaration>",
                "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Render+userInfo.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>E<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 1,
                "key.name" : "E",
                "key.namelength" : 1,
                "key.nameoffset" : 606,
                "key.offset" : 606,
                "key.parsed_declaration" : "public func render<E>(",
                "key.parsed_scope.end" : 15,
                "key.parsed_scope.start" : 15,
                "key.typename" : "E.Type",
                "key.typeusr" : "$sqd__mD",
                "key.usr" : "s:11TemplateKit12ViewRendererP5SugarE6render__8userInfo2on3NIO15EventLoopFutureCyAA0C0VGSS_qd__SDys11AnyHashableVypG5Vapor7RequestCtSERd__lF1EL_qd__mfp"
              },
              {
                "key.annotated_decl" : "<Declaration>var userInfo: [<Type usr=\"s:s11AnyHashableV\">AnyHashable<\/Type> : Any]<\/Declaration>",
                "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Render+userInfo.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>userInfo<\/decl.name>: <decl.var.type>[<ref.struct usr=\"s:s11AnyHashableV\">AnyHashable<\/ref.struct> : Any]<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 23,
                "key.name" : "userInfo",
                "key.namelength" : 8,
                "key.nameoffset" : 779,
                "key.offset" : 775,
                "key.parsed_declaration" : "var userInfo = userInfo",
                "key.parsed_scope.end" : 21,
                "key.parsed_scope.start" : 21,
                "key.typename" : "[AnyHashable : Any]",
                "key.typeusr" : "$sSDys11AnyHashableVypGD",
                "key.usr" : "s:11TemplateKit12ViewRendererP5SugarE6render__8userInfo2on3NIO15EventLoopFutureCyAA0C0VGSS_qd__SDys11AnyHashableVypG5Vapor7RequestCtSERd__lFAFL0_APvp"
              }
            ],
            "key.typename" : "<Self, E where Self : ViewRenderer, E : Encodable> (Self) -> (String, E, [AnyHashable : Any], Request) -> EventLoopFuture<View>",
            "key.typeusr" : "$s__8userInfo2on3NIO15EventLoopFutureCy11TemplateKit4ViewVGSS_qd__SDys11AnyHashableVypG5Vapor7RequestCtcSERd__luD",
            "key.usr" : "s:11TemplateKit12ViewRendererP5SugarE6render__8userInfo2on3NIO15EventLoopFutureCyAA0C0VGSS_qd__SDys11AnyHashableVypG5Vapor7RequestCtSERd__lF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func render(_ path: <Type usr=\"s:SS\">String<\/Type>, userInfo: [<Type usr=\"s:s11AnyHashableV\">AnyHashable<\/Type> : Any] = [:], on req: <Type usr=\"s:5Vapor7RequestC\">Request<\/Type>) -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:11TemplateKit4ViewV\">View<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1328
              }
            ],
            "key.bodylength" : 82,
            "key.bodyoffset" : 1463,
            "key.doc.column" : 17,
            "key.doc.comment" : "Renders the template bytes into a view using the supplied `Encodable` object as context and\nmakes the `Request` available to the tags by including it in the `userInfo` value.\n\n- Parameters:\n    - path: Path to file contianing raw template bytes.\n    - userInfo: User-defined storage.\n    - req: Request\n- Returns: `Future` containing the rendered `View`.",
            "key.doc.declaration" : "public func render(_ path: String, userInfo: [AnyHashable : Any] = [:], on req: Request) -> Future<View>",
            "key.doc.file" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Render+userInfo.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Render+userInfo.swift\" line=\"34\" column=\"17\"><Name>render(_:userInfo:on:)<\/Name><USR>s:11TemplateKit12ViewRendererP5SugarE6render_8userInfo2on3NIO15EventLoopFutureCyAA0C0VGSS_SDys11AnyHashableVypG5Vapor7RequestCtF<\/USR><Declaration>public func render(_ path: String, userInfo: [AnyHashable : Any] = [:], on req: Request) -&gt; Future&lt;View&gt;<\/Declaration><CommentParts><Abstract><Para>Renders the template bytes into a view using the supplied <codeVoice>Encodable<\/codeVoice> object as context and makes the <codeVoice>Request<\/codeVoice> available to the tags by including it in the <codeVoice>userInfo<\/codeVoice> value.<\/Para><\/Abstract><Parameters><Parameter><Name>path<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Path to file contianing raw template bytes.<\/Para><\/Discussion><\/Parameter><Parameter><Name>userInfo<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>User-defined storage.<\/Para><\/Discussion><\/Parameter><Parameter><Name>req<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Request<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para><codeVoice>Future<\/codeVoice> containing the rendered <codeVoice>View<\/codeVoice>.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 34,
            "key.doc.name" : "render(_:userInfo:on:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Path to file contianing raw template bytes."
                  }
                ],
                "name" : "path"
              },
              {
                "discussion" : [
                  {
                    "Para" : "User-defined storage."
                  }
                ],
                "name" : "userInfo"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Request"
                  }
                ],
                "name" : "req"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "`Future` containing the rendered `View`."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 414,
            "key.docoffset" : 910,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Render+userInfo.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>render<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>path<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>userInfo<\/decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:s11AnyHashableV\">AnyHashable<\/ref.struct> : Any]<\/decl.var.parameter.type> = [:]<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>on<\/decl.var.parameter.argument_label> <decl.var.parameter.name>req<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.struct usr=\"s:11TemplateKit4ViewV\">View<\/ref.struct>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 211,
            "key.name" : "render(_:userInfo:on:)",
            "key.namelength" : 105,
            "key.nameoffset" : 1340,
            "key.offset" : 1335,
            "key.parsed_declaration" : "public func render(\n    _ path: String,\n    userInfo: [AnyHashable: Any] = [:],\n    on req: Request\n) -> Future<View>",
            "key.parsed_scope.end" : 40,
            "key.parsed_scope.start" : 34,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11TemplateKit12ViewRendererP6render__8userInfo3NIO15EventLoopFutureCyAA0C0VGSS_qd__SDys11AnyHashableVypGtSERd__lF\">render(_:_:userInfo:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11TemplateKit12ViewRendererP5SugarE6render__8userInfo2on3NIO15EventLoopFutureCyAA0C0VGSS_qd__SDys11AnyHashableVypG5Vapor7RequestCtSERd__lF\">render(_:_:userInfo:on:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11TemplateKit12ViewRendererPAAE6rendery3NIO15EventLoopFutureCyAA0C0VGSS_qd__tSERd__lF\">render(_:_:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11TemplateKit12ViewRendererPAAE6render_8userInfo3NIO15EventLoopFutureCyAA0C0VGSS_SDys11AnyHashableVypGtF\">render(_:userInfo:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11TemplateKit12ViewRendererP5VaporE6rendery3NIO15EventLoopFutureCyAA0C0VGSSF\">render(_:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : ViewRenderer> (Self) -> (String, [AnyHashable : Any], Request) -> EventLoopFuture<View>",
            "key.typeusr" : "$s_8userInfo2on3NIO15EventLoopFutureCy11TemplateKit4ViewVGSS_SDys11AnyHashableVypG5Vapor7RequestCtcD",
            "key.usr" : "s:11TemplateKit12ViewRendererP5SugarE6render_8userInfo2on3NIO15EventLoopFutureCyAA0C0VGSS_SDys11AnyHashableVypG5Vapor7RequestCtF"
          }
        ],
        "key.typename" : "ViewRenderer.Protocol",
        "key.typeusr" : "$s11TemplateKit12ViewRenderer_pmD",
        "key.usr" : "s:11TemplateKit12ViewRendererP"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.annotated_decl" : "<Declaration>final class TagContext : <Type usr=\"s:5Async11BasicWorkerP\">BasicWorker<\/Type><\/Declaration>",
        "key.bodylength" : 691,
        "key.bodyoffset" : 1572,
        "key.doc.declaration" : "final class TagContext : BasicWorker",
        "key.doc.full_as_xml" : "<Class><Name>TagContext<\/Name><USR>s:11TemplateKit10TagContextC<\/USR><Declaration>final class TagContext : BasicWorker<\/Declaration><CommentParts><Abstract><Para>Contains contextual information corresponding to a <codeVoice>TemplateTag<\/codeVoice> in the AST. This information will be passed to the <codeVoice>TagRenderer<\/codeVoice> for the identified tag.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.name" : "TagContext",
        "key.doc.type" : "Class",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>final<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>TagContext<\/decl.name> : <ref.protocol usr=\"s:5Async11BasicWorkerP\">BasicWorker<\/ref.protocol><\/decl.class>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 714,
        "key.modulename" : "TemplateKit",
        "key.name" : "TagContext",
        "key.namelength" : 10,
        "key.nameoffset" : 1560,
        "key.offset" : 1550,
        "key.parsed_declaration" : "extension TagContext",
        "key.parsed_scope.end" : 65,
        "key.parsed_scope.start" : 43,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var request: <Type usr=\"s:5Vapor7RequestC\">Request<\/Type>? { get set }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1656
              }
            ],
            "key.bodylength" : 181,
            "key.bodyoffset" : 1686,
            "key.doc.column" : 16,
            "key.doc.comment" : "Provides access to the `Request` stored in the `userInfo` dictionary.",
            "key.doc.declaration" : "public var request: Request? { get set }",
            "key.doc.file" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Render+userInfo.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Render+userInfo.swift\" line=\"46\" column=\"16\"><Name>request<\/Name><USR>s:11TemplateKit10TagContextC5SugarE7request5Vapor7RequestCSgvp<\/USR><Declaration>public var request: Request? { get set }<\/Declaration><CommentParts><Abstract><Para>Provides access to the <codeVoice>Request<\/codeVoice> stored in the <codeVoice>userInfo<\/codeVoice> dictionary.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 46,
            "key.doc.name" : "request",
            "key.doc.type" : "Other",
            "key.doclength" : 74,
            "key.docoffset" : 1578,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Render+userInfo.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>request<\/decl.name>: <decl.var.type><ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class>?<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> <syntaxtype.keyword>set<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 205,
            "key.name" : "request",
            "key.namelength" : 7,
            "key.nameoffset" : 1667,
            "key.offset" : 1663,
            "key.parsed_declaration" : "public var request: Request?",
            "key.parsed_scope.end" : 53,
            "key.parsed_scope.start" : 46,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "Request?",
            "key.typeusr" : "$s5Vapor7RequestCSgD",
            "key.usr" : "s:11TemplateKit10TagContextC5SugarE7request5Vapor7RequestCSgvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func requireRequest() throws -&gt; <Type usr=\"s:5Vapor7RequestC\">Request<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2071
              }
            ],
            "key.bodylength" : 142,
            "key.bodyoffset" : 2119,
            "key.doc.column" : 17,
            "key.doc.comment" : "Returns the `Request` stored in the `userInfo` dictionary or throws an error.\n\n- Returns: the stored `Request`.\n- Throws: TagContextError.requestNotPassedIntoRender.",
            "key.doc.declaration" : "public func requireRequest() throws -> Request",
            "key.doc.file" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Render+userInfo.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Render+userInfo.swift\" line=\"59\" column=\"17\"><Name>requireRequest()<\/Name><USR>s:11TemplateKit10TagContextC5SugarE14requireRequest5Vapor0G0CyKF<\/USR><Declaration>public func requireRequest() throws -&gt; Request<\/Declaration><CommentParts><Abstract><Para>Returns the <codeVoice>Request<\/codeVoice> stored in the <codeVoice>userInfo<\/codeVoice> dictionary or throws an error.<\/Para><\/Abstract><ResultDiscussion><Para>the stored <codeVoice>Request<\/codeVoice>.<\/Para><\/ResultDiscussion><ThrowsDiscussion><Para>TagContextError.requestNotPassedIntoRender.<\/Para><\/ThrowsDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 59,
            "key.doc.name" : "requireRequest()",
            "key.doc.result_discussion" : [
              {
                "Para" : "the stored `Request`."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 193,
            "key.docoffset" : 1874,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Render+userInfo.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>requireRequest<\/decl.name>() <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 184,
            "key.name" : "requireRequest()",
            "key.namelength" : 16,
            "key.nameoffset" : 2083,
            "key.offset" : 2078,
            "key.parsed_declaration" : "public func requireRequest() throws -> Request",
            "key.parsed_scope.end" : 64,
            "key.parsed_scope.start" : 59,
            "key.substructure" : [

            ],
            "key.typename" : "(TagContext) -> () throws -> Request",
            "key.typeusr" : "$s5Vapor7RequestCyKcD",
            "key.usr" : "s:11TemplateKit10TagContextC5SugarE14requireRequest5Vapor0G0CyKF"
          }
        ],
        "key.typename" : "TagContext.Type",
        "key.typeusr" : "$s11TemplateKit10TagContextCmD",
        "key.usr" : "s:11TemplateKit10TagContextC"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private let requestUserInfoKey: <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 2266
          }
        ],
        "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Render+userInfo.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>requestUserInfoKey<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type><\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 41,
        "key.name" : "requestUserInfoKey",
        "key.namelength" : 18,
        "key.nameoffset" : 2278,
        "key.offset" : 2274,
        "key.parsed_declaration" : "private let requestUserInfoKey = \"_sugar:request\"",
        "key.parsed_scope.end" : 67,
        "key.parsed_scope.start" : 67,
        "key.typename" : "String",
        "key.typeusr" : "$sSSD",
        "key.usr" : "s:5Sugar18requestUserInfoKey33_CB071D3C89AFED26F535DB031EEF4913LLSSvp"
      },
      {
        "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
        "key.length" : 13,
        "key.name" : "MARK: - Error",
        "key.namelength" : 0,
        "key.nameoffset" : 0,
        "key.offset" : 2320
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.annotated_decl" : "<Declaration>enum TagContextError : <Type usr=\"s:s5ErrorP\">Error<\/Type><\/Declaration>",
        "key.bodylength" : 37,
        "key.bodyoffset" : 2364,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 5,
            "key.offset" : 2357
          }
        ],
        "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Render+userInfo.swift",
        "key.fully_annotated_decl" : "<decl.enum><syntaxtype.keyword>enum<\/syntaxtype.keyword> <decl.name>TagContextError<\/decl.name> : <ref.protocol usr=\"s:s5ErrorP\">Error<\/ref.protocol><\/decl.enum>",
        "key.inheritedtypes" : [
          {
            "key.name" : "Error"
          }
        ],
        "key.kind" : "source.lang.swift.decl.enum",
        "key.length" : 67,
        "key.name" : "TagContextError",
        "key.namelength" : 15,
        "key.nameoffset" : 2340,
        "key.offset" : 2335,
        "key.parsed_declaration" : "enum TagContextError: Error",
        "key.parsed_scope.end" : 73,
        "key.parsed_scope.start" : 71,
        "key.substructure" : [
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.length" : 31,
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 2369,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>case requestNotPassedIntoRender<\/Declaration>",
                "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Render+userInfo.swift",
                "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>requestNotPassedIntoRender<\/decl.name><\/decl.enumelement>",
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.length" : 26,
                "key.name" : "requestNotPassedIntoRender",
                "key.namelength" : 26,
                "key.nameoffset" : 2374,
                "key.offset" : 2374,
                "key.parsed_declaration" : "case requestNotPassedIntoRender",
                "key.parsed_scope.end" : 72,
                "key.parsed_scope.start" : 72,
                "key.typename" : "(TagContextError.Type) -> TagContextError",
                "key.typeusr" : "$sy5Sugar15TagContextErrorOACmcD",
                "key.usr" : "s:5Sugar15TagContextErrorO26requestNotPassedIntoRenderyA2CmF"
              }
            ]
          }
        ],
        "key.typename" : "TagContextError.Type",
        "key.typeusr" : "$s5Sugar15TagContextErrorOmD",
        "key.usr" : "s:5Sugar15TagContextErrorO"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.annotated_decl" : "<Declaration>enum TagContextError : <Type usr=\"s:s5ErrorP\">Error<\/Type><\/Declaration>",
        "key.bodylength" : 378,
        "key.bodyoffset" : 2443,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 10,
            "key.offset" : 2431
          }
        ],
        "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Render+userInfo.swift",
        "key.fully_annotated_decl" : "<decl.enum><syntaxtype.keyword>enum<\/syntaxtype.keyword> <decl.name>TagContextError<\/decl.name> : <ref.protocol usr=\"s:s5ErrorP\">Error<\/ref.protocol><\/decl.enum>",
        "key.inheritedtypes" : [
          {
            "key.name" : "AbortError"
          }
        ],
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 418,
        "key.name" : "TagContextError",
        "key.namelength" : 15,
        "key.nameoffset" : 2414,
        "key.offset" : 2404,
        "key.parsed_declaration" : "extension TagContextError: AbortError",
        "key.parsed_scope.end" : 91,
        "key.parsed_scope.start" : 75,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>var identifier: <Type usr=\"s:SS\">String<\/Type> { get }<\/Declaration>",
            "key.bodylength" : 115,
            "key.bodyoffset" : 2472,
            "key.doc.declaration" : "var identifier: String { get }",
            "key.doc.full_as_xml" : "<Other><Name>identifier<\/Name><USR>s:9Debugging10DebuggableP10identifierSSvp<\/USR><Declaration>var identifier: String { get }<\/Declaration><CommentParts><Abstract><Para>Some unique identifier for this specific error. This will be used to create the <codeVoice>identifier<\/codeVoice> property. Do NOT use <codeVoice>String(reflecting: self)<\/codeVoice> or <codeVoice>String(describing: self)<\/codeVoice> or there will be infinite recursion<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.name" : "identifier",
            "key.doc.type" : "Other",
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Render+userInfo.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>identifier<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 140,
            "key.name" : "identifier",
            "key.namelength" : 10,
            "key.nameoffset" : 2452,
            "key.offset" : 2448,
            "key.overrides" : [
              {
                "key.usr" : "s:9Debugging10DebuggableP10identifierSSvp"
              }
            ],
            "key.parsed_declaration" : "var identifier: String",
            "key.parsed_scope.end" : 80,
            "key.parsed_scope.start" : 76,
            "key.typename" : "String",
            "key.typeusr" : "$sSSD",
            "key.usr" : "s:9Debugging10DebuggableP10identifierSSvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>var reason: <Type usr=\"s:SS\">String<\/Type> { get }<\/Declaration>",
            "key.bodylength" : 125,
            "key.bodyoffset" : 2614,
            "key.doc.declaration" : "override var reason: String { get }",
            "key.doc.full_as_xml" : "<Other><Name>reason<\/Name><USR>s:5Vapor10AbortErrorP6reasonSSvp<\/USR><Declaration>override var reason: String { get }<\/Declaration><CommentParts><Abstract><Para>The human-readable (and hopefully understandable) reason for this error.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.name" : "reason",
            "key.doc.type" : "Other",
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Render+userInfo.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>reason<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 146,
            "key.name" : "reason",
            "key.namelength" : 6,
            "key.nameoffset" : 2598,
            "key.offset" : 2594,
            "key.overrides" : [
              {
                "key.usr" : "s:5Vapor10AbortErrorP6reasonSSvp"
              },
              {
                "key.usr" : "s:9Debugging10DebuggableP6reasonSSvp"
              }
            ],
            "key.parsed_declaration" : "var reason: String",
            "key.parsed_scope.end" : 86,
            "key.parsed_scope.start" : 82,
            "key.typename" : "String",
            "key.typeusr" : "$sSSD",
            "key.usr" : "s:5Vapor10AbortErrorP6reasonSSvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>var status: <Type usr=\"s:8NIOHTTP118HTTPResponseStatusO\">HTTPResponseStatus<\/Type> { get }<\/Declaration>",
            "key.bodylength" : 41,
            "key.bodyoffset" : 2778,
            "key.doc.declaration" : "var status: NIOHTTP1.HTTPResponseStatus { get }",
            "key.doc.full_as_xml" : "<Other><Name>status<\/Name><USR>s:5Vapor10AbortErrorP6status8NIOHTTP118HTTPResponseStatusOvp<\/USR><Declaration>var status: NIOHTTP1.HTTPResponseStatus { get }<\/Declaration><CommentParts><Abstract><Para>The HTTP status code this error will return.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.name" : "status",
            "key.doc.type" : "Other",
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Render+userInfo.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>status<\/decl.name>: <decl.var.type><ref.enum usr=\"s:8NIOHTTP118HTTPResponseStatusO\">HTTPResponseStatus<\/ref.enum><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 74,
            "key.name" : "status",
            "key.namelength" : 6,
            "key.nameoffset" : 2750,
            "key.offset" : 2746,
            "key.overrides" : [
              {
                "key.usr" : "s:5Vapor10AbortErrorP6status8NIOHTTP118HTTPResponseStatusOvp"
              }
            ],
            "key.parsed_declaration" : "var status: HTTPResponseStatus",
            "key.parsed_scope.end" : 90,
            "key.parsed_scope.start" : 88,
            "key.typename" : "HTTPResponseStatus",
            "key.typeusr" : "$s8NIOHTTP118HTTPResponseStatusOD",
            "key.usr" : "s:5Vapor10AbortErrorP6status8NIOHTTP118HTTPResponseStatusOvp"
          }
        ],
        "key.typename" : "TagContextError.Type",
        "key.typeusr" : "$s5Sugar15TagContextErrorOmD",
        "key.usr" : "s:5Sugar15TagContextErrorO"
      }
    ]
  }
}, {
  "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/SecondsConverter.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 558,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>protocol Numeric : <Type usr=\"s:s18AdditiveArithmeticP\">AdditiveArithmetic<\/Type>, <Type usr=\"s:s27ExpressibleByIntegerLiteralP\">ExpressibleByIntegerLiteral<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 259
          }
        ],
        "key.bodylength" : 271,
        "key.bodyoffset" : 285,
        "key.doc.declaration" : "protocol Numeric : AdditiveArithmetic, ExpressibleByIntegerLiteral",
        "key.doc.discussion" : [
          {
            "Para" : "The `Numeric` protocol provides a suitable basis for arithmetic on scalar values, such as integers and floating-point numbers. You can write generic methods that operate on any numeric type in the standard library by using the `Numeric` protocol as a generic constraint."
          },
          {
            "Para" : "The following example extends `Sequence` with a method that returns an array with the sequence’s values multiplied by two."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "With this extension, any sequence with elements that conform to `Numeric` has the `doublingAll()` method. For example, you can double the elements of an array of doubles or a range of integers:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "To add `Numeric` protocol conformance to your own custom type, implement the required initializer and operators, and provide a `magnitude` property using a type that can represent the magnitude of any value of your custom type."
          }
        ],
        "key.doc.full_as_xml" : "<Class><Name>Numeric<\/Name><USR>s:Sj<\/USR><Declaration>protocol Numeric : AdditiveArithmetic, ExpressibleByIntegerLiteral<\/Declaration><CommentParts><Abstract><Para>A type with values that support multiplication.<\/Para><\/Abstract><Discussion><Para>The <codeVoice>Numeric<\/codeVoice> protocol provides a suitable basis for arithmetic on scalar values, such as integers and floating-point numbers. You can write generic methods that operate on any numeric type in the standard library by using the <codeVoice>Numeric<\/codeVoice> protocol as a generic constraint.<\/Para><Para>The following example extends <codeVoice>Sequence<\/codeVoice> with a method that returns an array with the sequence’s values multiplied by two.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[extension Sequence where Element: Numeric {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    func doublingAll() -> [Element] {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        return map { $0 * 2 }]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    }]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>With this extension, any sequence with elements that conform to <codeVoice>Numeric<\/codeVoice> has the <codeVoice>doublingAll()<\/codeVoice> method. For example, you can double the elements of an array of doubles or a range of integers:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let observations = [1.5, 2.0, 3.25, 4.875, 5.5]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let doubledObservations = observations.doublingAll()]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ doubledObservations == [3.0, 4.0, 6.5, 9.75, 11.0]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let integers = 0..<8]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let doubledIntegers = integers.doublingAll()]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ doubledIntegers == [0, 2, 4, 6, 8, 10, 12, 14]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h1>]]><\/rawHTML>Conforming to the Numeric Protocol<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>To add <codeVoice>Numeric<\/codeVoice> protocol conformance to your own custom type, implement the required initializer and operators, and provide a <codeVoice>magnitude<\/codeVoice> property using a type that can represent the magnitude of any value of your custom type.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.name" : "Numeric",
        "key.doc.type" : "Class",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>Numeric<\/decl.name> : <ref.protocol usr=\"s:s18AdditiveArithmeticP\">AdditiveArithmetic<\/ref.protocol>, <ref.protocol usr=\"s:s27ExpressibleByIntegerLiteralP\">ExpressibleByIntegerLiteral<\/ref.protocol><\/decl.protocol>",
        "key.groupname" : "Math\/Integers",
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 291,
        "key.modulename" : "Swift",
        "key.name" : "Numeric",
        "key.namelength" : 7,
        "key.nameoffset" : 276,
        "key.offset" : 266,
        "key.parsed_declaration" : "public extension Numeric",
        "key.parsed_scope.end" : 20,
        "key.parsed_scope.start" : 4,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>var minsInSecs: <Type usr=\"s:Sj5SugarE4Selfxmfp\">Self<\/Type> { get }<\/Declaration>",
            "key.bodylength" : 30,
            "key.bodyoffset" : 312,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/SecondsConverter.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>minsInSecs<\/decl.name>: <decl.var.type><ref.generic_type_param usr=\"s:Sj5SugarE4Selfxmfp\">Self<\/ref.generic_type_param><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.groupname" : "Math\/Integers",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 53,
            "key.name" : "minsInSecs",
            "key.namelength" : 10,
            "key.nameoffset" : 294,
            "key.offset" : 290,
            "key.parsed_declaration" : "var minsInSecs: Self",
            "key.parsed_scope.end" : 7,
            "key.parsed_scope.start" : 5,
            "key.typename" : "Self",
            "key.typeusr" : "$sxD",
            "key.usr" : "s:Sj5SugarE10minsInSecsxvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>var hoursInSecs: <Type usr=\"s:Sj5SugarE4Selfxmfp\">Self<\/Type> { get }<\/Declaration>",
            "key.bodylength" : 41,
            "key.bodyoffset" : 372,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/SecondsConverter.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>hoursInSecs<\/decl.name>: <decl.var.type><ref.generic_type_param usr=\"s:Sj5SugarE4Selfxmfp\">Self<\/ref.generic_type_param><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.groupname" : "Math\/Integers",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 65,
            "key.name" : "hoursInSecs",
            "key.namelength" : 11,
            "key.nameoffset" : 353,
            "key.offset" : 349,
            "key.parsed_declaration" : "var hoursInSecs: Self",
            "key.parsed_scope.end" : 11,
            "key.parsed_scope.start" : 9,
            "key.typename" : "Self",
            "key.typeusr" : "$sxD",
            "key.usr" : "s:Sj5SugarE11hoursInSecsxvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>var daysInSecs: <Type usr=\"s:Sj5SugarE4Selfxmfp\">Self<\/Type> { get }<\/Declaration>",
            "key.bodylength" : 42,
            "key.bodyoffset" : 442,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/SecondsConverter.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>daysInSecs<\/decl.name>: <decl.var.type><ref.generic_type_param usr=\"s:Sj5SugarE4Selfxmfp\">Self<\/ref.generic_type_param><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.groupname" : "Math\/Integers",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 65,
            "key.name" : "daysInSecs",
            "key.namelength" : 10,
            "key.nameoffset" : 424,
            "key.offset" : 420,
            "key.parsed_declaration" : "var daysInSecs: Self",
            "key.parsed_scope.end" : 15,
            "key.parsed_scope.start" : 13,
            "key.typename" : "Self",
            "key.typeusr" : "$sxD",
            "key.usr" : "s:Sj5SugarE10daysInSecsxvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>var weeksInSecs: <Type usr=\"s:Sj5SugarE4Selfxmfp\">Self<\/Type> { get }<\/Declaration>",
            "key.bodylength" : 40,
            "key.bodyoffset" : 514,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/SecondsConverter.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>weeksInSecs<\/decl.name>: <decl.var.type><ref.generic_type_param usr=\"s:Sj5SugarE4Selfxmfp\">Self<\/ref.generic_type_param><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.groupname" : "Math\/Integers",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 64,
            "key.name" : "weeksInSecs",
            "key.namelength" : 11,
            "key.nameoffset" : 495,
            "key.offset" : 491,
            "key.parsed_declaration" : "var weeksInSecs: Self",
            "key.parsed_scope.end" : 19,
            "key.parsed_scope.start" : 17,
            "key.typename" : "Self",
            "key.typeusr" : "$sxD",
            "key.usr" : "s:Sj5SugarE11weeksInSecsxvp"
          }
        ],
        "key.typename" : "Numeric.Protocol",
        "key.typeusr" : "$sSj_pmD",
        "key.usr" : "s:Sj"
      }
    ]
  }
}, {
  "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/String.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 1479,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>struct String<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 39
          }
        ],
        "key.bodylength" : 896,
        "key.bodyoffset" : 64,
        "key.doc.declaration" : "struct String",
        "key.doc.discussion" : [
          {
            "Para" : "A string is a series of characters, such as `\"Swift\"`, that forms a collection. Strings in Swift are Unicode correct and locale insensitive, and are designed to be efficient. The `String` type bridges with the Objective-C class `NSString` and offers interoperability with C functions that works with strings."
          },
          {
            "Para" : "You can create new strings using string literals or string interpolations. A  is a series of characters enclosed in quotes."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : " are string literals that evaluate any included expressions and convert the results to string form. String interpolations give you an easy way to build a string from multiple pieces. Wrap each expression in a string interpolation in parentheses, prefixed by a backslash."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Combine strings using the concatenation operator (`+`)."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Multiline string literals are enclosed in three double quotation marks (`\"\"\"`), with each delimiter on its own line. Indentation is stripped from each line of a multiline string literal to match the indentation of the closing delimiter."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Strings always have value semantics. Modifying a copy of a string leaves the original unaffected."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Comparing strings for equality using the equal-to operator (`==`) or a relational operator (like `<` or `>=`) is always performed using Unicode canonical representation. As a result, different representations of a string compare as being equal."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "The Unicode scalar value `\"\\u{301}\"` modifies the preceding character to include an accent, so `\"e\\u{301}\"` has the same canonical representation as the single Unicode scalar value `\"é\"`."
          },
          {
            "Para" : "Basic string operations are not sensitive to locale settings, ensuring that string comparisons and other operations always have a single, stable result, allowing strings to be used as keys in `Dictionary` instances and for other purposes."
          },
          {
            "Para" : "A string is a collection of , which approximate human-readable characters. Many individual characters, such as “é”, “김”, and “🇮🇳”, can be made up of multiple Unicode scalar values. These scalar values are combined by Unicode’s boundary algorithms into extended grapheme clusters, represented by the Swift `Character` type. Each element of a string is represented by a `Character` instance."
          },
          {
            "Para" : "For example, to retrieve the first word of a longer string, you can search for a space and then create a substring from a prefix of the string up to that point:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "The `firstName` constant is an instance of the `Substring` type—a type that represents substrings of a string while sharing the original string’s storage. Substrings present the same interface as strings."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "If you need to access the contents of a string as encoded in different Unicode encodings, use one of the string’s `unicodeScalars`, `utf16`, or `utf8` properties. Each property provides access to a view of the string as a series of code units, each encoded in a different Unicode encoding."
          },
          {
            "Para" : "To demonstrate the different views available for every string, the following examples use this `String` instance:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "The `cafe` string is a collection of the nine characters that are visible when the string is displayed."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "A string’s `unicodeScalars` property is a collection of Unicode scalar values, the 21-bit codes that are the basic unit of Unicode. Each scalar value is represented by a `Unicode.Scalar` instance and is equivalent to a UTF-32 code unit."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "The `unicodeScalars` view’s elements comprise each Unicode scalar value in the `cafe` string. In particular, because `cafe` was declared using the decomposed form of the `\"é\"` character, `unicodeScalars` contains the scalar values for both the letter `\"e\"` (101) and the accent character `\"´\"` (769)."
          },
          {
            "Para" : "A string’s `utf16` property is a collection of UTF-16 code units, the 16-bit encoding form of the string’s Unicode scalar values. Each code unit is stored as a `UInt16` instance."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "The elements of the `utf16` view are the code units for the string when encoded in UTF-16. These elements match those accessed through indexed `NSString` APIs."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "A string’s `utf8` property is a collection of UTF-8 code units, the 8-bit encoding form of the string’s Unicode scalar values. Each code unit is stored as a `UInt8` instance."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "The elements of the `utf8` view are the code units for the string when encoded in UTF-8. This representation matches the one used when `String` instances are passed to C APIs."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "When you need to know the length of a string, you must first consider what you’ll use the length for. Are you measuring the number of characters that will be displayed on the screen, or are you measuring the amount of storage needed for the string in a particular encoding? A single string can have greatly differing lengths when measured by its different views."
          },
          {
            "Para" : "For example, an ASCII character like the capital letter  is represented by a single element in each of its four views. The Unicode scalar value of  is `65`, which is small enough to fit in a single code unit in both UTF-16 and UTF-8."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "On the other hand, an emoji flag character is constructed from a pair of Unicode scalar values, like `\"\\u{1F1F5}\"` and `\"\\u{1F1F7}\"`. Each of these scalar values, in turn, is too large to fit into a single UTF-16 or UTF-8 code unit. As a result, each view of the string `\"🇵🇷\"` reports a different length."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "To check whether a string is empty, use its `isEmpty` property instead of comparing the length of one of the views to `0`. Unlike with `isEmpty`, calculating a view’s `count` property requires iterating through the elements of the string."
          },
          {
            "Para" : "To find individual elements of a string, use the appropriate view for your task. For example, to retrieve the first word of a longer string, you can search the string for a space and then create a new string from a prefix of the string up to that point."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Strings and their views share indices, so you can access the UTF-8 view of the `name` string using the same `firstSpace` index."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Note that an index into one view may not have an exact corresponding position in another view. For example, the `flag` string declared above comprises a single character, but is composed of eight code units when encoded as UTF-8. The following code creates constants for the first and second positions in the `flag.utf8` view. Accessing the `utf8` view with these indices yields the first and second code UTF-8 units."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "When used to access the elements of the `flag` string itself, however, the `secondCodeUnit` index does not correspond to the position of a specific character. Instead of only accessing the specific UTF-8 code unit, that index is treated as the position of the character at the index’s encoded offset. In the case of `secondCodeUnit`, that character is still the flag itself."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "If you need to validate that an index from one string’s view corresponds with an exact position in another view, use the index’s `samePosition(in:)` method or the `init(_:within:)` initializer."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Although strings in Swift have value semantics, strings use a copy-on-write strategy to store their data in a buffer. This buffer can then be shared by different copies of a string. A string’s data is only copied lazily, upon mutation, when more than one string instance is using the same buffer. Therefore, the first in any sequence of mutating operations may cost O() time and space."
          },
          {
            "Para" : "When a string’s contiguous storage fills up, a new buffer must be allocated and data must be moved to the new storage. String buffers use an exponential growth strategy that makes appending to a string a constant time operation when averaged over many append operations."
          },
          {
            "Para" : "Any `String` instance can be bridged to `NSString` using the type-cast operator (`as`), and any `String` instance that originates in Objective-C may use an `NSString` instance as its storage. Because any arbitrary subclass of `NSString` can become a `String` instance, there are no guarantees about representation or efficiency when a `String` instance is backed by `NSString` storage. Because `NSString` is immutable, it is just as though the storage was shared by a copy. The first in any sequence of mutating operations causes elements to be copied into unique, contiguous storage which may cost O() time and space, where  is the length of the string’s encoded representation (or more, if the underlying `NSString` has unusual performance characteristics)."
          },
          {
            "Para" : "For more information about the Unicode terms used in this discussion, see the . In particular, this discussion mentions , , and ."
          }
        ],
        "key.doc.full_as_xml" : "<Class><Name>String<\/Name><USR>s:SS<\/USR><Declaration>struct String<\/Declaration><CommentParts><Abstract><Para>A Unicode string value that is a collection of characters.<\/Para><\/Abstract><Discussion><Para>A string is a series of characters, such as <codeVoice>&quot;Swift&quot;<\/codeVoice>, that forms a collection. Strings in Swift are Unicode correct and locale insensitive, and are designed to be efficient. The <codeVoice>String<\/codeVoice> type bridges with the Objective-C class <codeVoice>NSString<\/codeVoice> and offers interoperability with C functions that works with strings.<\/Para><Para>You can create new strings using string literals or string interpolations. A <emphasis>string literal<\/emphasis> is a series of characters enclosed in quotes.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let greeting = \"Welcome!\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para><emphasis>String interpolations<\/emphasis> are string literals that evaluate any included expressions and convert the results to string form. String interpolations give you an easy way to build a string from multiple pieces. Wrap each expression in a string interpolation in parentheses, prefixed by a backslash.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let name = \"Rosa\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let personalizedGreeting = \"Welcome, \\(name)!\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ personalizedGreeting == \"Welcome, Rosa!\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let price = 2]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let number = 3]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let cookiePrice = \"\\(number) cookies: $\\(price * number).\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ cookiePrice == \"3 cookies: $6.\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Combine strings using the concatenation operator (<codeVoice>+<\/codeVoice>).<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let longerGreeting = greeting + \" We're glad you're here!\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ longerGreeting == \"Welcome! We're glad you're here!\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Multiline string literals are enclosed in three double quotation marks (<codeVoice>&quot;&quot;&quot;<\/codeVoice>), with each delimiter on its own line. Indentation is stripped from each line of a multiline string literal to match the indentation of the closing delimiter.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let banner = \"\"\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[          __,]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[         (           o  \/) _\/_]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[          `.  , , , ,  \/\/  \/]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        (___)(_(_\/_(_ \/\/_ (__]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[                     \/)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[                    (\/]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        \"\"\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h1>]]><\/rawHTML>Modifying and Comparing Strings<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>Strings always have value semantics. Modifying a copy of a string leaves the original unaffected.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var otherGreeting = greeting]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[otherGreeting += \" Have a nice time!\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ otherGreeting == \"Welcome! Have a nice time!\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(greeting)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"Welcome!\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Comparing strings for equality using the equal-to operator (<codeVoice>==<\/codeVoice>) or a relational operator (like <codeVoice>&lt;<\/codeVoice> or <codeVoice>&gt;=<\/codeVoice>) is always performed using Unicode canonical representation. As a result, different representations of a string compare as being equal.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let cafe1 = \"Cafe\\u{301}\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let cafe2 = \"Café\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(cafe1 == cafe2)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"true\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The Unicode scalar value <codeVoice>&quot;\\u{301}&quot;<\/codeVoice> modifies the preceding character to include an accent, so <codeVoice>&quot;e\\u{301}&quot;<\/codeVoice> has the same canonical representation as the single Unicode scalar value <codeVoice>&quot;é&quot;<\/codeVoice>.<\/Para><Para>Basic string operations are not sensitive to locale settings, ensuring that string comparisons and other operations always have a single, stable result, allowing strings to be used as keys in <codeVoice>Dictionary<\/codeVoice> instances and for other purposes.<\/Para><rawHTML><![CDATA[<h1>]]><\/rawHTML>Accessing String Elements<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>A string is a collection of <emphasis>extended grapheme clusters<\/emphasis>, which approximate human-readable characters. Many individual characters, such as “é”, “김”, and “🇮🇳”, can be made up of multiple Unicode scalar values. These scalar values are combined by Unicode’s boundary algorithms into extended grapheme clusters, represented by the Swift <codeVoice>Character<\/codeVoice> type. Each element of a string is represented by a <codeVoice>Character<\/codeVoice> instance.<\/Para><Para>For example, to retrieve the first word of a longer string, you can search for a space and then create a substring from a prefix of the string up to that point:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let name = \"Marie Curie\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let firstSpace = name.firstIndex(of: \" \") ?? name.endIndex]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let firstName = name[..<firstSpace]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ firstName == \"Marie\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The <codeVoice>firstName<\/codeVoice> constant is an instance of the <codeVoice>Substring<\/codeVoice> type—a type that represents substrings of a string while sharing the original string’s storage. Substrings present the same interface as strings.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(\"\\(name)'s first name has \\(firstName.count) letters.\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"Marie Curie's first name has 5 letters.\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h1>]]><\/rawHTML>Accessing a String’s Unicode Representation<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>If you need to access the contents of a string as encoded in different Unicode encodings, use one of the string’s <codeVoice>unicodeScalars<\/codeVoice>, <codeVoice>utf16<\/codeVoice>, or <codeVoice>utf8<\/codeVoice> properties. Each property provides access to a view of the string as a series of code units, each encoded in a different Unicode encoding.<\/Para><Para>To demonstrate the different views available for every string, the following examples use this <codeVoice>String<\/codeVoice> instance:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let cafe = \"Cafe\\u{301} du 🌍\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(cafe)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"Café du 🌍\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The <codeVoice>cafe<\/codeVoice> string is a collection of the nine characters that are visible when the string is displayed.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(cafe.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"9\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(Array(cafe))]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[\"C\", \"a\", \"f\", \"é\", \" \", \"d\", \"u\", \" \", \"🌍\"]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h2>]]><\/rawHTML>Unicode Scalar View<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><Para>A string’s <codeVoice>unicodeScalars<\/codeVoice> property is a collection of Unicode scalar values, the 21-bit codes that are the basic unit of Unicode. Each scalar value is represented by a <codeVoice>Unicode.Scalar<\/codeVoice> instance and is equivalent to a UTF-32 code unit.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(cafe.unicodeScalars.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"10\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(Array(cafe.unicodeScalars))]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[\"C\", \"a\", \"f\", \"e\", \"\\u{0301}\", \" \", \"d\", \"u\", \" \", \"\\u{0001F30D}\"]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(cafe.unicodeScalars.map { $0.value })]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[67, 97, 102, 101, 769, 32, 100, 117, 32, 127757]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The <codeVoice>unicodeScalars<\/codeVoice> view’s elements comprise each Unicode scalar value in the <codeVoice>cafe<\/codeVoice> string. In particular, because <codeVoice>cafe<\/codeVoice> was declared using the decomposed form of the <codeVoice>&quot;é&quot;<\/codeVoice> character, <codeVoice>unicodeScalars<\/codeVoice> contains the scalar values for both the letter <codeVoice>&quot;e&quot;<\/codeVoice> (101) and the accent character <codeVoice>&quot;´&quot;<\/codeVoice> (769).<\/Para><rawHTML><![CDATA[<h2>]]><\/rawHTML>UTF-16 View<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><Para>A string’s <codeVoice>utf16<\/codeVoice> property is a collection of UTF-16 code units, the 16-bit encoding form of the string’s Unicode scalar values. Each code unit is stored as a <codeVoice>UInt16<\/codeVoice> instance.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(cafe.utf16.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"11\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(Array(cafe.utf16))]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[67, 97, 102, 101, 769, 32, 100, 117, 32, 55356, 57101]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The elements of the <codeVoice>utf16<\/codeVoice> view are the code units for the string when encoded in UTF-16. These elements match those accessed through indexed <codeVoice>NSString<\/codeVoice> APIs.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let nscafe = cafe as NSString]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(nscafe.length)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"11\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(nscafe.character(at: 3))]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"101\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h2>]]><\/rawHTML>UTF-8 View<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><Para>A string’s <codeVoice>utf8<\/codeVoice> property is a collection of UTF-8 code units, the 8-bit encoding form of the string’s Unicode scalar values. Each code unit is stored as a <codeVoice>UInt8<\/codeVoice> instance.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(cafe.utf8.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"14\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(Array(cafe.utf8))]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[67, 97, 102, 101, 204, 129, 32, 100, 117, 32, 240, 159, 140, 141]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The elements of the <codeVoice>utf8<\/codeVoice> view are the code units for the string when encoded in UTF-8. This representation matches the one used when <codeVoice>String<\/codeVoice> instances are passed to C APIs.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let cLength = strlen(cafe)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(cLength)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"14\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h1>]]><\/rawHTML>Measuring the Length of a String<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>When you need to know the length of a string, you must first consider what you’ll use the length for. Are you measuring the number of characters that will be displayed on the screen, or are you measuring the amount of storage needed for the string in a particular encoding? A single string can have greatly differing lengths when measured by its different views.<\/Para><Para>For example, an ASCII character like the capital letter <emphasis>A<\/emphasis> is represented by a single element in each of its four views. The Unicode scalar value of <emphasis>A<\/emphasis> is <codeVoice>65<\/codeVoice>, which is small enough to fit in a single code unit in both UTF-16 and UTF-8.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let capitalA = \"A\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(capitalA.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"1\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(capitalA.unicodeScalars.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"1\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(capitalA.utf16.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"1\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(capitalA.utf8.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"1\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>On the other hand, an emoji flag character is constructed from a pair of Unicode scalar values, like <codeVoice>&quot;\\u{1F1F5}&quot;<\/codeVoice> and <codeVoice>&quot;\\u{1F1F7}&quot;<\/codeVoice>. Each of these scalar values, in turn, is too large to fit into a single UTF-16 or UTF-8 code unit. As a result, each view of the string <codeVoice>&quot;🇵🇷&quot;<\/codeVoice> reports a different length.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let flag = \"🇵🇷\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(flag.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"1\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(flag.unicodeScalars.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"2\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(flag.utf16.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"4\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(flag.utf8.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"8\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>To check whether a string is empty, use its <codeVoice>isEmpty<\/codeVoice> property instead of comparing the length of one of the views to <codeVoice>0<\/codeVoice>. Unlike with <codeVoice>isEmpty<\/codeVoice>, calculating a view’s <codeVoice>count<\/codeVoice> property requires iterating through the elements of the string.<\/Para><rawHTML><![CDATA[<h1>]]><\/rawHTML>Accessing String View Elements<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>To find individual elements of a string, use the appropriate view for your task. For example, to retrieve the first word of a longer string, you can search the string for a space and then create a new string from a prefix of the string up to that point.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let name = \"Marie Curie\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let firstSpace = name.firstIndex(of: \" \") ?? name.endIndex]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let firstName = name[..<firstSpace]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(firstName)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"Marie\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Strings and their views share indices, so you can access the UTF-8 view of the <codeVoice>name<\/codeVoice> string using the same <codeVoice>firstSpace<\/codeVoice> index.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(Array(name.utf8[..<firstSpace]))]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[77, 97, 114, 105, 101]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Note that an index into one view may not have an exact corresponding position in another view. For example, the <codeVoice>flag<\/codeVoice> string declared above comprises a single character, but is composed of eight code units when encoded as UTF-8. The following code creates constants for the first and second positions in the <codeVoice>flag.utf8<\/codeVoice> view. Accessing the <codeVoice>utf8<\/codeVoice> view with these indices yields the first and second code UTF-8 units.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let firstCodeUnit = flag.startIndex]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let secondCodeUnit = flag.utf8.index(after: firstCodeUnit)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ flag.utf8[firstCodeUnit] == 240]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ flag.utf8[secondCodeUnit] == 159]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>When used to access the elements of the <codeVoice>flag<\/codeVoice> string itself, however, the <codeVoice>secondCodeUnit<\/codeVoice> index does not correspond to the position of a specific character. Instead of only accessing the specific UTF-8 code unit, that index is treated as the position of the character at the index’s encoded offset. In the case of <codeVoice>secondCodeUnit<\/codeVoice>, that character is still the flag itself.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[\/\/ flag[firstCodeUnit] == \"🇵🇷\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ flag[secondCodeUnit] == \"🇵🇷\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>If you need to validate that an index from one string’s view corresponds with an exact position in another view, use the index’s <codeVoice>samePosition(in:)<\/codeVoice> method or the <codeVoice>init(_:within:)<\/codeVoice> initializer.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[if let exactIndex = secondCodeUnit.samePosition(in: flag) {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(flag[exactIndex])]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[} else {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(\"No exact match for this position.\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"No exact match for this position.\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h1>]]><\/rawHTML>Performance Optimizations<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>Although strings in Swift have value semantics, strings use a copy-on-write strategy to store their data in a buffer. This buffer can then be shared by different copies of a string. A string’s data is only copied lazily, upon mutation, when more than one string instance is using the same buffer. Therefore, the first in any sequence of mutating operations may cost O(<emphasis>n<\/emphasis>) time and space.<\/Para><Para>When a string’s contiguous storage fills up, a new buffer must be allocated and data must be moved to the new storage. String buffers use an exponential growth strategy that makes appending to a string a constant time operation when averaged over many append operations.<\/Para><rawHTML><![CDATA[<h1>]]><\/rawHTML>Bridging Between String and NSString<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>Any <codeVoice>String<\/codeVoice> instance can be bridged to <codeVoice>NSString<\/codeVoice> using the type-cast operator (<codeVoice>as<\/codeVoice>), and any <codeVoice>String<\/codeVoice> instance that originates in Objective-C may use an <codeVoice>NSString<\/codeVoice> instance as its storage. Because any arbitrary subclass of <codeVoice>NSString<\/codeVoice> can become a <codeVoice>String<\/codeVoice> instance, there are no guarantees about representation or efficiency when a <codeVoice>String<\/codeVoice> instance is backed by <codeVoice>NSString<\/codeVoice> storage. Because <codeVoice>NSString<\/codeVoice> is immutable, it is just as though the storage was shared by a copy. The first in any sequence of mutating operations causes elements to be copied into unique, contiguous storage which may cost O(<emphasis>n<\/emphasis>) time and space, where <emphasis>n<\/emphasis> is the length of the string’s encoded representation (or more, if the underlying <codeVoice>NSString<\/codeVoice> has unusual performance characteristics).<\/Para><Para>For more information about the Unicode terms used in this discussion, see the <Link href=\"http:\/\/www.unicode.org\/glossary\/\">Unicode.org glossary<\/Link>. In particular, this discussion mentions <Link href=\"http:\/\/www.unicode.org\/glossary\/#extended_grapheme_cluster\">extended grapheme clusters<\/Link>, <Link href=\"http:\/\/www.unicode.org\/glossary\/#unicode_scalar_value\">Unicode scalar values<\/Link>, and <Link href=\"http:\/\/www.unicode.org\/glossary\/#canonical_equivalent\">canonical equivalence<\/Link>.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.name" : "String",
        "key.doc.type" : "Class",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>String<\/decl.name><\/decl.struct>",
        "key.groupname" : "String",
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 915,
        "key.modulename" : "Swift",
        "key.name" : "String",
        "key.namelength" : 6,
        "key.nameoffset" : 56,
        "key.offset" : 46,
        "key.parsed_declaration" : "public extension String",
        "key.parsed_scope.end" : 29,
        "key.parsed_scope.start" : 4,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>static func randomAlphaNumericString(_ length: <Type usr=\"s:Si\">Int<\/Type> = 64) -&gt; <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
            "key.bodylength" : 821,
            "key.bodyoffset" : 137,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/String.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>randomAlphaNumericString<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>length<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type> = 64<\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.function.returntype><\/decl.function.method.static>",
            "key.groupname" : "String",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 890,
            "key.name" : "randomAlphaNumericString(_:)",
            "key.namelength" : 44,
            "key.nameoffset" : 81,
            "key.offset" : 69,
            "key.parsed_declaration" : "static func randomAlphaNumericString(_ length: Int = 64) -> String",
            "key.parsed_scope.end" : 28,
            "key.parsed_scope.start" : 5,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.private",
                "key.annotated_decl" : "<Declaration>func makeRandom(min: <Type usr=\"s:Si\">Int<\/Type>, max: <Type usr=\"s:Si\">Int<\/Type>) -&gt; <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
                "key.bodylength" : 348,
                "key.bodyoffset" : 190,
                "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/String.swift",
                "key.fully_annotated_decl" : "<decl.function.free><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>makeRandom<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>min<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>max<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.function.returntype><\/decl.function.free>",
                "key.groupname" : "String",
                "key.kind" : "source.lang.swift.decl.function.free",
                "key.length" : 393,
                "key.name" : "makeRandom(min:max:)",
                "key.namelength" : 30,
                "key.nameoffset" : 151,
                "key.offset" : 146,
                "key.parsed_declaration" : "func makeRandom(min: Int, max: Int) -> Int",
                "key.parsed_scope.end" : 15,
                "key.parsed_scope.start" : 6,
                "key.substructure" : [
                  {
                    "key.annotated_decl" : "<Declaration>let top: <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
                    "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/String.swift",
                    "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>top<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                    "key.groupname" : "String",
                    "key.kind" : "source.lang.swift.decl.var.local",
                    "key.length" : 23,
                    "key.name" : "top",
                    "key.namelength" : 3,
                    "key.nameoffset" : 207,
                    "key.offset" : 203,
                    "key.parsed_declaration" : "let top = max - min + 1",
                    "key.parsed_scope.end" : 7,
                    "key.parsed_scope.start" : 7,
                    "key.typename" : "Int",
                    "key.typeusr" : "$sSiD",
                    "key.usr" : "s:SS5SugarE24randomAlphaNumericStringySSSiFZ10makeRandomL_3min3maxS2i_SitF3topL_Sivp"
                  }
                ],
                "key.typename" : "(Int, Int) -> Int",
                "key.typeusr" : "$s3min3maxS2i_SitcD",
                "key.usr" : "s:SS5SugarE24randomAlphaNumericStringySSSiFZ10makeRandomL_3min3maxS2i_SitF"
              },
              {
                "key.annotated_decl" : "<Declaration>let letters: <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/String.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>letters<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.groupname" : "String",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 86,
                "key.name" : "letters",
                "key.namelength" : 7,
                "key.nameoffset" : 553,
                "key.offset" : 549,
                "key.parsed_declaration" : "let letters: String = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\"",
                "key.parsed_scope.end" : 17,
                "key.parsed_scope.start" : 17,
                "key.typename" : "String",
                "key.typeusr" : "$sSSD",
                "key.usr" : "s:SS5SugarE24randomAlphaNumericStringySSSiFZ7lettersL_SSvp"
              },
              {
                "key.annotated_decl" : "<Declaration>let len: <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/String.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>len<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.groupname" : "String",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 23,
                "key.name" : "len",
                "key.namelength" : 3,
                "key.nameoffset" : 648,
                "key.offset" : 644,
                "key.parsed_declaration" : "let len = letters.count",
                "key.parsed_scope.end" : 18,
                "key.parsed_scope.start" : 18,
                "key.typename" : "Int",
                "key.typeusr" : "$sSiD",
                "key.usr" : "s:SS5SugarE24randomAlphaNumericStringySSSiFZ3lenL_Sivp"
              },
              {
                "key.annotated_decl" : "<Declaration>var randomString: <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/String.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>randomString<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.groupname" : "String",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 21,
                "key.name" : "randomString",
                "key.namelength" : 12,
                "key.nameoffset" : 681,
                "key.offset" : 677,
                "key.parsed_declaration" : "var randomString = \"\"",
                "key.parsed_scope.end" : 20,
                "key.parsed_scope.start" : 20,
                "key.typename" : "String",
                "key.typeusr" : "$sSSD",
                "key.usr" : "s:SS5SugarE24randomAlphaNumericStringySSSiFZ0bE0L_SSvp"
              }
            ],
            "key.typename" : "(String.Type) -> (Int) -> String",
            "key.typeusr" : "$sySSSicD",
            "key.usr" : "s:SS5SugarE24randomAlphaNumericStringySSSiFZ"
          }
        ],
        "key.typename" : "String.Type",
        "key.typeusr" : "$sSSmD",
        "key.usr" : "s:SS"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 1081
          }
        ],
        "key.doc.comment" : "Generates a random number between (and inclusive of)\nthe given minimum and maximum.",
        "key.doclength" : 96,
        "key.docoffset" : 981,
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 382,
        "key.name" : "randomInitialized",
        "key.namelength" : 17,
        "key.nameoffset" : 1093,
        "key.offset" : 1089,
        "key.typename" : "Bool"
      }
    ]
  }
}, {
  "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/TagContext.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 336,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.annotated_decl" : "<Declaration>final class TagContext : <Type usr=\"s:5Async11BasicWorkerP\">BasicWorker<\/Type><\/Declaration>",
        "key.bodylength" : 292,
        "key.bodyoffset" : 42,
        "key.doc.declaration" : "final class TagContext : BasicWorker",
        "key.doc.full_as_xml" : "<Class><Name>TagContext<\/Name><USR>s:11TemplateKit10TagContextC<\/USR><Declaration>final class TagContext : BasicWorker<\/Declaration><CommentParts><Abstract><Para>Contains contextual information corresponding to a <codeVoice>TemplateTag<\/codeVoice> in the AST. This information will be passed to the <codeVoice>TagRenderer<\/codeVoice> for the identified tag.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.name" : "TagContext",
        "key.doc.type" : "Class",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>final<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>TagContext<\/decl.name> : <ref.protocol usr=\"s:5Async11BasicWorkerP\">BasicWorker<\/ref.protocol><\/decl.class>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 315,
        "key.modulename" : "TemplateKit",
        "key.name" : "TagContext",
        "key.namelength" : 10,
        "key.nameoffset" : 30,
        "key.offset" : 20,
        "key.parsed_declaration" : "extension TagContext",
        "key.parsed_scope.end" : 10,
        "key.parsed_scope.start" : 3,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func requireParameterCount(upTo n: <Type usr=\"s:Si\">Int<\/Type>) throws<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 134
              }
            ],
            "key.bodylength" : 143,
            "key.bodyoffset" : 189,
            "key.doc.column" : 17,
            "key.doc.comment" : "Throws an error if the parameter count is larger than the supplied number `n`.",
            "key.doc.declaration" : "public func requireParameterCount(upTo n: Int) throws",
            "key.doc.file" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/TagContext.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/TagContext.swift\" line=\"5\" column=\"17\"><Name>requireParameterCount(upTo:)<\/Name><USR>s:11TemplateKit10TagContextC5SugarE21requireParameterCount4upToySi_tKF<\/USR><Declaration>public func requireParameterCount(upTo n: Int) throws<\/Declaration><CommentParts><Abstract><Para>Throws an error if the parameter count is larger than the supplied number <codeVoice>n<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 5,
            "key.doc.name" : "requireParameterCount(upTo:)",
            "key.doc.type" : "Function",
            "key.doclength" : 83,
            "key.docoffset" : 47,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/TagContext.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>requireParameterCount<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>upTo<\/decl.var.parameter.argument_label> <decl.var.parameter.name>n<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 192,
            "key.name" : "requireParameterCount(upTo:)",
            "key.namelength" : 34,
            "key.nameoffset" : 146,
            "key.offset" : 141,
            "key.parsed_declaration" : "public func requireParameterCount(upTo n: Int) throws",
            "key.parsed_scope.end" : 9,
            "key.parsed_scope.start" : 5,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11TemplateKit10TagContextC21requireParameterCountyySiKF\">requireParameterCount(_:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(TagContext) -> (Int) throws -> ()",
            "key.typeusr" : "$s4upToySi_tKcD",
            "key.usr" : "s:11TemplateKit10TagContextC5SugarE21requireParameterCount4upToySi_tKF"
          }
        ],
        "key.typename" : "TagContext.Type",
        "key.typeusr" : "$s11TemplateKit10TagContextCmD",
        "key.usr" : "s:11TemplateKit10TagContextC"
      }
    ]
  }
}, {
  "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/TimeInterval.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 366,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>@_frozen enum Optional&lt;Wrapped&gt; : <Type usr=\"s:s23ExpressibleByNilLiteralP\">ExpressibleByNilLiteral<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 19
          }
        ],
        "key.bodylength" : 163,
        "key.bodyoffset" : 76,
        "key.doc.declaration" : "enum Optional<Wrapped> : ExpressibleByNilLiteral",
        "key.doc.discussion" : [
          {
            "Para" : "You use the `Optional` type whenever you use optional values, even if you never type the word `Optional`. Swift’s type system usually shows the wrapped type’s name with a trailing question mark (`?`) instead of showing the full type name. For example, if a variable has the type `Int?`, that’s just another way of writing `Optional<Int>`. The shortened form is preferred for ease of reading and writing code."
          },
          {
            "Para" : "The types of `shortForm` and `longForm` in the following code sample are the same:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "The `Optional` type is an enumeration with two cases. `Optional.none` is equivalent to the `nil` literal. `Optional.some(Wrapped)` stores a wrapped value. For example:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "You must unwrap the value of an `Optional` instance before you can use it in many contexts. Because Swift provides several ways to safely unwrap optional values, you can choose the one that helps you write clear, concise code."
          },
          {
            "Para" : "The following examples use this dictionary of image names and file paths:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Getting a dictionary’s value using a key returns an optional value, so `imagePaths[\"star\"]` has type `Optional<String>` or, written in the preferred manner, `String?`."
          },
          {
            "Para" : "To conditionally bind the wrapped value of an `Optional` instance to a new variable, use one of the optional binding control structures, including `if let`, `guard let`, and `switch`."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "To safely access the properties and methods of a wrapped instance, use the postfix optional chaining operator (postfix `?`). The following example uses optional chaining to access the `hasSuffix(_:)` method on a `String?` instance."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Use the nil-coalescing operator (`??`) to supply a default value in case the `Optional` instance is `nil`. Here a default path is supplied for an image that is missing from `imagePaths`."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "The `??` operator also works with another `Optional` instance on the right-hand side. As a result, you can chain multiple `??` operators together."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "When you’re certain that an instance of `Optional` contains a value, you can unconditionally unwrap the value by using the forced unwrap operator (postfix `!`). For example, the result of the failable `Int` initializer is unconditionally unwrapped in the example below."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "You can also perform unconditional optional chaining by using the postfix `!` operator."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Unconditionally unwrapping a `nil` instance with `!` triggers a runtime error."
          }
        ],
        "key.doc.full_as_xml" : "<Other><Name>Optional<\/Name><USR>s:Sq<\/USR><Declaration>enum Optional&lt;Wrapped&gt; : ExpressibleByNilLiteral<\/Declaration><CommentParts><Abstract><Para>A type that represents either a wrapped value or <codeVoice>nil<\/codeVoice>, the absence of a value.<\/Para><\/Abstract><Discussion><Para>You use the <codeVoice>Optional<\/codeVoice> type whenever you use optional values, even if you never type the word <codeVoice>Optional<\/codeVoice>. Swift’s type system usually shows the wrapped type’s name with a trailing question mark (<codeVoice>?<\/codeVoice>) instead of showing the full type name. For example, if a variable has the type <codeVoice>Int?<\/codeVoice>, that’s just another way of writing <codeVoice>Optional&lt;Int&gt;<\/codeVoice>. The shortened form is preferred for ease of reading and writing code.<\/Para><Para>The types of <codeVoice>shortForm<\/codeVoice> and <codeVoice>longForm<\/codeVoice> in the following code sample are the same:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let shortForm: Int? = Int(\"42\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let longForm: Optional<Int> = Int(\"42\")]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The <codeVoice>Optional<\/codeVoice> type is an enumeration with two cases. <codeVoice>Optional.none<\/codeVoice> is equivalent to the <codeVoice>nil<\/codeVoice> literal. <codeVoice>Optional.some(Wrapped)<\/codeVoice> stores a wrapped value. For example:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let number: Int? = Optional.some(42)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let noNumber: Int? = Optional.none]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(noNumber == nil)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"true\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>You must unwrap the value of an <codeVoice>Optional<\/codeVoice> instance before you can use it in many contexts. Because Swift provides several ways to safely unwrap optional values, you can choose the one that helps you write clear, concise code.<\/Para><Para>The following examples use this dictionary of image names and file paths:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let imagePaths = [\"star\": \"\/glyphs\/star.png\",]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[                  \"portrait\": \"\/images\/content\/portrait.jpg\",]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[                  \"spacer\": \"\/images\/shared\/spacer.gif\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Getting a dictionary’s value using a key returns an optional value, so <codeVoice>imagePaths[&quot;star&quot;]<\/codeVoice> has type <codeVoice>Optional&lt;String&gt;<\/codeVoice> or, written in the preferred manner, <codeVoice>String?<\/codeVoice>.<\/Para><rawHTML><![CDATA[<h2>]]><\/rawHTML>Optional Binding<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><Para>To conditionally bind the wrapped value of an <codeVoice>Optional<\/codeVoice> instance to a new variable, use one of the optional binding control structures, including <codeVoice>if let<\/codeVoice>, <codeVoice>guard let<\/codeVoice>, and <codeVoice>switch<\/codeVoice>.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[if let starPath = imagePaths[\"star\"] {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(\"The star image is at '\\(starPath)'\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[} else {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(\"Couldn't find the star image\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"The star image is at '\/glyphs\/star.png'\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h2>]]><\/rawHTML>Optional Chaining<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><Para>To safely access the properties and methods of a wrapped instance, use the postfix optional chaining operator (postfix <codeVoice>?<\/codeVoice>). The following example uses optional chaining to access the <codeVoice>hasSuffix(_:)<\/codeVoice> method on a <codeVoice>String?<\/codeVoice> instance.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[if imagePaths[\"star\"]?.hasSuffix(\".png\") == true {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(\"The star image is in PNG format\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"The star image is in PNG format\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h2>]]><\/rawHTML>Using the Nil-Coalescing Operator<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><Para>Use the nil-coalescing operator (<codeVoice>??<\/codeVoice>) to supply a default value in case the <codeVoice>Optional<\/codeVoice> instance is <codeVoice>nil<\/codeVoice>. Here a default path is supplied for an image that is missing from <codeVoice>imagePaths<\/codeVoice>.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let defaultImagePath = \"\/images\/default.png\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let heartPath = imagePaths[\"heart\"] ?? defaultImagePath]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(heartPath)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"\/images\/default.png\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The <codeVoice>??<\/codeVoice> operator also works with another <codeVoice>Optional<\/codeVoice> instance on the right-hand side. As a result, you can chain multiple <codeVoice>??<\/codeVoice> operators together.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let shapePath = imagePaths[\"cir\"] ?? imagePaths[\"squ\"] ?? defaultImagePath]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(shapePath)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"\/images\/default.png\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h2>]]><\/rawHTML>Unconditional Unwrapping<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><Para>When you’re certain that an instance of <codeVoice>Optional<\/codeVoice> contains a value, you can unconditionally unwrap the value by using the forced unwrap operator (postfix <codeVoice>!<\/codeVoice>). For example, the result of the failable <codeVoice>Int<\/codeVoice> initializer is unconditionally unwrapped in the example below.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let number = Int(\"42\")!]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(number)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"42\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>You can also perform unconditional optional chaining by using the postfix <codeVoice>!<\/codeVoice> operator.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let isPNG = imagePaths[\"star\"]!.hasSuffix(\".png\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(isPNG)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"true\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Unconditionally unwrapping a <codeVoice>nil<\/codeVoice> instance with <codeVoice>!<\/codeVoice> triggers a runtime error.<\/Para><\/Discussion><\/CommentParts><\/Other>",
        "key.doc.name" : "Optional",
        "key.doc.type" : "Other",
        "key.fully_annotated_decl" : "<decl.enum><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@_frozen<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>enum<\/syntaxtype.keyword> <decl.name>Optional<\/decl.name>&lt;<decl.generic_type_param usr=\"s:Sq7Wrappedxmfp\"><decl.generic_type_param.name>Wrapped<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt; : <ref.protocol usr=\"s:s23ExpressibleByNilLiteralP\">ExpressibleByNilLiteral<\/ref.protocol><\/decl.enum>",
        "key.groupname" : "Optional",
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 214,
        "key.modulename" : "Swift",
        "key.name" : "Optional",
        "key.namelength" : 8,
        "key.nameoffset" : 36,
        "key.offset" : 26,
        "key.parsed_declaration" : "public extension Optional where Wrapped == TimeInterval",
        "key.parsed_scope.end" : 11,
        "key.parsed_scope.start" : 3,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>var dateRelativeTo1970: <Type usr=\"s:10Foundation4DateV\">Date<\/Type>? { get }<\/Declaration>",
            "key.bodylength" : 125,
            "key.bodyoffset" : 112,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/TimeInterval.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>dateRelativeTo1970<\/decl.name>: <decl.var.type><ref.struct usr=\"s:10Foundation4DateV\">Date<\/ref.struct>?<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.groupname" : "Optional",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 157,
            "key.name" : "dateRelativeTo1970",
            "key.namelength" : 18,
            "key.nameoffset" : 85,
            "key.offset" : 81,
            "key.parsed_declaration" : "var dateRelativeTo1970: Date?",
            "key.parsed_scope.end" : 10,
            "key.parsed_scope.start" : 4,
            "key.typename" : "Date?",
            "key.typeusr" : "$s10Foundation4DateVSgD",
            "key.usr" : "s:Sq5SugarSdRszlE18dateRelativeTo197010Foundation4DateVSgvp"
          }
        ],
        "key.typename" : "Optional<Wrapped>.Type",
        "key.typeusr" : "$sxSgmD",
        "key.usr" : "s:Sq"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>typealias TimeInterval = <Type usr=\"s:Sd\">Double<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 242
          }
        ],
        "key.bodylength" : 91,
        "key.bodyoffset" : 273,
        "key.filepath" : "\/Applications\/Xcode.app\/Contents\/Developer\/Platforms\/MacOSX.platform\/Developer\/SDKs\/MacOSX10.14.sdk\/System\/Library\/Frameworks\/Foundation.framework\/Headers\/NSDate.h",
        "key.fully_annotated_decl" : "<decl.typealias><syntaxtype.keyword>typealias<\/syntaxtype.keyword> <decl.name>TimeInterval<\/decl.name> = <ref.struct usr=\"s:Sd\">Double<\/ref.struct><\/decl.typealias>",
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 116,
        "key.modulename" : "Foundation.NSDate",
        "key.name" : "TimeInterval",
        "key.namelength" : 12,
        "key.nameoffset" : 259,
        "key.offset" : 249,
        "key.parsed_declaration" : "public extension TimeInterval",
        "key.parsed_scope.end" : 17,
        "key.parsed_scope.start" : 13,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>var dateRelativeTo1970: <Type usr=\"s:10Foundation4DateV\">Date<\/Type> { get }<\/Declaration>",
            "key.bodylength" : 54,
            "key.bodyoffset" : 308,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/TimeInterval.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>dateRelativeTo1970<\/decl.name>: <decl.var.type><ref.struct usr=\"s:10Foundation4DateV\">Date<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.groupname" : "Math\/Floating",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 85,
            "key.name" : "dateRelativeTo1970",
            "key.namelength" : 18,
            "key.nameoffset" : 282,
            "key.offset" : 278,
            "key.parsed_declaration" : "var dateRelativeTo1970: Date",
            "key.parsed_scope.end" : 16,
            "key.parsed_scope.start" : 14,
            "key.typename" : "Date",
            "key.typeusr" : "$s10Foundation4DateVD",
            "key.usr" : "s:Sd5SugarE18dateRelativeTo197010Foundation4DateVvp"
          }
        ],
        "key.typename" : "Double.Type",
        "key.typeusr" : "$sSdmD",
        "key.usr" : "c:@T@NSTimeInterval"
      }
    ]
  }
}, {
  "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/URL.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 627,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>struct URL : <Type usr=\"s:10Foundation20ReferenceConvertibleP\">ReferenceConvertible<\/Type>, <Type usr=\"s:SQ\">Equatable<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 19
          }
        ],
        "key.bodylength" : 584,
        "key.bodyoffset" : 41,
        "key.doc.declaration" : "struct URL : ReferenceConvertible, Equatable",
        "key.doc.discussion" : [
          {
            "Para" : "You can construct URLs and access their parts. For URLs that represent local files, you can also manipulate properties of those files directly, such as changing the file’s last modification date. Finally, you can pass URLs to other APIs to retrieve the contents of those URLs. For example, you can use the URLSession classes to access the contents of remote resources, as described in URL Session Programming Guide."
          },
          {
            "Para" : "URLs are the preferred way to refer to local files. Most objects that read data from or write data to a file have methods that accept a URL instead of a pathname as the file reference. For example, you can get the contents of a local file URL as `String` by calling `func init(contentsOf:encoding) throws`, or as a `Data` by calling `func init(contentsOf:options) throws`."
          }
        ],
        "key.doc.full_as_xml" : "<Class><Name>URL<\/Name><USR>s:10Foundation3URLV<\/USR><Declaration>struct URL : ReferenceConvertible, Equatable<\/Declaration><CommentParts><Abstract><Para>A URL is a type that can potentially contain the location of a resource on a remote server, the path of a local file on disk, or even an arbitrary piece of encoded data.<\/Para><\/Abstract><Discussion><Para>You can construct URLs and access their parts. For URLs that represent local files, you can also manipulate properties of those files directly, such as changing the file’s last modification date. Finally, you can pass URLs to other APIs to retrieve the contents of those URLs. For example, you can use the URLSession classes to access the contents of remote resources, as described in URL Session Programming Guide.<\/Para><Para>URLs are the preferred way to refer to local files. Most objects that read data from or write data to a file have methods that accept a URL instead of a pathname as the file reference. For example, you can get the contents of a local file URL as <codeVoice>String<\/codeVoice> by calling <codeVoice>func init(contentsOf:encoding) throws<\/codeVoice>, or as a <codeVoice>Data<\/codeVoice> by calling <codeVoice>func init(contentsOf:options) throws<\/codeVoice>.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.name" : "URL",
        "key.doc.type" : "Class",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>URL<\/decl.name> : <ref.protocol usr=\"s:10Foundation20ReferenceConvertibleP\">ReferenceConvertible<\/ref.protocol>, <ref.protocol usr=\"s:SQ\">Equatable<\/ref.protocol><\/decl.struct>",
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 600,
        "key.modulename" : "Foundation",
        "key.name" : "URL",
        "key.namelength" : 3,
        "key.nameoffset" : 36,
        "key.offset" : 26,
        "key.parsed_declaration" : "public extension URL",
        "key.parsed_scope.end" : 23,
        "key.parsed_scope.start" : 3,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>func addQueryItems(_ item: [<Type usr=\"s:10Foundation12URLQueryItemV\">URLQueryItem<\/Type>]) -&gt; <Type usr=\"s:10Foundation3URLV\">URL<\/Type><\/Declaration>",
            "key.bodylength" : 280,
            "key.bodyoffset" : 97,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/URL.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>addQueryItems<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>item<\/decl.var.parameter.name>: <decl.var.parameter.type>[<ref.struct usr=\"s:10Foundation12URLQueryItemV\">URLQueryItem<\/ref.struct>]<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:10Foundation3URLV\">URL<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 332,
            "key.name" : "addQueryItems(_:)",
            "key.namelength" : 37,
            "key.nameoffset" : 51,
            "key.offset" : 46,
            "key.parsed_declaration" : "func addQueryItems(_ item: [URLQueryItem]) -> URL",
            "key.parsed_scope.end" : 12,
            "key.parsed_scope.start" : 4,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation3URLV5SugarE13addQueryItems4fromA2C_tF\">addQueryItems(from:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let currentItems: [<Type usr=\"s:10Foundation12URLQueryItemV\">URLQueryItem<\/Type>]<\/Declaration>",
                "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/URL.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>currentItems<\/decl.name>: <decl.var.type>[<ref.struct usr=\"s:10Foundation12URLQueryItemV\">URLQueryItem<\/ref.struct>]<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 46,
                "key.name" : "currentItems",
                "key.namelength" : 12,
                "key.nameoffset" : 240,
                "key.offset" : 236,
                "key.parsed_declaration" : "let currentItems = components.queryItems ?? []",
                "key.parsed_scope.end" : 9,
                "key.parsed_scope.start" : 9,
                "key.typename" : "[URLQueryItem]",
                "key.typeusr" : "$sSay10Foundation12URLQueryItemVGD",
                "key.usr" : "s:10Foundation3URLV5SugarE13addQueryItemsyACSayAA12URLQueryItemVGF07currentF0L_AHvp"
              }
            ],
            "key.typename" : "(URL) -> ([URLQueryItem]) -> URL",
            "key.typeusr" : "$sy10Foundation3URLVSayAA12URLQueryItemVGcD",
            "key.usr" : "s:10Foundation3URLV5SugarE13addQueryItemsyACSayAA12URLQueryItemVGF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>func addQueryItems(from url: <Type usr=\"s:10Foundation3URLV\">URL<\/Type>) -&gt; <Type usr=\"s:10Foundation3URLV\">URL<\/Type><\/Declaration>",
            "key.bodylength" : 197,
            "key.bodyoffset" : 426,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/URL.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>addQueryItems<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>from<\/decl.var.parameter.argument_label> <decl.var.parameter.name>url<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:10Foundation3URLV\">URL<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:10Foundation3URLV\">URL<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 240,
            "key.name" : "addQueryItems(from:)",
            "key.namelength" : 28,
            "key.nameoffset" : 389,
            "key.offset" : 384,
            "key.parsed_declaration" : "func addQueryItems(from url: URL) -> URL",
            "key.parsed_scope.end" : 22,
            "key.parsed_scope.start" : 14,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation3URLV5SugarE13addQueryItemsyACSayAA12URLQueryItemVGF\">addQueryItems(_:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(URL) -> (URL) -> URL",
            "key.typeusr" : "$s4from10Foundation3URLVAD_tcD",
            "key.usr" : "s:10Foundation3URLV5SugarE13addQueryItems4fromA2C_tF"
          }
        ],
        "key.typename" : "URL.Type",
        "key.typeusr" : "$s10Foundation3URLVmD",
        "key.usr" : "s:10Foundation3URLV"
      }
    ]
  }
}, {
  "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Updatable.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 780,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public protocol Updatable : AnyObject<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 14
          }
        ],
        "key.bodylength" : 120,
        "key.bodyoffset" : 48,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 5,
            "key.offset" : 41
          }
        ],
        "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Updatable.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>Updatable<\/decl.name> : AnyObject<\/decl.protocol>",
        "key.inheritedtypes" : [
          {
            "key.name" : "class"
          }
        ],
        "key.kind" : "source.lang.swift.decl.protocol",
        "key.length" : 148,
        "key.name" : "Updatable",
        "key.namelength" : 9,
        "key.nameoffset" : 30,
        "key.offset" : 21,
        "key.parsed_declaration" : "public protocol Updatable: class",
        "key.parsed_scope.end" : 7,
        "key.parsed_scope.start" : 3,
        "key.runtime_name" : "_TtP4main9Updatable_",
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>associatedtype Update<\/Declaration>",
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Updatable.swift",
            "key.fully_annotated_decl" : "<decl.associatedtype><syntaxtype.keyword>associatedtype<\/syntaxtype.keyword> <decl.name>Update<\/decl.name><\/decl.associatedtype>",
            "key.kind" : "source.lang.swift.decl.associatedtype",
            "key.length" : 21,
            "key.name" : "Update",
            "key.namelength" : 6,
            "key.nameoffset" : 68,
            "key.offset" : 53,
            "key.parsed_declaration" : "associatedtype Update",
            "key.parsed_scope.end" : 4,
            "key.parsed_scope.start" : 4,
            "key.typename" : "Self.Update.Type",
            "key.typeusr" : "$s6Update5Sugar9UpdatablePQzmD",
            "key.usr" : "s:5Sugar9UpdatableP6UpdateQa"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>func preUpdate(on req: <Type usr=\"s:5Vapor7RequestC\">Request<\/Type>) -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:s4Voida\">Void<\/Type>&gt;<\/Declaration>",
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Updatable.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>preUpdate<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>on<\/decl.var.parameter.argument_label> <decl.var.parameter.name>req<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 47,
            "key.name" : "preUpdate(on:)",
            "key.namelength" : 26,
            "key.nameoffset" : 84,
            "key.offset" : 79,
            "key.parsed_declaration" : "func preUpdate(on req: Request) -> Future<Void>",
            "key.parsed_scope.end" : 5,
            "key.parsed_scope.start" : 5,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Sugar9UpdatablePAAE9preUpdate2on3NIO15EventLoopFutureCyytG5Vapor7RequestC_tF\">preUpdate(on: Request) -&gt; Future&lt;Void&gt;<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : Updatable> (Self) -> (Request) -> EventLoopFuture<()>",
            "key.typeusr" : "$s2on3NIO15EventLoopFutureCyytG5Vapor7RequestC_tcD",
            "key.usr" : "s:5Sugar9UpdatableP9preUpdate2on3NIO15EventLoopFutureCyytG5Vapor7RequestC_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>func update(_ update: <Type usr=\"s:5Sugar9UpdatableP6UpdateQa\">Update<\/Type>) throws<\/Declaration>",
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Updatable.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>update<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>update<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.associatedtype usr=\"s:5Sugar9UpdatableP6UpdateQa\">Update<\/ref.associatedtype><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 36,
            "key.name" : "update(_:)",
            "key.namelength" : 24,
            "key.nameoffset" : 136,
            "key.offset" : 131,
            "key.parsed_declaration" : "func update(_ update: Update) throws",
            "key.parsed_scope.end" : 6,
            "key.parsed_scope.start" : 6,
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : Updatable> (Self) -> (Self.Update) throws -> ()",
            "key.typeusr" : "$syy6UpdateQzKcD",
            "key.usr" : "s:5Sugar9UpdatableP6updateyy6UpdateQzKF"
          }
        ],
        "key.typename" : "Updatable.Protocol",
        "key.typeusr" : "$s5Sugar9Updatable_pmD",
        "key.usr" : "s:5Sugar9UpdatableP"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.annotated_decl" : "<Declaration>public protocol Updatable : AnyObject<\/Declaration>",
        "key.bodylength" : 96,
        "key.bodyoffset" : 192,
        "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Updatable.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>Updatable<\/decl.name> : AnyObject<\/decl.protocol>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 118,
        "key.name" : "Updatable",
        "key.namelength" : 9,
        "key.nameoffset" : 181,
        "key.offset" : 171,
        "key.parsed_declaration" : "extension Updatable",
        "key.parsed_scope.end" : 13,
        "key.parsed_scope.start" : 9,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func preUpdate(on req: <Type usr=\"s:5Vapor7RequestC\">Request<\/Type>) -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:s4Voida\">Void<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 197
              }
            ],
            "key.bodylength" : 33,
            "key.bodyoffset" : 253,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Updatable.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>preUpdate<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>on<\/decl.var.parameter.argument_label> <decl.var.parameter.name>req<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 83,
            "key.name" : "preUpdate(on:)",
            "key.namelength" : 26,
            "key.nameoffset" : 209,
            "key.offset" : 204,
            "key.parsed_declaration" : "public func preUpdate(on req: Request) -> Future<Void>",
            "key.parsed_scope.end" : 12,
            "key.parsed_scope.start" : 10,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Sugar9UpdatableP9preUpdate2on3NIO15EventLoopFutureCyytG5Vapor7RequestC_tF\">preUpdate(on: Request) -&gt; Future&lt;Void&gt;<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : Updatable> (Self) -> (Request) -> EventLoopFuture<()>",
            "key.typeusr" : "$s2on3NIO15EventLoopFutureCyytG5Vapor7RequestC_tcD",
            "key.usr" : "s:5Sugar9UpdatablePAAE9preUpdate2on3NIO15EventLoopFutureCyytG5Vapor7RequestC_tF"
          }
        ],
        "key.typename" : "Updatable.Protocol",
        "key.typeusr" : "$s5Sugar9Updatable_pmD",
        "key.usr" : "s:5Sugar9UpdatableP"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.annotated_decl" : "<Declaration>public protocol Updatable : AnyObject<\/Declaration>",
        "key.bodylength" : 243,
        "key.bodyoffset" : 336,
        "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Updatable.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>Updatable<\/decl.name> : AnyObject<\/decl.protocol>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 289,
        "key.name" : "Updatable",
        "key.namelength" : 9,
        "key.nameoffset" : 301,
        "key.offset" : 291,
        "key.parsed_declaration" : "extension Updatable where Update: Decodable",
        "key.parsed_scope.end" : 23,
        "key.parsed_scope.start" : 15,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func applyUpdate(on req: <Type usr=\"s:5Vapor7RequestC\">Request<\/Type>) -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:5Sugar9UpdatablePAASe6UpdateRpzrlE4Selfxmfp\">Self<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 341
              }
            ],
            "key.bodylength" : 178,
            "key.bodyoffset" : 399,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Updatable.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>applyUpdate<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>on<\/decl.var.parameter.argument_label> <decl.var.parameter.name>req<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.generic_type_param usr=\"s:5Sugar9UpdatablePAASe6UpdateRpzrlE4Selfxmfp\">Self<\/ref.generic_type_param>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 230,
            "key.name" : "applyUpdate(on:)",
            "key.namelength" : 28,
            "key.nameoffset" : 353,
            "key.offset" : 348,
            "key.parsed_declaration" : "public func applyUpdate(on req: Request) -> Future<Self>",
            "key.parsed_scope.end" : 22,
            "key.parsed_scope.start" : 16,
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : Updatable, Self.Update : Decodable> (Self) -> (Request) -> EventLoopFuture<Self>",
            "key.typeusr" : "$s2on3NIO15EventLoopFutureCyxG5Vapor7RequestC_tcD",
            "key.usr" : "s:5Sugar9UpdatablePAASe6UpdateRpzrlE05applyC02on3NIO15EventLoopFutureCyxG5Vapor7RequestC_tF"
          }
        ],
        "key.typename" : "Updatable.Protocol",
        "key.typeusr" : "$s5Sugar9Updatable_pmD",
        "key.usr" : "s:5Sugar9UpdatableP"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.annotated_decl" : "<Declaration>typealias Future = <Type usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/Type><\/Declaration>",
        "key.bodylength" : 138,
        "key.bodyoffset" : 640,
        "key.doc.declaration" : "typealias Future = NIO.EventLoopFuture",
        "key.doc.full_as_xml" : "<Other><Name>Future<\/Name><USR>s:5Async6Futurea<\/USR><Declaration>typealias Future = NIO.EventLoopFuture<\/Declaration><CommentParts><Abstract><Para>Convenience shorthand for <codeVoice>EventLoopFuture<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
        "key.doc.name" : "Future",
        "key.doc.type" : "Other",
        "key.fully_annotated_decl" : "<decl.typealias><syntaxtype.keyword>typealias<\/syntaxtype.keyword> <decl.name>Future<\/decl.name> = <ref.class usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/ref.class><\/decl.typealias>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 197,
        "key.modulename" : "Async",
        "key.name" : "Future",
        "key.namelength" : 6,
        "key.nameoffset" : 592,
        "key.offset" : 582,
        "key.parsed_declaration" : "extension Future where T: Updatable, T.Update: Decodable",
        "key.parsed_scope.end" : 31,
        "key.parsed_scope.start" : 25,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func applyUpdate(on req: <Type usr=\"s:5Vapor7RequestC\">Request<\/Type>) -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:3NIO15EventLoopFutureC5SugarAD9UpdatableRzSe6UpdateRpzlE1Txmfp\">T<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 645
              }
            ],
            "key.bodylength" : 76,
            "key.bodyoffset" : 700,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Helpers\/Updatable.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>applyUpdate<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>on<\/decl.var.parameter.argument_label> <decl.var.parameter.name>req<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.generic_type_param usr=\"s:3NIO15EventLoopFutureC5SugarAD9UpdatableRzSe6UpdateRpzlE1Txmfp\">T<\/ref.generic_type_param>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 125,
            "key.name" : "applyUpdate(on:)",
            "key.namelength" : 28,
            "key.nameoffset" : 657,
            "key.offset" : 652,
            "key.parsed_declaration" : "public func applyUpdate(on req: Request) -> Future<T>",
            "key.parsed_scope.end" : 30,
            "key.parsed_scope.start" : 26,
            "key.substructure" : [

            ],
            "key.typename" : "<T where T : Updatable, T.Update : Decodable> (EventLoopFuture<T>) -> (Request) -> EventLoopFuture<T>",
            "key.typeusr" : "$s2on3NIO15EventLoopFutureCyxG5Vapor7RequestC_tcD",
            "key.usr" : "s:3NIO15EventLoopFutureC5SugarAD9UpdatableRzSe6UpdateRpzlE05applyG02onACyxG5Vapor7RequestC_tF"
          }
        ],
        "key.typename" : "EventLoopFuture.Type",
        "key.typeusr" : "$s3NIO15EventLoopFutureCmD",
        "key.usr" : "s:5Async6Futurea"
      }
    ]
  }
}, {
  "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Middlewares\/CurrentURLMiddleware.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 825,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public final class CurrentURLProvider : <Type usr=\"s:7Service8ProviderP\">Provider<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.final",
            "key.length" : 5,
            "key.offset" : 21
          },
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 14
          }
        ],
        "key.bodylength" : 291,
        "key.bodyoffset" : 63,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 8,
            "key.offset" : 53
          }
        ],
        "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Middlewares\/CurrentURLMiddleware.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>final<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>CurrentURLProvider<\/decl.name> : <ref.protocol usr=\"s:7Service8ProviderP\">Provider<\/ref.protocol><\/decl.class>",
        "key.inheritedtypes" : [
          {
            "key.name" : "Provider"
          }
        ],
        "key.kind" : "source.lang.swift.decl.class",
        "key.length" : 328,
        "key.name" : "CurrentURLProvider",
        "key.namelength" : 18,
        "key.nameoffset" : 33,
        "key.offset" : 27,
        "key.parsed_declaration" : "public final class CurrentURLProvider: Provider",
        "key.parsed_scope.end" : 15,
        "key.parsed_scope.start" : 3,
        "key.runtime_name" : "_TtC4main18CurrentURLProvider",
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public init()<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 68
              }
            ],
            "key.bodylength" : 0,
            "key.bodyoffset" : 83,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Middlewares\/CurrentURLMiddleware.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>()<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 9,
            "key.name" : "init()",
            "key.namelength" : 6,
            "key.nameoffset" : 75,
            "key.offset" : 75,
            "key.parsed_declaration" : "public init()",
            "key.parsed_scope.end" : 4,
            "key.parsed_scope.start" : 4,
            "key.typename" : "(CurrentURLProvider.Type) -> () -> CurrentURLProvider",
            "key.typeusr" : "$s5Sugar18CurrentURLProviderCycD",
            "key.usr" : "s:5Sugar18CurrentURLProviderCACycfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func register(_ services: inout <Type usr=\"s:7Service8ServicesV\">Services<\/Type>) throws<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 90
              }
            ],
            "key.bodylength" : 89,
            "key.bodyoffset" : 147,
            "key.doc.declaration" : "func register(_ services: inout Service.Services) throws",
            "key.doc.discussion" : [
              {
                "CodeListing" : ""
              }
            ],
            "key.doc.full_as_xml" : "<Function><Name>register(_:)<\/Name><USR>s:7Service8ProviderP8registeryyAA8ServicesVzKF<\/USR><Declaration>func register(_ services: inout Service.Services) throws<\/Declaration><CommentParts><Abstract><Para>Register all services you would like to provide the <codeVoice>Container<\/codeVoice> here.<\/Para><\/Abstract><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[services.register(RedisCache.self)]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.name" : "register(_:)",
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Middlewares\/CurrentURLMiddleware.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>register<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>services<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.keyword>inout<\/syntaxtype.keyword> <ref.struct usr=\"s:7Service8ServicesV\">Services<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 140,
            "key.name" : "register(_:)",
            "key.namelength" : 36,
            "key.nameoffset" : 102,
            "key.offset" : 97,
            "key.overrides" : [
              {
                "key.usr" : "s:7Service8ProviderP8registeryyAA8ServicesVzKF"
              }
            ],
            "key.parsed_declaration" : "public func register(_ services: inout Services) throws",
            "key.parsed_scope.end" : 10,
            "key.parsed_scope.start" : 6,
            "key.substructure" : [

            ],
            "key.typename" : "(CurrentURLProvider) -> (inout Services) throws -> ()",
            "key.typeusr" : "$syy7Service8ServicesVzKcD",
            "key.usr" : "s:7Service8ProviderP8registeryyAA8ServicesVzKF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func didBoot(_ container: <Type usr=\"s:7Service9ContainerP\">Container<\/Type>) throws -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:s4Voida\">Void<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 243
              }
            ],
            "key.bodylength" : 41,
            "key.bodyoffset" : 311,
            "key.doc.declaration" : "func didBoot(_ container: Container) throws -> NIO.EventLoopFuture<Void>",
            "key.doc.full_as_xml" : "<Function><Name>didBoot(_:)<\/Name><USR>s:7Service8ProviderP7didBooty3NIO15EventLoopFutureCyytGAA9Container_pKF<\/USR><Declaration>func didBoot(_ container: Container) throws -&gt; NIO.EventLoopFuture&lt;Void&gt;<\/Declaration><CommentParts><Abstract><Para>Called after the container has fully initialized and after <codeVoice>willBoot(_:)<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.name" : "didBoot(_:)",
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Middlewares\/CurrentURLMiddleware.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>didBoot<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>container<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:7Service9ContainerP\">Container<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 103,
            "key.name" : "didBoot(_:)",
            "key.namelength" : 31,
            "key.nameoffset" : 255,
            "key.offset" : 250,
            "key.overrides" : [
              {
                "key.usr" : "s:7Service8ProviderP7didBooty3NIO15EventLoopFutureCyytGAA9Container_pKF"
              }
            ],
            "key.parsed_declaration" : "public func didBoot(_ container: Container) throws -> Future<Void>",
            "key.parsed_scope.end" : 14,
            "key.parsed_scope.start" : 12,
            "key.substructure" : [

            ],
            "key.typename" : "(CurrentURLProvider) -> (Container) throws -> EventLoopFuture<()>",
            "key.typeusr" : "$sy3NIO15EventLoopFutureCyytG7Service9Container_pKcD",
            "key.usr" : "s:7Service8ProviderP7didBooty3NIO15EventLoopFutureCyytGAA9Container_pKF"
          }
        ],
        "key.typename" : "CurrentURLProvider.Type",
        "key.typeusr" : "$s5Sugar18CurrentURLProviderCmD",
        "key.usr" : "s:5Sugar18CurrentURLProviderC"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public final class CurrentURLContainer : <Type usr=\"s:s7Codablea\">Codable<\/Type>, <Type usr=\"s:7ServiceAAP\">Service<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.final",
            "key.length" : 5,
            "key.offset" : 364
          },
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 357
          }
        ],
        "key.bodylength" : 34,
        "key.bodyoffset" : 415,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 7,
            "key.offset" : 397
          },
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 7,
            "key.offset" : 406
          }
        ],
        "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Middlewares\/CurrentURLMiddleware.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>final<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>CurrentURLContainer<\/decl.name> : <ref.typealias usr=\"s:s7Codablea\">Codable<\/ref.typealias>, <ref.protocol usr=\"s:7ServiceAAP\">Service<\/ref.protocol><\/decl.class>",
        "key.inheritedtypes" : [
          {
            "key.name" : "Codable"
          },
          {
            "key.name" : "Service"
          }
        ],
        "key.kind" : "source.lang.swift.decl.class",
        "key.length" : 80,
        "key.name" : "CurrentURLContainer",
        "key.namelength" : 19,
        "key.nameoffset" : 376,
        "key.offset" : 370,
        "key.parsed_declaration" : "public final class CurrentURLContainer: Codable, Service",
        "key.parsed_scope.end" : 19,
        "key.parsed_scope.start" : 17,
        "key.runtime_name" : "_TtC4main19CurrentURLContainer",
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var path: <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 420
              }
            ],
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Middlewares\/CurrentURLMiddleware.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>path<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 21,
            "key.name" : "path",
            "key.namelength" : 4,
            "key.nameoffset" : 431,
            "key.offset" : 427,
            "key.parsed_declaration" : "public var path: String = \"\"",
            "key.parsed_scope.end" : 18,
            "key.parsed_scope.start" : 18,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "String",
            "key.typeusr" : "$sSSD",
            "key.usr" : "s:5Sugar19CurrentURLContainerC4pathSSvp"
          }
        ],
        "key.typename" : "CurrentURLContainer.Type",
        "key.typeusr" : "$s5Sugar19CurrentURLContainerCmD",
        "key.usr" : "s:5Sugar19CurrentURLContainerC"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public struct CurrentURLMiddleware : <Type usr=\"s:5Vapor10MiddlewareP\">Middleware<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 452
          }
        ],
        "key.bodylength" : 323,
        "key.bodyoffset" : 500,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 10,
            "key.offset" : 488
          }
        ],
        "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Middlewares\/CurrentURLMiddleware.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>CurrentURLMiddleware<\/decl.name> : <ref.protocol usr=\"s:5Vapor10MiddlewareP\">Middleware<\/ref.protocol><\/decl.struct>",
        "key.inheritedtypes" : [
          {
            "key.name" : "Middleware"
          }
        ],
        "key.kind" : "source.lang.swift.decl.struct",
        "key.length" : 365,
        "key.name" : "CurrentURLMiddleware",
        "key.namelength" : 20,
        "key.nameoffset" : 466,
        "key.offset" : 459,
        "key.parsed_declaration" : "public struct CurrentURLMiddleware: Middleware",
        "key.parsed_scope.end" : 30,
        "key.parsed_scope.start" : 21,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public init()<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 505
              }
            ],
            "key.bodylength" : 0,
            "key.bodyoffset" : 520,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Middlewares\/CurrentURLMiddleware.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>()<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 9,
            "key.name" : "init()",
            "key.namelength" : 6,
            "key.nameoffset" : 512,
            "key.offset" : 512,
            "key.parsed_declaration" : "public init()",
            "key.parsed_scope.end" : 22,
            "key.parsed_scope.start" : 22,
            "key.typename" : "(CurrentURLMiddleware.Type) -> () -> CurrentURLMiddleware",
            "key.typeusr" : "$s5Sugar20CurrentURLMiddlewareVycD",
            "key.usr" : "s:5Sugar20CurrentURLMiddlewareVACycfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func respond(to req: <Type usr=\"s:5Vapor7RequestC\">Request<\/Type>, chainingTo next: <Type usr=\"s:5Vapor9ResponderP\">Responder<\/Type>) throws -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:5Vapor8ResponseC\">Response<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 558
              }
            ],
            "key.bodylength" : 170,
            "key.bodyoffset" : 651,
            "key.doc.column" : 17,
            "key.doc.comment" : "See Middleware.respond",
            "key.doc.declaration" : "public func respond(to req: Request, chainingTo next: Responder) throws -> Future<Response>",
            "key.doc.file" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Middlewares\/CurrentURLMiddleware.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Middlewares\/CurrentURLMiddleware.swift\" line=\"25\" column=\"17\"><Name>respond(to:chainingTo:)<\/Name><USR>s:5Sugar20CurrentURLMiddlewareV7respond2to10chainingTo3NIO15EventLoopFutureCy5Vapor8ResponseCGAJ7RequestC_AJ9Responder_ptKF<\/USR><Declaration>public func respond(to req: Request, chainingTo next: Responder) throws -&gt; Future&lt;Response&gt;<\/Declaration><CommentParts><Abstract><Para>See Middleware.respond<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 25,
            "key.doc.name" : "respond(to:chainingTo:)",
            "key.doc.type" : "Function",
            "key.doclength" : 27,
            "key.docoffset" : 527,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Middlewares\/CurrentURLMiddleware.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>respond<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>to<\/decl.var.parameter.argument_label> <decl.var.parameter.name>req<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>chainingTo<\/decl.var.parameter.argument_label> <decl.var.parameter.name>next<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:5Vapor9ResponderP\">Responder<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.class usr=\"s:5Vapor8ResponseC\">Response<\/ref.class>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 257,
            "key.name" : "respond(to:chainingTo:)",
            "key.namelength" : 52,
            "key.nameoffset" : 570,
            "key.offset" : 565,
            "key.overrides" : [
              {
                "key.usr" : "s:5Vapor10MiddlewareP7respond2to10chainingTo3NIO15EventLoopFutureCyAA8ResponseCGAA7RequestC_AA9Responder_ptKF"
              }
            ],
            "key.parsed_declaration" : "public func respond(to req: Request, chainingTo next: Responder) throws -> Future<Response>",
            "key.parsed_scope.end" : 29,
            "key.parsed_scope.start" : 25,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let container: <Type usr=\"s:5Sugar19CurrentURLContainerC\">CurrentURLContainer<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Middlewares\/CurrentURLMiddleware.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>container<\/decl.name>: <decl.var.type><ref.class usr=\"s:5Sugar19CurrentURLContainerC\">CurrentURLContainer<\/ref.class><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 71,
                "key.name" : "container",
                "key.namelength" : 9,
                "key.nameoffset" : 664,
                "key.offset" : 660,
                "key.parsed_declaration" : "let container = try req.privateContainer.make(CurrentURLContainer.self)",
                "key.parsed_scope.end" : 26,
                "key.parsed_scope.start" : 26,
                "key.typename" : "CurrentURLContainer",
                "key.typeusr" : "$s5Sugar19CurrentURLContainerCD",
                "key.usr" : "s:5Sugar20CurrentURLMiddlewareV7respond2to10chainingTo3NIO15EventLoopFutureCy5Vapor8ResponseCGAJ7RequestC_AJ9Responder_ptKF9containerL_AA0B12URLContainerCvp"
              }
            ],
            "key.typename" : "(CurrentURLMiddleware) -> (Request, Responder) throws -> EventLoopFuture<Response>",
            "key.typeusr" : "$s2to10chainingTo3NIO15EventLoopFutureCy5Vapor8ResponseCGAF7RequestC_AF9Responder_ptKcD",
            "key.usr" : "s:5Sugar20CurrentURLMiddlewareV7respond2to10chainingTo3NIO15EventLoopFutureCy5Vapor8ResponseCGAJ7RequestC_AJ9Responder_ptKF"
          }
        ],
        "key.typename" : "CurrentURLMiddleware.Type",
        "key.typeusr" : "$s5Sugar20CurrentURLMiddlewareVmD",
        "key.usr" : "s:5Sugar20CurrentURLMiddlewareV"
      }
    ]
  }
}, {
  "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Middlewares\/CurrentUserMiddleware.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 905,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public final class CurrentUserProvider&lt;U&gt; : <Type usr=\"s:7Service8ProviderP\">Provider<\/Type> where U : <Type usr=\"s:14Authentication15AuthenticatableP\">Authenticatable<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.final",
            "key.length" : 5,
            "key.offset" : 43
          },
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 36
          }
        ],
        "key.bodylength" : 295,
        "key.bodyoffset" : 106,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 8,
            "key.offset" : 96
          }
        ],
        "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Middlewares\/CurrentUserMiddleware.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>final<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>CurrentUserProvider<\/decl.name>&lt;<decl.generic_type_param usr=\"s:5Sugar19CurrentUserProviderC1Uxmfp\"><decl.generic_type_param.name>U<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt; : <ref.protocol usr=\"s:7Service8ProviderP\">Provider<\/ref.protocol> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>U : <ref.protocol usr=\"s:14Authentication15AuthenticatableP\">Authenticatable<\/ref.protocol><\/decl.generic_type_requirement><\/decl.class>",
        "key.inheritedtypes" : [
          {
            "key.name" : "Provider"
          }
        ],
        "key.kind" : "source.lang.swift.decl.class",
        "key.length" : 353,
        "key.name" : "CurrentUserProvider",
        "key.namelength" : 19,
        "key.nameoffset" : 55,
        "key.offset" : 49,
        "key.parsed_declaration" : "public final class CurrentUserProvider<U: Authenticatable>: Provider",
        "key.parsed_scope.end" : 16,
        "key.parsed_scope.start" : 4,
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>U : <Type usr=\"s:14Authentication15AuthenticatableP\">Authenticatable<\/Type><\/Declaration>",
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 15,
                "key.offset" : 78
              }
            ],
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Middlewares\/CurrentUserMiddleware.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>U<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:14Authentication15AuthenticatableP\">Authenticatable<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
            "key.inheritedtypes" : [
              {
                "key.name" : "Authenticatable"
              }
            ],
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 18,
            "key.name" : "U",
            "key.namelength" : 1,
            "key.nameoffset" : 75,
            "key.offset" : 75,
            "key.parsed_declaration" : "public final class CurrentUserProvider<U: Authenticatable>: Provider",
            "key.parsed_scope.end" : 4,
            "key.parsed_scope.start" : 4,
            "key.typename" : "U.Type",
            "key.typeusr" : "$sxmD",
            "key.usr" : "s:5Sugar19CurrentUserProviderC1Uxmfp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public init()<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 111
              }
            ],
            "key.bodylength" : 0,
            "key.bodyoffset" : 126,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Middlewares\/CurrentUserMiddleware.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>()<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 9,
            "key.name" : "init()",
            "key.namelength" : 6,
            "key.nameoffset" : 118,
            "key.offset" : 118,
            "key.parsed_declaration" : "public init()",
            "key.parsed_scope.end" : 5,
            "key.parsed_scope.start" : 5,
            "key.typename" : "<U where U : Authenticatable> (CurrentUserProvider<U>.Type) -> () -> CurrentUserProvider<U>",
            "key.typeusr" : "$s5Sugar19CurrentUserProviderCyxGycD",
            "key.usr" : "s:5Sugar19CurrentUserProviderCACyxGycfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func register(_ services: inout <Type usr=\"s:7Service8ServicesV\">Services<\/Type>) throws<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 133
              }
            ],
            "key.bodylength" : 93,
            "key.bodyoffset" : 190,
            "key.doc.declaration" : "func register(_ services: inout Service.Services) throws",
            "key.doc.discussion" : [
              {
                "CodeListing" : ""
              }
            ],
            "key.doc.full_as_xml" : "<Function><Name>register(_:)<\/Name><USR>s:7Service8ProviderP8registeryyAA8ServicesVzKF<\/USR><Declaration>func register(_ services: inout Service.Services) throws<\/Declaration><CommentParts><Abstract><Para>Register all services you would like to provide the <codeVoice>Container<\/codeVoice> here.<\/Para><\/Abstract><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[services.register(RedisCache.self)]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.name" : "register(_:)",
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Middlewares\/CurrentUserMiddleware.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>register<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>services<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.keyword>inout<\/syntaxtype.keyword> <ref.struct usr=\"s:7Service8ServicesV\">Services<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 144,
            "key.name" : "register(_:)",
            "key.namelength" : 36,
            "key.nameoffset" : 145,
            "key.offset" : 140,
            "key.overrides" : [
              {
                "key.usr" : "s:7Service8ProviderP8registeryyAA8ServicesVzKF"
              }
            ],
            "key.parsed_declaration" : "public func register(_ services: inout Services) throws",
            "key.parsed_scope.end" : 11,
            "key.parsed_scope.start" : 7,
            "key.substructure" : [

            ],
            "key.typename" : "<U where U : Authenticatable> (CurrentUserProvider<U>) -> (inout Services) throws -> ()",
            "key.typeusr" : "$syy7Service8ServicesVzKcD",
            "key.usr" : "s:7Service8ProviderP8registeryyAA8ServicesVzKF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func didBoot(_ container: <Type usr=\"s:7Service9ContainerP\">Container<\/Type>) throws -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:s4Voida\">Void<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 290
              }
            ],
            "key.bodylength" : 41,
            "key.bodyoffset" : 358,
            "key.doc.declaration" : "func didBoot(_ container: Container) throws -> NIO.EventLoopFuture<Void>",
            "key.doc.full_as_xml" : "<Function><Name>didBoot(_:)<\/Name><USR>s:7Service8ProviderP7didBooty3NIO15EventLoopFutureCyytGAA9Container_pKF<\/USR><Declaration>func didBoot(_ container: Container) throws -&gt; NIO.EventLoopFuture&lt;Void&gt;<\/Declaration><CommentParts><Abstract><Para>Called after the container has fully initialized and after <codeVoice>willBoot(_:)<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.name" : "didBoot(_:)",
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Middlewares\/CurrentUserMiddleware.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>didBoot<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>container<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:7Service9ContainerP\">Container<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 103,
            "key.name" : "didBoot(_:)",
            "key.namelength" : 31,
            "key.nameoffset" : 302,
            "key.offset" : 297,
            "key.overrides" : [
              {
                "key.usr" : "s:7Service8ProviderP7didBooty3NIO15EventLoopFutureCyytGAA9Container_pKF"
              }
            ],
            "key.parsed_declaration" : "public func didBoot(_ container: Container) throws -> Future<Void>",
            "key.parsed_scope.end" : 15,
            "key.parsed_scope.start" : 13,
            "key.substructure" : [

            ],
            "key.typename" : "<U where U : Authenticatable> (CurrentUserProvider<U>) -> (Container) throws -> EventLoopFuture<()>",
            "key.typeusr" : "$sy3NIO15EventLoopFutureCyytG7Service9Container_pKcD",
            "key.usr" : "s:7Service8ProviderP7didBooty3NIO15EventLoopFutureCyytGAA9Container_pKF"
          }
        ],
        "key.typename" : "CurrentUserProvider<U>.Type",
        "key.typeusr" : "$s5Sugar19CurrentUserProviderCyxGmD",
        "key.usr" : "s:5Sugar19CurrentUserProviderC"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public final class CurrentUserContainer&lt;U&gt; : <Type usr=\"s:7ServiceAAP\">Service<\/Type> where U : <Type usr=\"s:14Authentication15AuthenticatableP\">Authenticatable<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.final",
            "key.length" : 5,
            "key.offset" : 411
          },
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 404
          }
        ],
        "key.bodylength" : 25,
        "key.bodyoffset" : 474,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 7,
            "key.offset" : 465
          }
        ],
        "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Middlewares\/CurrentUserMiddleware.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>final<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>CurrentUserContainer<\/decl.name>&lt;<decl.generic_type_param usr=\"s:5Sugar20CurrentUserContainerC1Uxmfp\"><decl.generic_type_param.name>U<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt; : <ref.protocol usr=\"s:7ServiceAAP\">Service<\/ref.protocol> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>U : <ref.protocol usr=\"s:14Authentication15AuthenticatableP\">Authenticatable<\/ref.protocol><\/decl.generic_type_requirement><\/decl.class>",
        "key.inheritedtypes" : [
          {
            "key.name" : "Service"
          }
        ],
        "key.kind" : "source.lang.swift.decl.class",
        "key.length" : 83,
        "key.name" : "CurrentUserContainer",
        "key.namelength" : 20,
        "key.nameoffset" : 423,
        "key.offset" : 417,
        "key.parsed_declaration" : "public final class CurrentUserContainer<U: Authenticatable>: Service",
        "key.parsed_scope.end" : 20,
        "key.parsed_scope.start" : 18,
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>U : <Type usr=\"s:14Authentication15AuthenticatableP\">Authenticatable<\/Type><\/Declaration>",
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 15,
                "key.offset" : 447
              }
            ],
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Middlewares\/CurrentUserMiddleware.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>U<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:14Authentication15AuthenticatableP\">Authenticatable<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
            "key.inheritedtypes" : [
              {
                "key.name" : "Authenticatable"
              }
            ],
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 18,
            "key.name" : "U",
            "key.namelength" : 1,
            "key.nameoffset" : 444,
            "key.offset" : 444,
            "key.parsed_declaration" : "public final class CurrentUserContainer<U: Authenticatable>: Service",
            "key.parsed_scope.end" : 18,
            "key.parsed_scope.start" : 18,
            "key.typename" : "U.Type",
            "key.typeusr" : "$sxmD",
            "key.usr" : "s:5Sugar20CurrentUserContainerC1Uxmfp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var user: U?<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 479
              }
            ],
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Middlewares\/CurrentUserMiddleware.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>user<\/decl.name>: <decl.var.type>U?<\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 12,
            "key.name" : "user",
            "key.namelength" : 4,
            "key.nameoffset" : 490,
            "key.offset" : 486,
            "key.parsed_declaration" : "public var user: U?",
            "key.parsed_scope.end" : 19,
            "key.parsed_scope.start" : 19,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "U?",
            "key.typeusr" : "$sxSgD",
            "key.usr" : "s:5Sugar20CurrentUserContainerC4userxSgvp"
          }
        ],
        "key.typename" : "CurrentUserContainer<U>.Type",
        "key.typeusr" : "$s5Sugar20CurrentUserContainerCyxGmD",
        "key.usr" : "s:5Sugar20CurrentUserContainerC"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public struct CurrentUserMiddleware&lt;U&gt; : <Type usr=\"s:5Vapor10MiddlewareP\">Middleware<\/Type> where U : <Type usr=\"s:14Authentication15AuthenticatableP\">Authenticatable<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 502
          }
        ],
        "key.bodylength" : 332,
        "key.bodyoffset" : 571,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 10,
            "key.offset" : 559
          }
        ],
        "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Middlewares\/CurrentUserMiddleware.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>CurrentUserMiddleware<\/decl.name>&lt;<decl.generic_type_param usr=\"s:5Sugar21CurrentUserMiddlewareV1Uxmfp\"><decl.generic_type_param.name>U<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt; : <ref.protocol usr=\"s:5Vapor10MiddlewareP\">Middleware<\/ref.protocol> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>U : <ref.protocol usr=\"s:14Authentication15AuthenticatableP\">Authenticatable<\/ref.protocol><\/decl.generic_type_requirement><\/decl.struct>",
        "key.inheritedtypes" : [
          {
            "key.name" : "Middleware"
          }
        ],
        "key.kind" : "source.lang.swift.decl.struct",
        "key.length" : 395,
        "key.name" : "CurrentUserMiddleware",
        "key.namelength" : 21,
        "key.nameoffset" : 516,
        "key.offset" : 509,
        "key.parsed_declaration" : "public struct CurrentUserMiddleware<U: Authenticatable>: Middleware",
        "key.parsed_scope.end" : 31,
        "key.parsed_scope.start" : 22,
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>U : <Type usr=\"s:14Authentication15AuthenticatableP\">Authenticatable<\/Type><\/Declaration>",
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 15,
                "key.offset" : 541
              }
            ],
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Middlewares\/CurrentUserMiddleware.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>U<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:14Authentication15AuthenticatableP\">Authenticatable<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
            "key.inheritedtypes" : [
              {
                "key.name" : "Authenticatable"
              }
            ],
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 18,
            "key.name" : "U",
            "key.namelength" : 1,
            "key.nameoffset" : 538,
            "key.offset" : 538,
            "key.parsed_declaration" : "public struct CurrentUserMiddleware<U: Authenticatable>: Middleware",
            "key.parsed_scope.end" : 22,
            "key.parsed_scope.start" : 22,
            "key.typename" : "U.Type",
            "key.typeusr" : "$sxmD",
            "key.usr" : "s:5Sugar21CurrentUserMiddlewareV1Uxmfp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public init()<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 576
              }
            ],
            "key.bodylength" : 0,
            "key.bodyoffset" : 591,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Middlewares\/CurrentUserMiddleware.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>()<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 9,
            "key.name" : "init()",
            "key.namelength" : 6,
            "key.nameoffset" : 583,
            "key.offset" : 583,
            "key.parsed_declaration" : "public init()",
            "key.parsed_scope.end" : 23,
            "key.parsed_scope.start" : 23,
            "key.typename" : "<U where U : Authenticatable> (CurrentUserMiddleware<U>.Type) -> () -> CurrentUserMiddleware<U>",
            "key.typeusr" : "$s5Sugar21CurrentUserMiddlewareVyxGycD",
            "key.usr" : "s:5Sugar21CurrentUserMiddlewareVACyxGycfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func respond(to req: <Type usr=\"s:5Vapor7RequestC\">Request<\/Type>, chainingTo next: <Type usr=\"s:5Vapor9ResponderP\">Responder<\/Type>) throws -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:5Vapor8ResponseC\">Response<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 629
              }
            ],
            "key.bodylength" : 179,
            "key.bodyoffset" : 722,
            "key.doc.column" : 17,
            "key.doc.comment" : "See Middleware.respond",
            "key.doc.declaration" : "public func respond(to req: Request, chainingTo next: Responder) throws -> Future<Response>",
            "key.doc.file" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Middlewares\/CurrentUserMiddleware.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Middlewares\/CurrentUserMiddleware.swift\" line=\"26\" column=\"17\"><Name>respond(to:chainingTo:)<\/Name><USR>s:5Sugar21CurrentUserMiddlewareV7respond2to10chainingTo3NIO15EventLoopFutureCy5Vapor8ResponseCGAJ7RequestC_AJ9Responder_ptKF<\/USR><Declaration>public func respond(to req: Request, chainingTo next: Responder) throws -&gt; Future&lt;Response&gt;<\/Declaration><CommentParts><Abstract><Para>See Middleware.respond<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 26,
            "key.doc.name" : "respond(to:chainingTo:)",
            "key.doc.type" : "Function",
            "key.doclength" : 27,
            "key.docoffset" : 598,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Middlewares\/CurrentUserMiddleware.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>respond<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>to<\/decl.var.parameter.argument_label> <decl.var.parameter.name>req<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>chainingTo<\/decl.var.parameter.argument_label> <decl.var.parameter.name>next<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:5Vapor9ResponderP\">Responder<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.class usr=\"s:5Vapor8ResponseC\">Response<\/ref.class>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 266,
            "key.name" : "respond(to:chainingTo:)",
            "key.namelength" : 52,
            "key.nameoffset" : 641,
            "key.offset" : 636,
            "key.overrides" : [
              {
                "key.usr" : "s:5Vapor10MiddlewareP7respond2to10chainingTo3NIO15EventLoopFutureCyAA8ResponseCGAA7RequestC_AA9Responder_ptKF"
              }
            ],
            "key.parsed_declaration" : "public func respond(to req: Request, chainingTo next: Responder) throws -> Future<Response>",
            "key.parsed_scope.end" : 30,
            "key.parsed_scope.start" : 26,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let container: <Type usr=\"s:5Sugar20CurrentUserContainerC\">CurrentUserContainer<\/Type>&lt;U&gt;<\/Declaration>",
                "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Middlewares\/CurrentUserMiddleware.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>container<\/decl.name>: <decl.var.type><ref.class usr=\"s:5Sugar20CurrentUserContainerC\">CurrentUserContainer<\/ref.class>&lt;U&gt;<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 75,
                "key.name" : "container",
                "key.namelength" : 9,
                "key.nameoffset" : 735,
                "key.offset" : 731,
                "key.parsed_declaration" : "let container = try req.privateContainer.make(CurrentUserContainer<U>.self)",
                "key.parsed_scope.end" : 27,
                "key.parsed_scope.start" : 27,
                "key.typename" : "CurrentUserContainer<U>",
                "key.typeusr" : "$s5Sugar20CurrentUserContainerCyxGD",
                "key.usr" : "s:5Sugar21CurrentUserMiddlewareV7respond2to10chainingTo3NIO15EventLoopFutureCy5Vapor8ResponseCGAJ7RequestC_AJ9Responder_ptKF9containerL_AA0bC9ContainerCyxGvp"
              }
            ],
            "key.typename" : "<U where U : Authenticatable> (CurrentUserMiddleware<U>) -> (Request, Responder) throws -> EventLoopFuture<Response>",
            "key.typeusr" : "$s2to10chainingTo3NIO15EventLoopFutureCy5Vapor8ResponseCGAF7RequestC_AF9Responder_ptKcD",
            "key.usr" : "s:5Sugar21CurrentUserMiddlewareV7respond2to10chainingTo3NIO15EventLoopFutureCy5Vapor8ResponseCGAJ7RequestC_AJ9Responder_ptKF"
          }
        ],
        "key.typename" : "CurrentUserMiddleware<U>.Type",
        "key.typeusr" : "$s5Sugar21CurrentUserMiddlewareVyxGmD",
        "key.usr" : "s:5Sugar21CurrentUserMiddlewareV"
      }
    ]
  }
}, {
  "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Validation\/StrongPasswordValidator.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 2359,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public struct PasswordRegex<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 19
          }
        ],
        "key.bodylength" : 200,
        "key.bodyoffset" : 48,
        "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Validation\/StrongPasswordValidator.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>PasswordRegex<\/decl.name><\/decl.struct>",
        "key.kind" : "source.lang.swift.decl.struct",
        "key.length" : 223,
        "key.name" : "PasswordRegex",
        "key.namelength" : 13,
        "key.nameoffset" : 33,
        "key.offset" : 26,
        "key.parsed_declaration" : "public struct PasswordRegex",
        "key.parsed_scope.end" : 11,
        "key.parsed_scope.start" : 3,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public let pattern: <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 53
              }
            ],
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Validation\/StrongPasswordValidator.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>pattern<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 19,
            "key.name" : "pattern",
            "key.namelength" : 7,
            "key.nameoffset" : 64,
            "key.offset" : 60,
            "key.parsed_declaration" : "public let pattern: String",
            "key.parsed_scope.end" : 4,
            "key.parsed_scope.start" : 4,
            "key.typename" : "String",
            "key.typeusr" : "$sSSD",
            "key.usr" : "s:5Sugar13PasswordRegexV7patternSSvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public let description: <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 84
              }
            ],
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Validation\/StrongPasswordValidator.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>description<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 23,
            "key.name" : "description",
            "key.namelength" : 11,
            "key.nameoffset" : 95,
            "key.offset" : 91,
            "key.parsed_declaration" : "public let description: String",
            "key.parsed_scope.end" : 5,
            "key.parsed_scope.start" : 5,
            "key.typename" : "String",
            "key.typeusr" : "$sSSD",
            "key.usr" : "s:5Sugar13PasswordRegexV11descriptionSSvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public init(pattern: <Type usr=\"s:SS\">String<\/Type>, description: <Type usr=\"s:SS\">String<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 120
              }
            ],
            "key.bodylength" : 75,
            "key.bodyoffset" : 171,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Validation\/StrongPasswordValidator.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>pattern<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>description<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 120,
            "key.name" : "init(pattern:description:)",
            "key.namelength" : 42,
            "key.nameoffset" : 127,
            "key.offset" : 127,
            "key.parsed_declaration" : "public init(pattern: String, description: String)",
            "key.parsed_scope.end" : 10,
            "key.parsed_scope.start" : 7,
            "key.substructure" : [

            ],
            "key.typename" : "(PasswordRegex.Type) -> (String, String) -> PasswordRegex",
            "key.typeusr" : "$s7pattern11description5Sugar13PasswordRegexVSS_SStcD",
            "key.usr" : "s:5Sugar13PasswordRegexV7pattern11descriptionACSS_SStcfc"
          }
        ],
        "key.typename" : "PasswordRegex.Type",
        "key.typeusr" : "$s5Sugar13PasswordRegexVmD",
        "key.usr" : "s:5Sugar13PasswordRegexV"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.annotated_decl" : "<Declaration>struct Validator&lt;T&gt; : <Type usr=\"s:s23CustomStringConvertibleP\">CustomStringConvertible<\/Type><\/Declaration>",
        "key.bodylength" : 861,
        "key.bodyoffset" : 272,
        "key.doc.declaration" : "struct Validator<T> : CustomStringConvertible",
        "key.doc.discussion" : [
          {
            "Para" : "All validation operators (`&&`, `||`, `!`, etc) work on `Validator`s."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Adding static properties to this type will enable leading-dot syntax when composing validators."
          },
          {
            "CodeListing" : ""
          }
        ],
        "key.doc.full_as_xml" : "<Class><Name>Validator<\/Name><USR>s:10Validation9ValidatorV<\/USR><Declaration>struct Validator&lt;T&gt; : CustomStringConvertible<\/Declaration><CommentParts><Abstract><Para>A discrete <codeVoice>Validator<\/codeVoice>. Usually created by calling <codeVoice>ValidatorType.validator()<\/codeVoice>.<\/Para><\/Abstract><Discussion><Para>All validation operators (<codeVoice>&amp;&amp;<\/codeVoice>, <codeVoice>||<\/codeVoice>, <codeVoice>!<\/codeVoice>, etc) work on <codeVoice>Validator<\/codeVoice>s.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[try validations.add(\\.firstName, .count(5...) && .alphanumeric)]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Adding static properties to this type will enable leading-dot syntax when composing validators.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[extension Validator {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    static var myValidation: Validator<T> { return MyValidator().validator() }]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.name" : "Validator",
        "key.doc.type" : "Class",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>Validator<\/decl.name>&lt;<decl.generic_type_param usr=\"s:10Validation9ValidatorV1Txmfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt; : <ref.protocol usr=\"s:s23CustomStringConvertibleP\">CustomStringConvertible<\/ref.protocol><\/decl.struct>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 883,
        "key.modulename" : "Validation",
        "key.name" : "Validator",
        "key.namelength" : 9,
        "key.nameoffset" : 261,
        "key.offset" : 251,
        "key.parsed_declaration" : "extension Validator",
        "key.parsed_scope.end" : 40,
        "key.parsed_scope.start" : 13,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static func strongPassword(regexes: [<Type usr=\"s:5Sugar13PasswordRegexV\">PasswordRegex<\/Type>] = [\n            PasswordRegex(\n                pattern: &quot;^.*[a-z].*$&quot;,\n                description: &quot;has a lowercase character&quot;\n            ),\n            PasswordRegex(\n                pattern: &quot;^.*[A-Z].*$&quot;,\n                description: &quot;has a uppercase character&quot;\n            ),\n            PasswordRegex(\n                pattern: &quot;^.*[0-9].*$&quot;,\n                description: &quot;has a digit&quot;\n            ),\n            PasswordRegex(\n                pattern: &quot;^.*[^a-zA-Z0-9].*$&quot;,\n                description: &quot;has a special character (e.g. !@#$%^)&quot;\n            )\n        ], requiredMatches: <Type usr=\"s:Si\">Int<\/Type> = 3) -&gt; <Type usr=\"s:10Validation9ValidatorV\">Validator<\/Type>&lt;<Type usr=\"s:SS\">String<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 277
              }
            ],
            "key.bodylength" : 150,
            "key.bodyoffset" : 981,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Validation\/StrongPasswordValidator.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>strongPassword<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>regexes<\/decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:5Sugar13PasswordRegexV\">PasswordRegex<\/ref.struct>]<\/decl.var.parameter.type> = [\n            PasswordRegex(\n                pattern: &quot;^.*[a-z].*$&quot;,\n                description: &quot;has a lowercase character&quot;\n            ),\n            PasswordRegex(\n                pattern: &quot;^.*[A-Z].*$&quot;,\n                description: &quot;has a uppercase character&quot;\n            ),\n            PasswordRegex(\n                pattern: &quot;^.*[0-9].*$&quot;,\n                description: &quot;has a digit&quot;\n            ),\n            PasswordRegex(\n                pattern: &quot;^.*[^a-zA-Z0-9].*$&quot;,\n                description: &quot;has a special character (e.g. !@#$%^)&quot;\n            )\n        ]<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>requiredMatches<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type> = 3<\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:10Validation9ValidatorV\">Validator<\/ref.struct>&lt;<ref.struct usr=\"s:SS\">String<\/ref.struct>&gt;<\/decl.function.returntype><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 848,
            "key.name" : "strongPassword(regexes:requiredMatches:)",
            "key.namelength" : 662,
            "key.nameoffset" : 296,
            "key.offset" : 284,
            "key.parsed_declaration" : "public static func strongPassword(\n    regexes: [PasswordRegex] = [\n        PasswordRegex(\n            pattern: \"^.*[a-z].*$\",\n            description: \"has a lowercase character\"\n        ),\n        PasswordRegex(\n            pattern: \"^.*[A-Z].*$\",\n            description: \"has a uppercase character\"\n        ),\n        PasswordRegex(\n            pattern: \"^.*[0-9].*$\",\n            description: \"has a digit\"\n        ),\n        PasswordRegex(\n            pattern: \"^.*[^a-zA-Z0-9].*$\",\n            description: \"has a special character (e.g. !@#$%^)\"\n        )\n    ],\n    requiredMatches: Int = 3\n) -> Validator<String>",
            "key.parsed_scope.end" : 39,
            "key.parsed_scope.start" : 14,
            "key.substructure" : [

            ],
            "key.typename" : "<T> (Validator<T>.Type) -> ([PasswordRegex], Int) -> Validator<String>",
            "key.typeusr" : "$s7regexes15requiredMatches10Validation9ValidatorVySSGSay5Sugar13PasswordRegexVG_SitcD",
            "key.usr" : "s:10Validation9ValidatorV5SugarE14strongPassword7regexes15requiredMatchesACySSGSayAD0E5RegexVG_SitFZ"
          }
        ],
        "key.typename" : "Validator<T>.Type",
        "key.typeusr" : "$s10Validation9ValidatorVyxGmD",
        "key.usr" : "s:10Validation9ValidatorV"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.fileprivate",
        "key.annotated_decl" : "<Declaration>fileprivate struct StrongPasswordValidator&lt;T&gt; : <Type usr=\"s:10Validation13ValidatorTypeP\">ValidatorType<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.fileprivate",
            "key.length" : 11,
            "key.offset" : 1223
          }
        ],
        "key.bodylength" : 892,
        "key.bodyoffset" : 1285,
        "key.doc.column" : 20,
        "key.doc.comment" : "Validates whether the string satisfies the given required number of regex matches.",
        "key.doc.declaration" : "fileprivate struct StrongPasswordValidator<T> : ValidatorType",
        "key.doc.file" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Validation\/StrongPasswordValidator.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Validation\/StrongPasswordValidator.swift\" line=\"43\" column=\"20\"><Name>StrongPasswordValidator<\/Name><USR>s:5Sugar23StrongPasswordValidator33_F179DFBD189A45F25958D16EC1158583LLV<\/USR><Declaration>fileprivate struct StrongPasswordValidator&lt;T&gt; : ValidatorType<\/Declaration><CommentParts><Abstract><Para>Validates whether the string satisfies the given required number of regex matches.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 43,
        "key.doc.name" : "StrongPasswordValidator",
        "key.doc.type" : "Class",
        "key.doclength" : 87,
        "key.docoffset" : 1136,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 13,
            "key.offset" : 1270
          }
        ],
        "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Validation\/StrongPasswordValidator.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>fileprivate<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>StrongPasswordValidator<\/decl.name>&lt;<decl.generic_type_param usr=\"s:5Sugar23StrongPasswordValidator33_F179DFBD189A45F25958D16EC1158583LLV1Txmfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt; : <ref.protocol usr=\"s:10Validation13ValidatorTypeP\">ValidatorType<\/ref.protocol><\/decl.struct>",
        "key.inheritedtypes" : [
          {
            "key.name" : "ValidatorType"
          }
        ],
        "key.kind" : "source.lang.swift.decl.struct",
        "key.length" : 943,
        "key.name" : "StrongPasswordValidator",
        "key.namelength" : 23,
        "key.nameoffset" : 1242,
        "key.offset" : 1235,
        "key.parsed_declaration" : "fileprivate struct StrongPasswordValidator<T>: ValidatorType",
        "key.parsed_scope.end" : 71,
        "key.parsed_scope.start" : 43,
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>T<\/Declaration>",
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Validation\/StrongPasswordValidator.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>",
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 1,
            "key.name" : "T",
            "key.namelength" : 1,
            "key.nameoffset" : 1266,
            "key.offset" : 1266,
            "key.parsed_declaration" : "fileprivate struct StrongPasswordValidator<T>: ValidatorType",
            "key.parsed_scope.end" : 43,
            "key.parsed_scope.start" : 43,
            "key.typename" : "T.Type",
            "key.typeusr" : "$sxmD",
            "key.usr" : "s:5Sugar23StrongPasswordValidator33_F179DFBD189A45F25958D16EC1158583LLV1Txmfp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>var validatorReadable: <Type usr=\"s:SS\">String<\/Type> { get }<\/Declaration>",
            "key.bodylength" : 104,
            "key.bodyoffset" : 1350,
            "key.doc.column" : 9,
            "key.doc.comment" : "See `ValidatorType`.",
            "key.doc.declaration" : "var validatorReadable: String { get }",
            "key.doc.file" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Validation\/StrongPasswordValidator.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Validation\/StrongPasswordValidator.swift\" line=\"45\" column=\"9\"><Name>validatorReadable<\/Name><USR>s:5Sugar23StrongPasswordValidator33_F179DFBD189A45F25958D16EC1158583LLV17validatorReadableSSvp<\/USR><Declaration>var validatorReadable: String { get }<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>ValidatorType<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 45,
            "key.doc.name" : "validatorReadable",
            "key.doc.type" : "Other",
            "key.doclength" : 25,
            "key.docoffset" : 1290,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Validation\/StrongPasswordValidator.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>validatorReadable<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 136,
            "key.name" : "validatorReadable",
            "key.namelength" : 17,
            "key.nameoffset" : 1323,
            "key.offset" : 1319,
            "key.overrides" : [
              {
                "key.usr" : "s:10Validation13ValidatorTypeP17validatorReadableSSvp"
              }
            ],
            "key.parsed_declaration" : "var validatorReadable: String",
            "key.parsed_scope.end" : 47,
            "key.parsed_scope.start" : 45,
            "key.typename" : "String",
            "key.typeusr" : "$sSSD",
            "key.usr" : "s:5Sugar23StrongPasswordValidator33_F179DFBD189A45F25958D16EC1158583LLV17validatorReadableSSvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>let regexes: [<Type usr=\"s:5Sugar13PasswordRegexV\">PasswordRegex<\/Type>]<\/Declaration>",
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Validation\/StrongPasswordValidator.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>regexes<\/decl.name>: <decl.var.type>[<ref.struct usr=\"s:5Sugar13PasswordRegexV\">PasswordRegex<\/ref.struct>]<\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 28,
            "key.name" : "regexes",
            "key.namelength" : 7,
            "key.nameoffset" : 1465,
            "key.offset" : 1461,
            "key.parsed_declaration" : "let regexes: [PasswordRegex]",
            "key.parsed_scope.end" : 49,
            "key.parsed_scope.start" : 49,
            "key.typename" : "[PasswordRegex]",
            "key.typeusr" : "$sSay5Sugar13PasswordRegexVGD",
            "key.usr" : "s:5Sugar23StrongPasswordValidator33_F179DFBD189A45F25958D16EC1158583LLV7regexesSayAA0C5RegexVGvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>let requiredMatches: <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Validation\/StrongPasswordValidator.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>requiredMatches<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 24,
            "key.name" : "requiredMatches",
            "key.namelength" : 15,
            "key.nameoffset" : 1498,
            "key.offset" : 1494,
            "key.parsed_declaration" : "let requiredMatches: Int",
            "key.parsed_scope.end" : 50,
            "key.parsed_scope.start" : 50,
            "key.typename" : "Int",
            "key.typeusr" : "$sSiD",
            "key.usr" : "s:5Sugar23StrongPasswordValidator33_F179DFBD189A45F25958D16EC1158583LLV15requiredMatchesSivp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>init(regexes: [<Type usr=\"s:5Sugar13PasswordRegexV\">PasswordRegex<\/Type>], requiredMatches: <Type usr=\"s:Si\">Int<\/Type>)<\/Declaration>",
            "key.bodylength" : 83,
            "key.bodyoffset" : 1578,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Validation\/StrongPasswordValidator.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>regexes<\/decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:5Sugar13PasswordRegexV\">PasswordRegex<\/ref.struct>]<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>requiredMatches<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 138,
            "key.name" : "init(regexes:requiredMatches:)",
            "key.namelength" : 52,
            "key.nameoffset" : 1524,
            "key.offset" : 1524,
            "key.parsed_declaration" : "init(regexes: [PasswordRegex], requiredMatches: Int)",
            "key.parsed_scope.end" : 55,
            "key.parsed_scope.start" : 52,
            "key.substructure" : [

            ],
            "key.typename" : "<T> (StrongPasswordValidator<T>.Type) -> ([PasswordRegex], Int) -> StrongPasswordValidator<T>",
            "key.typeusr" : "$s7regexes15requiredMatches5Sugar23StrongPasswordValidator33_F179DFBD189A45F25958D16EC1158583LLVyxGSayAC0F5RegexVG_SitcD",
            "key.usr" : "s:5Sugar23StrongPasswordValidator33_F179DFBD189A45F25958D16EC1158583LLV7regexes15requiredMatchesADyxGSayAA0C5RegexVG_Sitcfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>func validate(_ data: <Type usr=\"s:SS\">String<\/Type>) throws<\/Declaration>",
            "key.bodylength" : 440,
            "key.bodyoffset" : 1735,
            "key.doc.column" : 10,
            "key.doc.comment" : "See `ValidatorType`.",
            "key.doc.declaration" : "func validate(_ data: String) throws",
            "key.doc.file" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Validation\/StrongPasswordValidator.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Validation\/StrongPasswordValidator.swift\" line=\"58\" column=\"10\"><Name>validate(_:)<\/Name><USR>s:5Sugar23StrongPasswordValidator33_F179DFBD189A45F25958D16EC1158583LLV8validateyySSKF<\/USR><Declaration>func validate(_ data: String) throws<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>ValidatorType<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 58,
            "key.doc.name" : "validate(_:)",
            "key.doc.type" : "Function",
            "key.doclength" : 25,
            "key.docoffset" : 1668,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Validation\/StrongPasswordValidator.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>validate<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>data<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 479,
            "key.name" : "validate(_:)",
            "key.namelength" : 24,
            "key.nameoffset" : 1702,
            "key.offset" : 1697,
            "key.overrides" : [
              {
                "key.usr" : "s:10Validation13ValidatorTypeP8validateyy0A4DataQzKF"
              }
            ],
            "key.parsed_declaration" : "func validate(_ data: String) throws",
            "key.parsed_scope.end" : 70,
            "key.parsed_scope.start" : 58,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let matchingRegexesCount: <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Validation\/StrongPasswordValidator.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>matchingRegexesCount<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 170,
                "key.name" : "matchingRegexesCount",
                "key.namelength" : 20,
                "key.nameoffset" : 1748,
                "key.offset" : 1744,
                "key.parsed_declaration" : "let matchingRegexesCount = regexes",
                "key.parsed_scope.end" : 59,
                "key.parsed_scope.start" : 59,
                "key.typename" : "Int",
                "key.typeusr" : "$sSiD",
                "key.usr" : "s:5Sugar23StrongPasswordValidator33_F179DFBD189A45F25958D16EC1158583LLV8validateyySSKF20matchingRegexesCountL_Sivp"
              }
            ],
            "key.typename" : "<T> (StrongPasswordValidator<T>) -> (String) throws -> ()",
            "key.typeusr" : "$syySSKcD",
            "key.usr" : "s:5Sugar23StrongPasswordValidator33_F179DFBD189A45F25958D16EC1158583LLV8validateyySSKF"
          }
        ],
        "key.typename" : "StrongPasswordValidator<T>.Type",
        "key.typeusr" : "$s5Sugar23StrongPasswordValidator33_F179DFBD189A45F25958D16EC1158583LLVyxGmD",
        "key.usr" : "s:5Sugar23StrongPasswordValidator33_F179DFBD189A45F25958D16EC1158583LLV"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.fileprivate",
        "key.annotated_decl" : "<Declaration>protocol Sequence<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.fileprivate",
            "key.length" : 11,
            "key.offset" : 2180
          }
        ],
        "key.bodylength" : 105,
        "key.bodyoffset" : 2252,
        "key.doc.declaration" : "protocol Sequence",
        "key.doc.discussion" : [
          {
            "Para" : "A sequence is a list of values that you can step through one at a time. The most common way to iterate over the elements of a sequence is to use a `for`-`in` loop:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "While seemingly simple, this capability gives you access to a large number of operations that you can perform on any sequence. As an example, to check whether a sequence includes a particular value, you can test each value sequentially until you’ve found a match or reached the end of the sequence. This example checks to see whether a particular insect is in an array."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "The `Sequence` protocol provides default implementations for many common operations that depend on sequential access to a sequence’s values. For clearer, more concise code, the example above could use the array’s `contains(_:)` method, which every sequence inherits from `Sequence`, instead of iterating manually:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "The `Sequence` protocol makes no requirement on conforming types regarding whether they will be destructively consumed by iteration. As a consequence, don’t assume that multiple `for`-`in` loops on a sequence will either resume iteration or restart from the beginning:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "In this case, you cannot assume either that a sequence will be consumable and will resume iteration, or that a sequence is a collection and will restart iteration from the first element. A conforming sequence that is not a collection is allowed to produce an arbitrary sequence of elements in the second `for`-`in` loop."
          },
          {
            "Para" : "To establish that a type you’ve created supports nondestructive iteration, add conformance to the `Collection` protocol."
          },
          {
            "Para" : "Making your own custom types conform to `Sequence` enables many useful operations, like `for`-`in` looping and the `contains` method, without much effort. To add `Sequence` conformance to your own custom type, add a `makeIterator()` method that returns an iterator."
          },
          {
            "Para" : "Alternatively, if your type can act as its own iterator, implementing the requirements of the `IteratorProtocol` protocol and declaring conformance to both `Sequence` and `IteratorProtocol` are sufficient."
          },
          {
            "Para" : "Here’s a definition of a `Countdown` sequence that serves as its own iterator. The `makeIterator()` method is provided as a default implementation."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "A sequence should provide its iterator in O(1). The `Sequence` protocol makes no other requirements about element access, so routines that traverse a sequence should be considered O() unless documented otherwise."
          }
        ],
        "key.doc.full_as_xml" : "<Class><Name>Sequence<\/Name><USR>s:ST<\/USR><Declaration>protocol Sequence<\/Declaration><CommentParts><Abstract><Para>A type that provides sequential, iterated access to its elements.<\/Para><\/Abstract><Discussion><Para>A sequence is a list of values that you can step through one at a time. The most common way to iterate over the elements of a sequence is to use a <codeVoice>for<\/codeVoice>-<codeVoice>in<\/codeVoice> loop:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let oneTwoThree = 1...3]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[for number in oneTwoThree {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(number)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"1\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"2\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"3\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>While seemingly simple, this capability gives you access to a large number of operations that you can perform on any sequence. As an example, to check whether a sequence includes a particular value, you can test each value sequentially until you’ve found a match or reached the end of the sequence. This example checks to see whether a particular insect is in an array.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let bugs = [\"Aphid\", \"Bumblebee\", \"Cicada\", \"Damselfly\", \"Earwig\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[var hasMosquito = false]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[for bug in bugs {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    if bug == \"Mosquito\" {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        hasMosquito = true]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        break]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    }]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(\"'bugs' has a mosquito: \\(hasMosquito)\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"'bugs' has a mosquito: false\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The <codeVoice>Sequence<\/codeVoice> protocol provides default implementations for many common operations that depend on sequential access to a sequence’s values. For clearer, more concise code, the example above could use the array’s <codeVoice>contains(_:)<\/codeVoice> method, which every sequence inherits from <codeVoice>Sequence<\/codeVoice>, instead of iterating manually:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[if bugs.contains(\"Mosquito\") {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(\"Break out the bug spray.\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[} else {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(\"Whew, no mosquitos!\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"Whew, no mosquitos!\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h1>]]><\/rawHTML>Repeated Access<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>The <codeVoice>Sequence<\/codeVoice> protocol makes no requirement on conforming types regarding whether they will be destructively consumed by iteration. As a consequence, don’t assume that multiple <codeVoice>for<\/codeVoice>-<codeVoice>in<\/codeVoice> loops on a sequence will either resume iteration or restart from the beginning:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[for element in sequence {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    if ... some condition { break }]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[for element in sequence {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    \/\/ No defined behavior]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>In this case, you cannot assume either that a sequence will be consumable and will resume iteration, or that a sequence is a collection and will restart iteration from the first element. A conforming sequence that is not a collection is allowed to produce an arbitrary sequence of elements in the second <codeVoice>for<\/codeVoice>-<codeVoice>in<\/codeVoice> loop.<\/Para><Para>To establish that a type you’ve created supports nondestructive iteration, add conformance to the <codeVoice>Collection<\/codeVoice> protocol.<\/Para><rawHTML><![CDATA[<h1>]]><\/rawHTML>Conforming to the Sequence Protocol<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>Making your own custom types conform to <codeVoice>Sequence<\/codeVoice> enables many useful operations, like <codeVoice>for<\/codeVoice>-<codeVoice>in<\/codeVoice> looping and the <codeVoice>contains<\/codeVoice> method, without much effort. To add <codeVoice>Sequence<\/codeVoice> conformance to your own custom type, add a <codeVoice>makeIterator()<\/codeVoice> method that returns an iterator.<\/Para><Para>Alternatively, if your type can act as its own iterator, implementing the requirements of the <codeVoice>IteratorProtocol<\/codeVoice> protocol and declaring conformance to both <codeVoice>Sequence<\/codeVoice> and <codeVoice>IteratorProtocol<\/codeVoice> are sufficient.<\/Para><Para>Here’s a definition of a <codeVoice>Countdown<\/codeVoice> sequence that serves as its own iterator. The <codeVoice>makeIterator()<\/codeVoice> method is provided as a default implementation.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[struct Countdown: Sequence, IteratorProtocol {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    var count: Int]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    mutating func next() -> Int? {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        if count == 0 {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[            return nil]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        } else {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[            defer { count -= 1 }]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[            return count]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        }]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    }]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let threeToGo = Countdown(count: 3)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[for i in threeToGo {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(i)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"3\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"2\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"1\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h1>]]><\/rawHTML>Expected Performance<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>A sequence should provide its iterator in O(1). The <codeVoice>Sequence<\/codeVoice> protocol makes no other requirements about element access, so routines that traverse a sequence should be considered O(<emphasis>n<\/emphasis>) unless documented otherwise.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.name" : "Sequence",
        "key.doc.type" : "Class",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>Sequence<\/decl.name><\/decl.protocol>",
        "key.groupname" : "Collection",
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 166,
        "key.modulename" : "Swift",
        "key.name" : "Sequence",
        "key.namelength" : 8,
        "key.nameoffset" : 2202,
        "key.offset" : 2192,
        "key.parsed_declaration" : "fileprivate extension Sequence where Iterator.Element == PasswordRegex",
        "key.parsed_scope.end" : 77,
        "key.parsed_scope.start" : 73,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.fileprivate",
            "key.annotated_decl" : "<Declaration>var requirements: <Type usr=\"s:SS\">String<\/Type> { get }<\/Declaration>",
            "key.bodylength" : 72,
            "key.bodyoffset" : 2283,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Validation\/StrongPasswordValidator.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>requirements<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.groupname" : "Collection",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 99,
            "key.name" : "requirements",
            "key.namelength" : 12,
            "key.nameoffset" : 2261,
            "key.offset" : 2257,
            "key.parsed_declaration" : "var requirements: String",
            "key.parsed_scope.end" : 76,
            "key.parsed_scope.start" : 74,
            "key.typename" : "String",
            "key.typeusr" : "$sSSD",
            "key.usr" : "s:ST5SugarAA13PasswordRegexV7ElementRtzrlE12requirements33_F179DFBD189A45F25958D16EC1158583LLSSvp"
          }
        ],
        "key.typename" : "Sequence.Protocol",
        "key.typeusr" : "$sST_pmD",
        "key.usr" : "s:ST"
      }
    ]
  }
}, {
  "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Validation\/UniqueField.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 1038,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.annotated_decl" : "<Declaration>struct UniqueFieldValidationError : <Type usr=\"s:10Validation0A5ErrorP\">ValidationError<\/Type><\/Declaration>",
        "key.bodylength" : 264,
        "key.bodyoffset" : 80,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 15,
            "key.offset" : 63
          }
        ],
        "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Validation\/UniqueField.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>UniqueFieldValidationError<\/decl.name> : <ref.protocol usr=\"s:10Validation0A5ErrorP\">ValidationError<\/ref.protocol><\/decl.struct>",
        "key.inheritedtypes" : [
          {
            "key.name" : "ValidationError"
          }
        ],
        "key.kind" : "source.lang.swift.decl.struct",
        "key.length" : 317,
        "key.name" : "UniqueFieldValidationError",
        "key.namelength" : 26,
        "key.nameoffset" : 35,
        "key.offset" : 28,
        "key.parsed_declaration" : "struct UniqueFieldValidationError: ValidationError",
        "key.parsed_scope.end" : 13,
        "key.parsed_scope.start" : 4,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>var path: [<Type usr=\"s:SS\">String<\/Type>]<\/Declaration>",
            "key.doc.declaration" : "var path: [String] { get set }",
            "key.doc.full_as_xml" : "<Other><Name>path<\/Name><USR>s:10Validation0A5ErrorP4pathSaySSGvp<\/USR><Declaration>var path: [String] { get set }<\/Declaration><CommentParts><Abstract><Para>Key path to the invalid data.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.name" : "path",
            "key.doc.type" : "Other",
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Validation\/UniqueField.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>path<\/decl.name>: <decl.var.type>[<ref.struct usr=\"s:SS\">String<\/ref.struct>]<\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 18,
            "key.name" : "path",
            "key.namelength" : 4,
            "key.nameoffset" : 89,
            "key.offset" : 85,
            "key.overrides" : [
              {
                "key.usr" : "s:10Validation0A5ErrorP4pathSaySSGvp"
              }
            ],
            "key.parsed_declaration" : "var path: [String]",
            "key.parsed_scope.end" : 5,
            "key.parsed_scope.start" : 5,
            "key.setter_accessibility" : "source.lang.swift.accessibility.internal",
            "key.typename" : "[String]",
            "key.typeusr" : "$sSaySSGD",
            "key.usr" : "s:10Validation0A5ErrorP4pathSaySSGvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>let reason: <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
            "key.doc.declaration" : "var reason: String { get }",
            "key.doc.full_as_xml" : "<Other><Name>reason<\/Name><USR>s:9Debugging10DebuggableP6reasonSSvp<\/USR><Declaration>var reason: String { get }<\/Declaration><CommentParts><Abstract><Para>The reason for the error. Usually one sentence (that should end with a period).<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.name" : "reason",
            "key.doc.type" : "Other",
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Validation\/UniqueField.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>reason<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 18,
            "key.name" : "reason",
            "key.namelength" : 6,
            "key.nameoffset" : 112,
            "key.offset" : 108,
            "key.overrides" : [
              {
                "key.usr" : "s:9Debugging10DebuggableP6reasonSSvp"
              }
            ],
            "key.parsed_declaration" : "let reason: String",
            "key.parsed_scope.end" : 6,
            "key.parsed_scope.start" : 6,
            "key.typename" : "String",
            "key.typeusr" : "$sSSD",
            "key.usr" : "s:9Debugging10DebuggableP6reasonSSvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>init&lt;U&gt;(type: <Type usr=\"s:5Sugar26UniqueFieldValidationErrorV4type5valueACxm_s28CustomDebugStringConvertible_ptclufc1UL_xmfp\">U<\/Type>.Type = U.self, value: <Type usr=\"s:s28CustomDebugStringConvertibleP\">CustomDebugStringConvertible<\/Type>)<\/Declaration>",
            "key.bodylength" : 141,
            "key.bodyoffset" : 201,
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Validation\/UniqueField.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>init<\/syntaxtype.keyword>&lt;<decl.generic_type_param usr=\"s:5Sugar26UniqueFieldValidationErrorV4type5valueACxm_s28CustomDebugStringConvertible_ptclufc1UL_xmfp\"><decl.generic_type_param.name>U<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>type<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:5Sugar26UniqueFieldValidationErrorV4type5valueACxm_s28CustomDebugStringConvertible_ptclufc1UL_xmfp\">U<\/ref.generic_type_param>.Type<\/decl.var.parameter.type> = U.self<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>value<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.protocol usr=\"s:s28CustomDebugStringConvertibleP\">CustomDebugStringConvertible<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 211,
            "key.name" : "init(type:value:)",
            "key.namelength" : 67,
            "key.nameoffset" : 132,
            "key.offset" : 132,
            "key.parsed_declaration" : "init<U>(type: U.Type = U.self, value: CustomDebugStringConvertible)",
            "key.parsed_scope.end" : 12,
            "key.parsed_scope.start" : 8,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>U<\/Declaration>",
                "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Validation\/UniqueField.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>U<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 1,
                "key.name" : "U",
                "key.namelength" : 1,
                "key.nameoffset" : 137,
                "key.offset" : 137,
                "key.parsed_declaration" : "init<U>(type: U.Type = U.self, value: CustomDebugStringConvertible)",
                "key.parsed_scope.end" : 8,
                "key.parsed_scope.start" : 8,
                "key.typename" : "U.Type",
                "key.typeusr" : "$sxmD",
                "key.usr" : "s:5Sugar26UniqueFieldValidationErrorV4type5valueACxm_s28CustomDebugStringConvertible_ptclufc1UL_xmfp"
              }
            ],
            "key.typename" : "<U> (UniqueFieldValidationError.Type) -> (U.Type, CustomDebugStringConvertible) -> UniqueFieldValidationError",
            "key.typeusr" : "$s4type5value5Sugar26UniqueFieldValidationErrorVxm_s28CustomDebugStringConvertible_ptcluD",
            "key.usr" : "s:5Sugar26UniqueFieldValidationErrorV4type5valueACxm_s28CustomDebugStringConvertible_ptclufc"
          }
        ],
        "key.typename" : "UniqueFieldValidationError.Type",
        "key.typeusr" : "$s5Sugar26UniqueFieldValidationErrorVmD",
        "key.usr" : "s:5Sugar26UniqueFieldValidationErrorV"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public func validateThat&lt;U, T&gt;(only entity: <Type usr=\"s:5Sugar12validateThat4only3has3for2on3NIO15EventLoopFutureCySay10Validation0L5Error_pGGxSg_q_Sgs7KeyPathCyxq_G11DatabaseKit0P11Connectable_pt6Fluent5ModelRzs28CustomDebugStringConvertibleR_SER_SQR_r0_lF1UL_xmfp\">U<\/Type>?, has value: <Type usr=\"s:5Sugar12validateThat4only3has3for2on3NIO15EventLoopFutureCySay10Validation0L5Error_pGGxSg_q_Sgs7KeyPathCyxq_G11DatabaseKit0P11Connectable_pt6Fluent5ModelRzs28CustomDebugStringConvertibleR_SER_SQR_r0_lF1TL_q_mfp\">T<\/Type>?, for keyPath: <Type usr=\"s:s7KeyPathC\">KeyPath<\/Type>&lt;<Type usr=\"s:5Sugar12validateThat4only3has3for2on3NIO15EventLoopFutureCySay10Validation0L5Error_pGGxSg_q_Sgs7KeyPathCyxq_G11DatabaseKit0P11Connectable_pt6Fluent5ModelRzs28CustomDebugStringConvertibleR_SER_SQR_r0_lF1UL_xmfp\">U<\/Type>, <Type usr=\"s:5Sugar12validateThat4only3has3for2on3NIO15EventLoopFutureCySay10Validation0L5Error_pGGxSg_q_Sgs7KeyPathCyxq_G11DatabaseKit0P11Connectable_pt6Fluent5ModelRzs28CustomDebugStringConvertibleR_SER_SQR_r0_lF1TL_q_mfp\">T<\/Type>&gt;, on db: <Type usr=\"s:11DatabaseKit0A11ConnectableP\">DatabaseConnectable<\/Type>) -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;[<Type usr=\"s:10Validation0A5ErrorP\">ValidationError<\/Type>]&gt; where U : <Type usr=\"s:6Fluent5ModelP\">Model<\/Type>, T : <Type usr=\"s:s28CustomDebugStringConvertibleP\">CustomDebugStringConvertible<\/Type>, T : <Type usr=\"s:SE\">Encodable<\/Type>, T : <Type usr=\"s:SQ\">Equatable<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 347
          }
        ],
        "key.bodylength" : 461,
        "key.bodyoffset" : 575,
        "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Validation\/UniqueField.swift",
        "key.fully_annotated_decl" : "<decl.function.free><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>validateThat<\/decl.name>&lt;<decl.generic_type_param usr=\"s:5Sugar12validateThat4only3has3for2on3NIO15EventLoopFutureCySay10Validation0L5Error_pGGxSg_q_Sgs7KeyPathCyxq_G11DatabaseKit0P11Connectable_pt6Fluent5ModelRzs28CustomDebugStringConvertibleR_SER_SQR_r0_lF1UL_xmfp\"><decl.generic_type_param.name>U<\/decl.generic_type_param.name><\/decl.generic_type_param>, <decl.generic_type_param usr=\"s:5Sugar12validateThat4only3has3for2on3NIO15EventLoopFutureCySay10Validation0L5Error_pGGxSg_q_Sgs7KeyPathCyxq_G11DatabaseKit0P11Connectable_pt6Fluent5ModelRzs28CustomDebugStringConvertibleR_SER_SQR_r0_lF1TL_q_mfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>only<\/decl.var.parameter.argument_label> <decl.var.parameter.name>entity<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:5Sugar12validateThat4only3has3for2on3NIO15EventLoopFutureCySay10Validation0L5Error_pGGxSg_q_Sgs7KeyPathCyxq_G11DatabaseKit0P11Connectable_pt6Fluent5ModelRzs28CustomDebugStringConvertibleR_SER_SQR_r0_lF1UL_xmfp\">U<\/ref.generic_type_param>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>has<\/decl.var.parameter.argument_label> <decl.var.parameter.name>value<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:5Sugar12validateThat4only3has3for2on3NIO15EventLoopFutureCySay10Validation0L5Error_pGGxSg_q_Sgs7KeyPathCyxq_G11DatabaseKit0P11Connectable_pt6Fluent5ModelRzs28CustomDebugStringConvertibleR_SER_SQR_r0_lF1TL_q_mfp\">T<\/ref.generic_type_param>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>for<\/decl.var.parameter.argument_label> <decl.var.parameter.name>keyPath<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:s7KeyPathC\">KeyPath<\/ref.class>&lt;<ref.generic_type_param usr=\"s:5Sugar12validateThat4only3has3for2on3NIO15EventLoopFutureCySay10Validation0L5Error_pGGxSg_q_Sgs7KeyPathCyxq_G11DatabaseKit0P11Connectable_pt6Fluent5ModelRzs28CustomDebugStringConvertibleR_SER_SQR_r0_lF1UL_xmfp\">U<\/ref.generic_type_param>, <ref.generic_type_param usr=\"s:5Sugar12validateThat4only3has3for2on3NIO15EventLoopFutureCySay10Validation0L5Error_pGGxSg_q_Sgs7KeyPathCyxq_G11DatabaseKit0P11Connectable_pt6Fluent5ModelRzs28CustomDebugStringConvertibleR_SER_SQR_r0_lF1TL_q_mfp\">T<\/ref.generic_type_param>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>on<\/decl.var.parameter.argument_label> <decl.var.parameter.name>db<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:11DatabaseKit0A11ConnectableP\">DatabaseConnectable<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;[<ref.protocol usr=\"s:10Validation0A5ErrorP\">ValidationError<\/ref.protocol>]&gt;<\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>U : <ref.protocol usr=\"s:6Fluent5ModelP\">Model<\/ref.protocol><\/decl.generic_type_requirement>, <decl.generic_type_requirement>T : <ref.protocol usr=\"s:s28CustomDebugStringConvertibleP\">CustomDebugStringConvertible<\/ref.protocol><\/decl.generic_type_requirement>, <decl.generic_type_requirement>T : <ref.protocol usr=\"s:SE\">Encodable<\/ref.protocol><\/decl.generic_type_requirement>, <decl.generic_type_requirement>T : <ref.protocol usr=\"s:SQ\">Equatable<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.free>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 683,
        "key.name" : "validateThat(only:has:for:on:)",
        "key.namelength" : 185,
        "key.nameoffset" : 359,
        "key.offset" : 354,
        "key.parsed_declaration" : "public func validateThat<U: Model, T: Encodable & Equatable & CustomDebugStringConvertible>(\n    only entity: U?,\n    has value: T?,\n    for keyPath: KeyPath<U, T>,\n    on db: DatabaseConnectable\n) -> Future<[ValidationError]>",
        "key.parsed_scope.end" : 40,
        "key.parsed_scope.start" : 15,
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>U : <Type usr=\"s:6Fluent5ModelP\">Model<\/Type><\/Declaration>",
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 5,
                "key.offset" : 375
              }
            ],
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Validation\/UniqueField.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>U<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:6Fluent5ModelP\">Model<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
            "key.inheritedtypes" : [
              {
                "key.name" : "Model"
              }
            ],
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 8,
            "key.name" : "U",
            "key.namelength" : 1,
            "key.nameoffset" : 372,
            "key.offset" : 372,
            "key.parsed_declaration" : "public func validateThat<U: Model, T: Encodable & Equatable & CustomDebugStringConvertible>(",
            "key.parsed_scope.end" : 15,
            "key.parsed_scope.start" : 15,
            "key.typename" : "U.Type",
            "key.typeusr" : "$sxmD",
            "key.usr" : "s:5Sugar12validateThat4only3has3for2on3NIO15EventLoopFutureCySay10Validation0L5Error_pGGxSg_q_Sgs7KeyPathCyxq_G11DatabaseKit0P11Connectable_pt6Fluent5ModelRzs28CustomDebugStringConvertibleR_SER_SQR_r0_lF1UL_xmfp"
          },
          {
            "key.annotated_decl" : "<Declaration>T : <Type usr=\"s:SE\">Encodable<\/Type> &amp; <Type usr=\"s:SQ\">Equatable<\/Type> &amp; <Type usr=\"s:s28CustomDebugStringConvertibleP\">CustomDebugStringConvertible<\/Type><\/Declaration>",
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 52,
                "key.offset" : 385
              }
            ],
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Validation\/UniqueField.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:SE\">Encodable<\/ref.protocol> &amp; <ref.protocol usr=\"s:SQ\">Equatable<\/ref.protocol> &amp; <ref.protocol usr=\"s:s28CustomDebugStringConvertibleP\">CustomDebugStringConvertible<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
            "key.inheritedtypes" : [
              {
                "key.name" : "Encodable & Equatable & CustomDebugStringConvertible"
              }
            ],
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 55,
            "key.name" : "T",
            "key.namelength" : 1,
            "key.nameoffset" : 382,
            "key.offset" : 382,
            "key.parsed_declaration" : "public func validateThat<U: Model, T: Encodable & Equatable & CustomDebugStringConvertible>(",
            "key.parsed_scope.end" : 15,
            "key.parsed_scope.start" : 15,
            "key.typename" : "T.Type",
            "key.typeusr" : "$sq_mD",
            "key.usr" : "s:5Sugar12validateThat4only3has3for2on3NIO15EventLoopFutureCySay10Validation0L5Error_pGGxSg_q_Sgs7KeyPathCyxq_G11DatabaseKit0P11Connectable_pt6Fluent5ModelRzs28CustomDebugStringConvertibleR_SER_SQR_r0_lF1TL_q_mfp"
          },
          {
            "key.annotated_decl" : "<Declaration>var query: <Type usr=\"s:6Fluent12QueryBuilderC\">QueryBuilder<\/Type>&lt;U.Database, U&gt;<\/Declaration>",
            "key.filepath" : "\/Users\/emilmarashliev\/Projects\/sugar\/Sources\/Sugar\/Validation\/UniqueField.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>query<\/decl.name>: <decl.var.type><ref.class usr=\"s:6Fluent12QueryBuilderC\">QueryBuilder<\/ref.class>&lt;U.Database, U&gt;<\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 61,
            "key.name" : "query",
            "key.namelength" : 5,
            "key.nameoffset" : 655,
            "key.offset" : 651,
            "key.parsed_declaration" : "var query = U.query(on: db)",
            "key.parsed_scope.end" : 25,
            "key.parsed_scope.start" : 25,
            "key.typename" : "QueryBuilder<U.Database, U>",
            "key.typeusr" : "$s6Fluent12QueryBuilderCy8DatabaseAA5ModelPQzxGD",
            "key.usr" : "s:5Sugar12validateThat4only3has3for2on3NIO15EventLoopFutureCySay10Validation0L5Error_pGGxSg_q_Sgs7KeyPathCyxq_G11DatabaseKit0P11Connectable_pt6Fluent5ModelRzs28CustomDebugStringConvertibleR_SER_SQR_r0_lF5queryL_AU12QueryBuilderCy0P0QzxGvp"
          }
        ],
        "key.typename" : "<U, T where U : Model, T : CustomDebugStringConvertible, T : Encodable, T : Equatable> (only: U?, has: T?, for: KeyPath<U, T>, on: DatabaseConnectable) -> EventLoopFuture<[ValidationError]>",
        "key.typeusr" : "$s4only3has3for2on3NIO15EventLoopFutureCySay10Validation0I5Error_pGGxSg_q_Sgs7KeyPathCyxq_G11DatabaseKit0M11Connectable_ptc6Fluent5ModelRzs28CustomDebugStringConvertibleR_SER_SQR_r0_luD",
        "key.usr" : "s:5Sugar12validateThat4only3has3for2on3NIO15EventLoopFutureCySay10Validation0L5Error_pGGxSg_q_Sgs7KeyPathCyxq_G11DatabaseKit0P11Connectable_pt6Fluent5ModelRzs28CustomDebugStringConvertibleR_SER_SQR_r0_lF"
      }
    ]
  }
}]
